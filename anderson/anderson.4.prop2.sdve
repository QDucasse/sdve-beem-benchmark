byte[4] Slot = {1, 0, 0, 0, 0};
byte next = 0;
state {NCS(0), p1(1), p2(2), p3(3), CS(4)} P_0.state = 0;
byte P_0.my_place = 0;
state {NCS(0), p1(1), p2(2), p3(3), CS(4)} P_1.state = 0;
byte P_1.my_place = 0;
state {NCS(0), p1(1), p2(2), p3(3), CS(4)} P_2.state = 0;
byte P_2.my_place = 0;
state {NCS(0), p1(1), p2(2), p3(3), CS(4)} P_3.state = 0;
byte P_3.my_place = 0;
state {q1(0), q2(1)} LTL_property.state = 0;

  process P_0
    guardBlock
      temp bool t_0 = P_0.state == 0;
    guardCondition t_0;
    effect
      P_0.state = 1,
      P_0.my_place = next,
      temp int t_1 = next + 1,
      next = t_1;

  process P_0
    guardBlock
      temp bool t_2 = P_0.state == 1,
      temp bool t_3 = P_0.my_place == 3,
      temp bool t_4 = t_2 and t_3;
    guardCondition t_4;
    effect
      P_0.state = 2,
      temp int t_5 = next - 4,
      next = t_5;

  process P_0
    guardBlock
      temp bool t_6 = P_0.state == 1,
      temp bool t_7 = P_0.my_place != 3,
      temp bool t_8 = t_6 and t_7;
    guardCondition t_8;
    effect
      P_0.state = 2,
      temp int t_9 = P_0.my_place % 4,
      P_0.my_place = t_9;

  process P_0
    guardBlock
      temp bool t_10 = P_0.state == 2,
      temp byte t_11 = Slot[P_0.my_place],
      temp bool t_12 = t_11 == 1,
      temp bool t_13 = t_10 and t_12;
    guardCondition t_13;
    effect
      P_0.state = 3;

  process P_0
    guardBlock
      temp bool t_14 = P_0.state == 3;
    guardCondition t_14;
    effect
      P_0.state = 4,
      Slot[P_0.my_place] = 0;

  process P_0
    guardBlock
      temp bool t_15 = P_0.state == 4;
    guardCondition t_15;
    effect
      P_0.state = 0,
      temp int t_16 = P_0.my_place + 1,
      temp int t_17 = t_16 % 4,
      Slot[t_17] = 1;

  process P_1
    guardBlock
      temp bool t_18 = P_1.state == 0;
    guardCondition t_18;
    effect
      P_1.state = 1,
      P_1.my_place = next,
      temp int t_19 = next + 1,
      next = t_19;

  process P_1
    guardBlock
      temp bool t_20 = P_1.state == 1,
      temp bool t_21 = P_1.my_place == 3,
      temp bool t_22 = t_20 and t_21;
    guardCondition t_22;
    effect
      P_1.state = 2,
      temp int t_23 = next - 4,
      next = t_23;

  process P_1
    guardBlock
      temp bool t_24 = P_1.state == 1,
      temp bool t_25 = P_1.my_place != 3,
      temp bool t_26 = t_24 and t_25;
    guardCondition t_26;
    effect
      P_1.state = 2,
      temp int t_27 = P_1.my_place % 4,
      P_1.my_place = t_27;

  process P_1
    guardBlock
      temp bool t_28 = P_1.state == 2,
      temp byte t_29 = Slot[P_1.my_place],
      temp bool t_30 = t_29 == 1,
      temp bool t_31 = t_28 and t_30;
    guardCondition t_31;
    effect
      P_1.state = 3;

  process P_1
    guardBlock
      temp bool t_32 = P_1.state == 3;
    guardCondition t_32;
    effect
      P_1.state = 4,
      Slot[P_1.my_place] = 0;

  process P_1
    guardBlock
      temp bool t_33 = P_1.state == 4;
    guardCondition t_33;
    effect
      P_1.state = 0,
      temp int t_34 = P_1.my_place + 1,
      temp int t_35 = t_34 % 4,
      Slot[t_35] = 1;

  process P_2
    guardBlock
      temp bool t_36 = P_2.state == 0;
    guardCondition t_36;
    effect
      P_2.state = 1,
      P_2.my_place = next,
      temp int t_37 = next + 1,
      next = t_37;

  process P_2
    guardBlock
      temp bool t_38 = P_2.state == 1,
      temp bool t_39 = P_2.my_place == 3,
      temp bool t_40 = t_38 and t_39;
    guardCondition t_40;
    effect
      P_2.state = 2,
      temp int t_41 = next - 4,
      next = t_41;

  process P_2
    guardBlock
      temp bool t_42 = P_2.state == 1,
      temp bool t_43 = P_2.my_place != 3,
      temp bool t_44 = t_42 and t_43;
    guardCondition t_44;
    effect
      P_2.state = 2,
      temp int t_45 = P_2.my_place % 4,
      P_2.my_place = t_45;

  process P_2
    guardBlock
      temp bool t_46 = P_2.state == 2,
      temp byte t_47 = Slot[P_2.my_place],
      temp bool t_48 = t_47 == 1,
      temp bool t_49 = t_46 and t_48;
    guardCondition t_49;
    effect
      P_2.state = 3;

  process P_2
    guardBlock
      temp bool t_50 = P_2.state == 3;
    guardCondition t_50;
    effect
      P_2.state = 4,
      Slot[P_2.my_place] = 0;

  process P_2
    guardBlock
      temp bool t_51 = P_2.state == 4;
    guardCondition t_51;
    effect
      P_2.state = 0,
      temp int t_52 = P_2.my_place + 1,
      temp int t_53 = t_52 % 4,
      Slot[t_53] = 1;

  process P_3
    guardBlock
      temp bool t_54 = P_3.state == 0;
    guardCondition t_54;
    effect
      P_3.state = 1,
      P_3.my_place = next,
      temp int t_55 = next + 1,
      next = t_55;

  process P_3
    guardBlock
      temp bool t_56 = P_3.state == 1,
      temp bool t_57 = P_3.my_place == 3,
      temp bool t_58 = t_56 and t_57;
    guardCondition t_58;
    effect
      P_3.state = 2,
      temp int t_59 = next - 4,
      next = t_59;

  process P_3
    guardBlock
      temp bool t_60 = P_3.state == 1,
      temp bool t_61 = P_3.my_place != 3,
      temp bool t_62 = t_60 and t_61;
    guardCondition t_62;
    effect
      P_3.state = 2,
      temp int t_63 = P_3.my_place % 4,
      P_3.my_place = t_63;

  process P_3
    guardBlock
      temp bool t_64 = P_3.state == 2,
      temp byte t_65 = Slot[P_3.my_place],
      temp bool t_66 = t_65 == 1,
      temp bool t_67 = t_64 and t_66;
    guardCondition t_67;
    effect
      P_3.state = 3;

  process P_3
    guardBlock
      temp bool t_68 = P_3.state == 3;
    guardCondition t_68;
    effect
      P_3.state = 4,
      Slot[P_3.my_place] = 0;

  process P_3
    guardBlock
      temp bool t_69 = P_3.state == 4;
    guardCondition t_69;
    effect
      P_3.state = 0,
      temp int t_70 = P_3.my_place + 1,
      temp int t_71 = t_70 % 4,
      Slot[t_71] = 1;

  process LTL_property
    guardBlock
      temp bool t_72 = LTL_property.state == 0;
    guardCondition t_72;
    effect
      LTL_property.state = 0;

  process LTL_property
    guardBlock
      temp bool t_73 = LTL_property.state == 0,
      temp bool t_74 = P_0.state == 1,
      temp bool t_75 = P_0.state == 2,
      temp bool t_76 = t_74 or t_75,
      temp bool t_77 = P_0.state == 3,
      temp bool t_78 = t_76 or t_77,
      temp bool t_79 = P_0.state == 4,
      temp bool t_80 = not t_79,
      temp bool t_81 = t_78 and t_80,
      temp bool t_82 = t_73 and t_81;
    guardCondition t_82;
    effect
      LTL_property.state = 1;

  process LTL_property
    guardBlock
      temp bool t_83 = LTL_property.state == 1,
      temp bool t_84 = P_0.state == 4,
      temp bool t_85 = not t_84,
      temp bool t_86 = t_83 and t_85;
    guardCondition t_86;
    effect
      LTL_property.state = 1;
      accepting conditions
      LTL_property.state == 1
       
