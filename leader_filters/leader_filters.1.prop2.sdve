byte turn[6] =  {0, 0, 0, 0, 0};
byte b[6] =  {0, 0, 0, 0, 0};
byte c[6] =  {0, 0, 0, 0, 0};
state {p1(0), p2(1), p3(2), p4(3), p5(4), p6(5), p7(6), p8(7), p9(8), elected(9)} P_0.state = 0;
byte P_0.curr = 0;
state {p1(0), p2(1), p3(2), p4(3), p5(4), p6(5), p7(6), p8(7), p9(8), elected(9)} P_1.state = 0;
byte P_1.curr = 0;
state {p1(0), p2(1), p3(2), p4(3), p5(4), p6(5), p7(6), p8(7), p9(8), elected(9)} P_2.state = 0;
byte P_2.curr = 0;
state {q1(0)} LTL_property.state = 0;

  process P_0
    guardBlock
      temp bool t_0 = P_0.state == 0;
    guardCondition t_0;
    effect
      P_0.state = 1,
      turn[P_0.curr] = 0;

  process P_0
    guardBlock
      temp bool t_1 = P_0.state == 1,
      temp byte t_2 = b[P_0.curr],
      temp bool t_3 = t_2 == 0,
      temp bool t_4 = t_1 and t_3;
    guardCondition t_4;
    effect
      P_0.state = 2;

  process P_0
    guardBlock
      temp bool t_5 = P_0.state == 2;
    guardCondition t_5;
    effect
      P_0.state = 3,
      b[P_0.curr] = 1;

  process P_0
    guardBlock
      temp bool t_6 = P_0.state == 3,
      temp byte t_7 = turn[P_0.curr],
      temp bool t_8 = t_7 != 0,
      temp bool t_9 = t_6 and t_8;
    guardCondition t_9;
    effect
      P_0.state = 4;

  process P_0
    guardBlock
      temp bool t_10 = P_0.state == 4;
    guardCondition t_10;
    effect
      P_0.state = 5,
      c[P_0.curr] = 1;

  process P_0
    guardBlock
      temp bool t_11 = P_0.state == 5;
    guardCondition t_11;
    effect
      P_0.state = 6,
      b[P_0.curr] = 0;

  process P_0
    guardBlock
      temp bool t_12 = P_0.state == 3,
      temp byte t_13 = turn[P_0.curr],
      temp bool t_14 = t_13 == 0,
      temp bool t_15 = t_12 and t_14;
    guardCondition t_15;
    effect
      P_0.state = 7;

  process P_0
    guardBlock
      temp bool t_16 = P_0.state == 7,
      temp bool t_17 = P_0.curr > 0,
      temp int t_18 = P_0.curr - 1,
      temp byte t_19 = c[t_18],
      temp bool t_20 = t_19 == 0,
      temp bool t_21 = t_17 and t_20,
      temp bool t_22 = t_16 and t_21;
    guardCondition t_22;
    effect
      P_0.state = 8;

  process P_0
    guardBlock
      temp bool t_23 = P_0.state == 8;
    guardCondition t_23;
    effect
      P_0.state = 9;

  process P_0
    guardBlock
      temp bool t_24 = P_0.state == 7,
      temp bool t_25 = P_0.curr == 0,
      temp int t_26 = P_0.curr - 1,
      temp byte t_27 = c[t_26],
      temp bool t_28 = t_27 == 1,
      temp bool t_29 = t_25 or t_28,
      temp bool t_30 = t_24 and t_29;
    guardCondition t_30;
    effect
      P_0.state = 0,
      temp int t_31 = P_0.curr + 1,
      P_0.curr = t_31;

  process P_1
    guardBlock
      temp bool t_32 = P_1.state == 0;
    guardCondition t_32;
    effect
      P_1.state = 1,
      turn[P_1.curr] = 1;

  process P_1
    guardBlock
      temp bool t_33 = P_1.state == 1,
      temp byte t_34 = b[P_1.curr],
      temp bool t_35 = t_34 == 0,
      temp bool t_36 = t_33 and t_35;
    guardCondition t_36;
    effect
      P_1.state = 2;

  process P_1
    guardBlock
      temp bool t_37 = P_1.state == 2;
    guardCondition t_37;
    effect
      P_1.state = 3,
      b[P_1.curr] = 1;

  process P_1
    guardBlock
      temp bool t_38 = P_1.state == 3,
      temp byte t_39 = turn[P_1.curr],
      temp bool t_40 = t_39 != 1,
      temp bool t_41 = t_38 and t_40;
    guardCondition t_41;
    effect
      P_1.state = 4;

  process P_1
    guardBlock
      temp bool t_42 = P_1.state == 4;
    guardCondition t_42;
    effect
      P_1.state = 5,
      c[P_1.curr] = 1;

  process P_1
    guardBlock
      temp bool t_43 = P_1.state == 5;
    guardCondition t_43;
    effect
      P_1.state = 6,
      b[P_1.curr] = 0;

  process P_1
    guardBlock
      temp bool t_44 = P_1.state == 3,
      temp byte t_45 = turn[P_1.curr],
      temp bool t_46 = t_45 == 1,
      temp bool t_47 = t_44 and t_46;
    guardCondition t_47;
    effect
      P_1.state = 7;

  process P_1
    guardBlock
      temp bool t_48 = P_1.state == 7,
      temp bool t_49 = P_1.curr > 0,
      temp int t_50 = P_1.curr - 1,
      temp byte t_51 = c[t_50],
      temp bool t_52 = t_51 == 0,
      temp bool t_53 = t_49 and t_52,
      temp bool t_54 = t_48 and t_53;
    guardCondition t_54;
    effect
      P_1.state = 8;

  process P_1
    guardBlock
      temp bool t_55 = P_1.state == 8;
    guardCondition t_55;
    effect
      P_1.state = 9;

  process P_1
    guardBlock
      temp bool t_56 = P_1.state == 7,
      temp bool t_57 = P_1.curr == 0,
      temp int t_58 = P_1.curr - 1,
      temp byte t_59 = c[t_58],
      temp bool t_60 = t_59 == 1,
      temp bool t_61 = t_57 or t_60,
      temp bool t_62 = t_56 and t_61;
    guardCondition t_62;
    effect
      P_1.state = 0,
      temp int t_63 = P_1.curr + 1,
      P_1.curr = t_63;

  process P_2
    guardBlock
      temp bool t_64 = P_2.state == 0;
    guardCondition t_64;
    effect
      P_2.state = 1,
      turn[P_2.curr] = 2;

  process P_2
    guardBlock
      temp bool t_65 = P_2.state == 1,
      temp byte t_66 = b[P_2.curr],
      temp bool t_67 = t_66 == 0,
      temp bool t_68 = t_65 and t_67;
    guardCondition t_68;
    effect
      P_2.state = 2;

  process P_2
    guardBlock
      temp bool t_69 = P_2.state == 2;
    guardCondition t_69;
    effect
      P_2.state = 3,
      b[P_2.curr] = 1;

  process P_2
    guardBlock
      temp bool t_70 = P_2.state == 3,
      temp byte t_71 = turn[P_2.curr],
      temp bool t_72 = t_71 != 2,
      temp bool t_73 = t_70 and t_72;
    guardCondition t_73;
    effect
      P_2.state = 4;

  process P_2
    guardBlock
      temp bool t_74 = P_2.state == 4;
    guardCondition t_74;
    effect
      P_2.state = 5,
      c[P_2.curr] = 1;

  process P_2
    guardBlock
      temp bool t_75 = P_2.state == 5;
    guardCondition t_75;
    effect
      P_2.state = 6,
      b[P_2.curr] = 0;

  process P_2
    guardBlock
      temp bool t_76 = P_2.state == 3,
      temp byte t_77 = turn[P_2.curr],
      temp bool t_78 = t_77 == 2,
      temp bool t_79 = t_76 and t_78;
    guardCondition t_79;
    effect
      P_2.state = 7;

  process P_2
    guardBlock
      temp bool t_80 = P_2.state == 7,
      temp bool t_81 = P_2.curr > 0,
      temp int t_82 = P_2.curr - 1,
      temp byte t_83 = c[t_82],
      temp bool t_84 = t_83 == 0,
      temp bool t_85 = t_81 and t_84,
      temp bool t_86 = t_80 and t_85;
    guardCondition t_86;
    effect
      P_2.state = 8;

  process P_2
    guardBlock
      temp bool t_87 = P_2.state == 8;
    guardCondition t_87;
    effect
      P_2.state = 9;

  process P_2
    guardBlock
      temp bool t_88 = P_2.state == 7,
      temp bool t_89 = P_2.curr == 0,
      temp int t_90 = P_2.curr - 1,
      temp byte t_91 = c[t_90],
      temp bool t_92 = t_91 == 1,
      temp bool t_93 = t_89 or t_92,
      temp bool t_94 = t_88 and t_93;
    guardCondition t_94;
    effect
      P_2.state = 0,
      temp int t_95 = P_2.curr + 1,
      P_2.curr = t_95;

  process LTL_property
    guardBlock
      temp bool t_96 = LTL_property.state == 0,
      temp bool t_97 = P_0.state == 9,
      temp bool t_98 = P_1.state == 9,
      temp bool t_99 = t_97 or t_98,
      temp bool t_100 = P_2.state == 9,
      temp bool t_101 = t_99 or t_100,
      temp bool t_102 = not t_101,
      temp bool t_103 = t_96 and t_102;
    guardCondition t_103;
    effect
      LTL_property.state = 0;
      // accepting conditions
      // LTL_property.state == 0
