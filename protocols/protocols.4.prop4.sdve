state {ready(0), tr(1), data_lost(2)} channel_K.state = 0;
byte channel_K.v = 0;
byte channel_K.lost = 0;
state {ready(0), tr(1), dataOK(2)} channel_L.state = 0;
byte channel_L.v = 0;
byte channel_L.lost = 0;
state {ready(0), produce0(1), produce1(2)} Producer.state = 0;
state {ready(0), got_msg(1), consume0(2), consume1(3)} Consumer.state = 0;
byte Consumer.value = 0;
state {ready(0), sending(1), wait_ack(2), failed(3)} Sender.state = 0;
byte Sender.value = 0;
byte Sender.sab = 0;
byte Sender.retry = 0;
state {waiting(0), got_msg(1), send_ack(2)} Receiver.state = 0;
byte Receiver.value = 0;
byte Receiver.rab = 1;
state {q1(0), q2(1), q3(2), q4(3)} LTL_property.state = 1;

  process channel_K
    guardBlock
      temp bool t_0 = channel_K.state == 1,
      temp bool t_1 = channel_K.lost < 20,
      temp bool t_2 = t_0 and t_1;
    guardCondition t_2;
    effect
      channel_K.state = 0,
      temp int t_3 = channel_K.lost + 1,
      channel_K.lost = t_3;

  process channel_L
    guardBlock
      temp bool t_4 = channel_L.state == 1,
      temp bool t_5 = channel_L.lost < 20,
      temp bool t_6 = t_4 and t_5;
    guardCondition t_6;
    effect
      channel_L.state = 0,
      temp int t_7 = channel_L.lost + 1,
      channel_L.lost = t_7;

  process Producer
    guardBlock
      temp bool t_8 = Producer.state == 0;
    guardCondition t_8;
    effect
      Producer.state = 1;

  process Producer
    guardBlock
      temp bool t_9 = Producer.state == 0;
    guardCondition t_9;
    effect
      Producer.state = 2;

  process Consumer
    guardBlock
      temp bool t_10 = Consumer.state == 1,
      temp bool t_11 = Consumer.value == 0,
      temp bool t_12 = t_10 and t_11;
    guardCondition t_12;
    effect
      Consumer.state = 2;

  process Consumer
    guardBlock
      temp bool t_13 = Consumer.state == 1,
      temp bool t_14 = Consumer.value == 1,
      temp bool t_15 = t_13 and t_14;
    guardCondition t_15;
    effect
      Consumer.state = 3;

  process Consumer
    guardBlock
      temp bool t_16 = Consumer.state == 2;
    guardCondition t_16;
    effect
      Consumer.state = 0;

  process Consumer
    guardBlock
      temp bool t_17 = Consumer.state == 3;
    guardCondition t_17;
    effect
      Consumer.state = 0;

  process Sender
    guardBlock
      temp bool t_18 = Sender.state == 2,
      temp bool t_19 = Sender.retry == 30,
      temp bool t_20 = t_18 and t_19;
    guardCondition t_20;
    effect
      Sender.state = 3;

  process Receiver
    guardBlock
      temp bool t_21 = Receiver.state == 1,
      temp int t_22 = Receiver.value % 2,
      temp bool t_23 = t_22 != Receiver.rab,
      temp bool t_24 = t_21 and t_23;
    guardCondition t_24;
    effect
      Receiver.state = 0;

  process LTL_property
    guardBlock
      temp bool t_25 = LTL_property.state == 0;
    guardCondition t_25;
    effect
      LTL_property.state = 0;

  process LTL_property
    guardBlock
      temp bool t_26 = LTL_property.state == 1,
      temp bool t_27 = Consumer.state == 2,
      temp bool t_28 = not t_27,
      temp bool t_29 = Producer.state == 0,
      temp bool t_30 = t_28 and t_29,
      temp bool t_31 = t_26 and t_30;
    guardCondition t_31;
    effect
      LTL_property.state = 1;

  process LTL_property
    guardBlock
      temp bool t_32 = LTL_property.state == 1,
      temp bool t_33 = Producer.state == 0,
      temp bool t_34 = Consumer.state == 2,
      temp bool t_35 = not t_34,
      temp bool t_36 = t_33 and t_35,
      temp bool t_37 = Consumer.state == 0,
      temp bool t_38 = Consumer.state == 1,
      temp bool t_39 = t_37 or t_38,
      temp bool t_40 = not t_39,
      temp bool t_41 = t_36 and t_40,
      temp bool t_42 = t_32 and t_41;
    guardCondition t_42;
    effect
      LTL_property.state = 2;

  process LTL_property
    guardBlock
      temp bool t_43 = LTL_property.state == 1,
      temp bool t_44 = Consumer.state == 2,
      temp bool t_45 = not t_44,
      temp bool t_46 = Producer.state == 1,
      temp bool t_47 = t_45 and t_46,
      temp bool t_48 = t_43 and t_47;
    guardCondition t_48;
    effect
      LTL_property.state = 3;

  process LTL_property
    guardBlock
      temp bool t_49 = LTL_property.state == 1,
      temp bool t_50 = Producer.state == 1,
      temp bool t_51 = Consumer.state == 2,
      temp bool t_52 = not t_51,
      temp bool t_53 = t_50 and t_52,
      temp bool t_54 = Consumer.state == 0,
      temp bool t_55 = Consumer.state == 1,
      temp bool t_56 = t_54 or t_55,
      temp bool t_57 = not t_56,
      temp bool t_58 = t_53 and t_57,
      temp bool t_59 = t_49 and t_58;
    guardCondition t_59;
    effect
      LTL_property.state = 0;

  process LTL_property
    guardBlock
      temp bool t_60 = LTL_property.state == 2,
      temp bool t_61 = Producer.state == 0,
      temp bool t_62 = t_60 and t_61;
    guardCondition t_62;
    effect
      LTL_property.state = 2;

  process LTL_property
    guardBlock
      temp bool t_63 = LTL_property.state == 2,
      temp bool t_64 = Producer.state == 1,
      temp bool t_65 = t_63 and t_64;
    guardCondition t_65;
    effect
      LTL_property.state = 0;

  process LTL_property
    guardBlock
      temp bool t_66 = LTL_property.state == 3,
      temp bool t_67 = Consumer.state == 2,
      temp bool t_68 = not t_67,
      temp bool t_69 = t_66 and t_68;
    guardCondition t_69;
    effect
      LTL_property.state = 3;

  process LTL_property
    guardBlock
      temp bool t_70 = LTL_property.state == 3,
      temp bool t_71 = Consumer.state == 2,
      temp bool t_72 = not t_71,
      temp bool t_73 = Consumer.state == 0,
      temp bool t_74 = Consumer.state == 1,
      temp bool t_75 = t_73 or t_74,
      temp bool t_76 = not t_75,
      temp bool t_77 = t_72 and t_76,
      temp bool t_78 = t_70 and t_77;
    guardCondition t_78;
    effect
      LTL_property.state = 0;

  process channel_K_Receiver
    guardBlock
      temp bool t_79 = channel_K.state == 1,
      temp bool t_80 = Receiver.state == 0,
      temp bool t_81 = t_79 and t_80;
    guardCondition t_81;
    effect
      channel_K.state = 0,
      channel_K.lost = 0,
      Receiver.value = channel_K.v,
      Receiver.state = 1;

  process Producer_Sender
    guardBlock
      temp bool t_82 = Producer.state == 1,
      temp bool t_83 = Sender.state == 0,
      temp bool t_84 = t_82 and t_83;
    guardCondition t_84;
    effect
      Producer.state = 0,
      Sender.value = 0,
      Sender.state = 1,
      temp int t_85 = 1 - Sender.sab,
      Sender.sab = t_85;

  process Producer_Sender
    guardBlock
      temp bool t_86 = Producer.state == 2,
      temp bool t_87 = Sender.state == 0,
      temp bool t_88 = t_86 and t_87;
    guardCondition t_88;
    effect
      Producer.state = 0,
      Sender.value = 1,
      Sender.state = 1,
      temp int t_89 = 1 - Sender.sab,
      Sender.sab = t_89;

  process Receiver_Consumer
    guardBlock
      temp bool t_90 = Receiver.state == 1,
      temp int t_91 = Receiver.value % 2,
      temp bool t_92 = t_91 == Receiver.rab,
      temp bool t_93 = t_90 and t_92,
      temp bool t_94 = Consumer.state == 0,
      temp bool t_95 = t_93 and t_94;
    guardCondition t_95;
    effect
      Receiver.state = 2,
      temp int t_96 = Receiver.value / 2,
      Consumer.value = t_96,
      Consumer.state = 1;

  process channel_L_Sender
    guardBlock
      temp bool t_97 = channel_L.state == 1,
      temp bool t_98 = Sender.state == 2,
      temp bool t_99 = t_97 and t_98;
    guardCondition t_99;
    effect
      channel_L.state = 0,
      channel_L.lost = 0,
      Sender.value = channel_L.v,
      Sender.state = 0;

  process Sender_channel_K
    guardBlock
      temp bool t_100 = Sender.state == 1,
      temp bool t_101 = channel_K.state == 0,
      temp bool t_102 = t_100 and t_101;
    guardCondition t_102;
    effect
      Sender.state = 2,
      Sender.retry = 1,
      temp int t_103 = Sender.value * 2,
      temp int t_104 = t_103 + Sender.sab,
      channel_K.v = t_104,
      channel_K.state = 1;

  process Sender_channel_K
    guardBlock
      temp bool t_105 = Sender.state == 2,
      temp bool t_106 = Sender.retry < 30,
      temp bool t_107 = t_105 and t_106,
      temp bool t_108 = channel_K.state == 0,
      temp bool t_109 = t_107 and t_108;
    guardCondition t_109;
    effect
      Sender.state = 2,
      temp int t_110 = Sender.retry + 1,
      Sender.retry = t_110,
      temp int t_111 = Sender.value * 2,
      temp int t_112 = t_111 + Sender.sab,
      channel_K.v = t_112,
      channel_K.state = 1;

  process Receiver_channel_L
    guardBlock
      temp bool t_113 = Receiver.state == 2,
      temp bool t_114 = channel_L.state == 0,
      temp bool t_115 = t_113 and t_114;
    guardCondition t_115;
    effect
      Receiver.state = 0,
      temp int t_116 = 1 - Receiver.rab,
      Receiver.rab = t_116,
      channel_L.v = 0,
      channel_L.state = 1;
      accepting conditions
      LTL_property.state == 0
