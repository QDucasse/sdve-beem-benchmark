state {start(0), wait(1), got_msg(2), ldr_msg(3), ldr_to_all(4), l2(5), tok_msg(6), reinicialize(7), same(8), all(9), become_leader(10), leader(11), lost(12)} Node_0.state = 0;
state {start(0), wait(1), got_msg(2), ldr_msg(3), ldr_to_all(4), l2(5), tok_msg(6), reinicialize(7), same(8), all(9), become_leader(10), leader(11), lost(12)} Node_1.state = 0;
state {start(0), wait(1), got_msg(2), ldr_msg(3), ldr_to_all(4), l2(5), tok_msg(6), reinicialize(7), same(8), all(9), become_leader(10), leader(11), lost(12)} Node_2.state = 0;
state {q(0)} channel_ch_0.state = 0;
state {q(0)} channel_ch_1.state = 0;
state {q(0)} channel_ch_2.state = 0;
state {q1(0)} LTL_property.state = 0;
byte leaders_num = 0;
byte Node_0.caw = 0;
byte Node_0.rec = 0;
byte Node_0.father = 255;
byte Node_0.lrec = 0;
byte Node_0.win = 255;
byte Node_0.j = 0;
byte Node_0.m = 0;
byte Node_1.caw = 1;
byte Node_1.rec = 0;
byte Node_1.father = 255;
byte Node_1.lrec = 0;
byte Node_1.win = 255;
byte Node_1.j = 0;
byte Node_1.m = 0;
byte Node_2.caw = 2;
byte Node_2.rec = 0;
byte Node_2.father = 255;
byte Node_2.lrec = 0;
byte Node_2.win = 255;
byte Node_2.j = 0;
byte Node_2.m = 0;
byte channel_ch_0.buf[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
byte channel_ch_0.buf_act = 0;
byte channel_ch_1.buf[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
byte channel_ch_1.buf_act = 0;
byte channel_ch_2.buf[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
byte channel_ch_2.buf_act = 0;

  process Node_0 
    guardBlock
      temp bool t_0 = Node_0.state == 0,
      temp bool t_1 = Node_0.j == 1,
      temp bool t_2 = t_0 and t_1;

    guardCondition t_2;
    effect
      Node_0.state = 1;

  process Node_0 
    guardBlock
      temp bool t_3 = Node_0.state == 2,
      temp byte t_4 = Node_0.m / 100,
      temp bool t_5 = t_4 == 1,
      temp bool t_6 = t_3 and t_5;

    guardCondition t_6;
    effect
      Node_0.state = 3;

  process Node_0 
    guardBlock
      temp bool t_7 = Node_0.state == 2,
      temp byte t_8 = Node_0.m / 100,
      temp bool t_9 = t_8 == 0,
      temp bool t_10 = t_7 and t_9;

    guardCondition t_10;
    effect
      Node_0.state = 6;

  process Node_0 
    guardBlock
      temp bool t_11 = Node_0.state == 6,
      temp byte t_12 = Node_0.m % 100,
      temp byte t_13 = t_12 / 10,
      temp bool t_14 = t_13 < Node_0.caw,
      temp bool t_15 = t_11 and t_14;

    guardCondition t_15;
    effect
      Node_0.state = 7,
      temp byte t_16 = Node_0.m % 100,
      temp byte t_17 = t_16 / 10,
      Node_0.caw = t_17,
      Node_0.rec = 0,
      temp byte t_18 = Node_0.m % 10,
      Node_0.father = t_18,
      Node_0.j = 0;

  process Node_0 
    guardBlock
      temp bool t_19 = Node_0.state == 7,
      temp bool t_20 = Node_0.j == 1,
      temp bool t_21 = t_19 and t_20;

    guardCondition t_21;
    effect
      Node_0.state = 1;

  process Node_0 
    guardBlock
      temp bool t_22 = Node_0.state == 6,
      temp byte t_23 = Node_0.m % 100,
      temp byte t_24 = t_23 / 10,
      temp bool t_25 = t_24 == Node_0.caw,
      temp bool t_26 = t_22 and t_25;

    guardCondition t_26;
    effect
      Node_0.state = 8,
      temp byte t_27 = Node_0.rec + 1,
      Node_0.rec = t_27;

  process Node_0 
    guardBlock
      temp bool t_28 = Node_0.state == 8,
      temp bool t_29 = Node_0.rec < 1,
      temp bool t_30 = t_28 and t_29;

    guardCondition t_30;
    effect
      Node_0.state = 1;

  process Node_0 
    guardBlock
      temp bool t_31 = Node_0.state == 8,
      temp bool t_32 = Node_0.rec == 1,
      temp bool t_33 = t_31 and t_32;

    guardCondition t_33;
    effect
      Node_0.state = 9;

  process Node_0 
    guardBlock
      temp bool t_34 = Node_0.state == 6,
      temp byte t_35 = Node_0.m % 100,
      temp byte t_36 = t_35 / 10,
      temp bool t_37 = t_36 > Node_0.caw,
      temp bool t_38 = t_34 and t_37;

    guardCondition t_38;
    effect
      Node_0.state = 1;

  process Node_0 
    guardBlock
      temp bool t_39 = Node_0.state == 9,
      temp bool t_40 = Node_0.caw == 0,
      temp bool t_41 = t_39 and t_40;

    guardCondition t_41;
    effect
      Node_0.state = 10,
      Node_0.j = 0;

  process Node_0 
    guardBlock
      temp bool t_42 = Node_0.state == 10,
      temp bool t_43 = Node_0.j == 1,
      temp bool t_44 = t_42 and t_43;

    guardCondition t_44;
    effect
      Node_0.state = 1;

  process Node_0 
    guardBlock
      temp bool t_45 = Node_0.state == 3,
      temp bool t_46 = Node_0.lrec == 0,
      temp bool t_47 = t_45 and t_46;

    guardCondition t_47;
    effect
      Node_0.state = 4,
      Node_0.j = 0;

  process Node_0 
    guardBlock
      temp bool t_48 = Node_0.state == 4,
      temp bool t_49 = Node_0.j == 1,
      temp bool t_50 = t_48 and t_49;

    guardCondition t_50;
    effect
      Node_0.state = 5;

  process Node_0 
    guardBlock
      temp bool t_51 = Node_0.state == 3,
      temp bool t_52 = Node_0.lrec > 0,
      temp bool t_53 = t_51 and t_52;

    guardCondition t_53;
    effect
      Node_0.state = 5;

  process Node_0 
    guardBlock
      temp bool t_54 = Node_0.state == 5;

    guardCondition t_54;
    effect
      Node_0.state = 1,
      temp byte t_55 = Node_0.lrec + 1,
      Node_0.lrec = t_55,
      temp byte t_56 = Node_0.m % 100,
      temp byte t_57 = t_56 / 10,
      Node_0.win = t_57;

  process Node_0 
    guardBlock
      temp bool t_58 = Node_0.state == 1,
      temp bool t_59 = Node_0.lrec == 1,
      temp bool t_60 = Node_0.win == 0,
      temp bool t_61 = t_59 and t_60,
      temp bool t_62 = t_58 and t_61;

    guardCondition t_62;
    effect
      Node_0.state = 11,
      temp byte t_63 = leaders_num + 1,
      leaders_num = t_63;

  process Node_0 
    guardBlock
      temp bool t_64 = Node_0.state == 1,
      temp bool t_65 = Node_0.lrec == 1,
      temp bool t_66 = Node_0.win != 0,
      temp bool t_67 = t_65 and t_66,
      temp bool t_68 = t_64 and t_67;

    guardCondition t_68;
    effect
      Node_0.state = 12;

  process Node_1 
    guardBlock
      temp bool t_69 = Node_1.state == 0,
      temp bool t_70 = Node_1.j == 2,
      temp bool t_71 = t_69 and t_70;

    guardCondition t_71;
    effect
      Node_1.state = 1;

  process Node_1 
    guardBlock
      temp bool t_72 = Node_1.state == 2,
      temp byte t_73 = Node_1.m / 100,
      temp bool t_74 = t_73 == 1,
      temp bool t_75 = t_72 and t_74;

    guardCondition t_75;
    effect
      Node_1.state = 3;

  process Node_1 
    guardBlock
      temp bool t_76 = Node_1.state == 2,
      temp byte t_77 = Node_1.m / 100,
      temp bool t_78 = t_77 == 0,
      temp bool t_79 = t_76 and t_78;

    guardCondition t_79;
    effect
      Node_1.state = 6;

  process Node_1 
    guardBlock
      temp bool t_80 = Node_1.state == 6,
      temp byte t_81 = Node_1.m % 100,
      temp byte t_82 = t_81 / 10,
      temp bool t_83 = t_82 < Node_1.caw,
      temp bool t_84 = t_80 and t_83;

    guardCondition t_84;
    effect
      Node_1.state = 7,
      temp byte t_85 = Node_1.m % 100,
      temp byte t_86 = t_85 / 10,
      Node_1.caw = t_86,
      Node_1.rec = 0,
      temp byte t_87 = Node_1.m % 10,
      Node_1.father = t_87,
      Node_1.j = 0;

  process Node_1 
    guardBlock
      temp bool t_88 = Node_1.state == 7,
      temp bool t_89 = Node_1.j == 2,
      temp bool t_90 = t_88 and t_89;

    guardCondition t_90;
    effect
      Node_1.state = 1;

  process Node_1 
    guardBlock
      temp bool t_91 = Node_1.state == 6,
      temp byte t_92 = Node_1.m % 100,
      temp byte t_93 = t_92 / 10,
      temp bool t_94 = t_93 == Node_1.caw,
      temp bool t_95 = t_91 and t_94;

    guardCondition t_95;
    effect
      Node_1.state = 8,
      temp byte t_96 = Node_1.rec + 1,
      Node_1.rec = t_96;

  process Node_1 
    guardBlock
      temp bool t_97 = Node_1.state == 8,
      temp bool t_98 = Node_1.rec < 2,
      temp bool t_99 = t_97 and t_98;

    guardCondition t_99;
    effect
      Node_1.state = 1;

  process Node_1 
    guardBlock
      temp bool t_100 = Node_1.state == 8,
      temp bool t_101 = Node_1.rec == 2,
      temp bool t_102 = t_100 and t_101;

    guardCondition t_102;
    effect
      Node_1.state = 9;

  process Node_1 
    guardBlock
      temp bool t_103 = Node_1.state == 6,
      temp byte t_104 = Node_1.m % 100,
      temp byte t_105 = t_104 / 10,
      temp bool t_106 = t_105 > Node_1.caw,
      temp bool t_107 = t_103 and t_106;

    guardCondition t_107;
    effect
      Node_1.state = 1;

  process Node_1 
    guardBlock
      temp bool t_108 = Node_1.state == 9,
      temp bool t_109 = Node_1.caw == 1,
      temp bool t_110 = t_108 and t_109;

    guardCondition t_110;
    effect
      Node_1.state = 10,
      Node_1.j = 0;

  process Node_1 
    guardBlock
      temp bool t_111 = Node_1.state == 10,
      temp bool t_112 = Node_1.j == 2,
      temp bool t_113 = t_111 and t_112;

    guardCondition t_113;
    effect
      Node_1.state = 1;

  process Node_1 
    guardBlock
      temp bool t_114 = Node_1.state == 3,
      temp bool t_115 = Node_1.lrec == 0,
      temp bool t_116 = t_114 and t_115;

    guardCondition t_116;
    effect
      Node_1.state = 4,
      Node_1.j = 0;

  process Node_1 
    guardBlock
      temp bool t_117 = Node_1.state == 4,
      temp bool t_118 = Node_1.j == 2,
      temp bool t_119 = t_117 and t_118;

    guardCondition t_119;
    effect
      Node_1.state = 5;

  process Node_1 
    guardBlock
      temp bool t_120 = Node_1.state == 3,
      temp bool t_121 = Node_1.lrec > 0,
      temp bool t_122 = t_120 and t_121;

    guardCondition t_122;
    effect
      Node_1.state = 5;

  process Node_1 
    guardBlock
      temp bool t_123 = Node_1.state == 5;

    guardCondition t_123;
    effect
      Node_1.state = 1,
      temp byte t_124 = Node_1.lrec + 1,
      Node_1.lrec = t_124,
      temp byte t_125 = Node_1.m % 100,
      temp byte t_126 = t_125 / 10,
      Node_1.win = t_126;

  process Node_1 
    guardBlock
      temp bool t_127 = Node_1.state == 1,
      temp bool t_128 = Node_1.lrec == 2,
      temp bool t_129 = Node_1.win == 1,
      temp bool t_130 = t_128 and t_129,
      temp bool t_131 = t_127 and t_130;

    guardCondition t_131;
    effect
      Node_1.state = 11,
      temp byte t_132 = leaders_num + 1,
      leaders_num = t_132;

  process Node_1 
    guardBlock
      temp bool t_133 = Node_1.state == 1,
      temp bool t_134 = Node_1.lrec == 2,
      temp bool t_135 = Node_1.win != 1,
      temp bool t_136 = t_134 and t_135,
      temp bool t_137 = t_133 and t_136;

    guardCondition t_137;
    effect
      Node_1.state = 12;

  process Node_2 
    guardBlock
      temp bool t_138 = Node_2.state == 0,
      temp bool t_139 = Node_2.j == 1,
      temp bool t_140 = t_138 and t_139;

    guardCondition t_140;
    effect
      Node_2.state = 1;

  process Node_2 
    guardBlock
      temp bool t_141 = Node_2.state == 2,
      temp byte t_142 = Node_2.m / 100,
      temp bool t_143 = t_142 == 1,
      temp bool t_144 = t_141 and t_143;

    guardCondition t_144;
    effect
      Node_2.state = 3;

  process Node_2 
    guardBlock
      temp bool t_145 = Node_2.state == 2,
      temp byte t_146 = Node_2.m / 100,
      temp bool t_147 = t_146 == 0,
      temp bool t_148 = t_145 and t_147;

    guardCondition t_148;
    effect
      Node_2.state = 6;

  process Node_2 
    guardBlock
      temp bool t_149 = Node_2.state == 6,
      temp byte t_150 = Node_2.m % 100,
      temp byte t_151 = t_150 / 10,
      temp bool t_152 = t_151 < Node_2.caw,
      temp bool t_153 = t_149 and t_152;

    guardCondition t_153;
    effect
      Node_2.state = 7,
      temp byte t_154 = Node_2.m % 100,
      temp byte t_155 = t_154 / 10,
      Node_2.caw = t_155,
      Node_2.rec = 0,
      temp byte t_156 = Node_2.m % 10,
      Node_2.father = t_156,
      Node_2.j = 0;

  process Node_2 
    guardBlock
      temp bool t_157 = Node_2.state == 7,
      temp bool t_158 = Node_2.j == 1,
      temp bool t_159 = t_157 and t_158;

    guardCondition t_159;
    effect
      Node_2.state = 1;

  process Node_2 
    guardBlock
      temp bool t_160 = Node_2.state == 6,
      temp byte t_161 = Node_2.m % 100,
      temp byte t_162 = t_161 / 10,
      temp bool t_163 = t_162 == Node_2.caw,
      temp bool t_164 = t_160 and t_163;

    guardCondition t_164;
    effect
      Node_2.state = 8,
      temp byte t_165 = Node_2.rec + 1,
      Node_2.rec = t_165;

  process Node_2 
    guardBlock
      temp bool t_166 = Node_2.state == 8,
      temp bool t_167 = Node_2.rec < 1,
      temp bool t_168 = t_166 and t_167;

    guardCondition t_168;
    effect
      Node_2.state = 1;

  process Node_2 
    guardBlock
      temp bool t_169 = Node_2.state == 8,
      temp bool t_170 = Node_2.rec == 1,
      temp bool t_171 = t_169 and t_170;

    guardCondition t_171;
    effect
      Node_2.state = 9;

  process Node_2 
    guardBlock
      temp bool t_172 = Node_2.state == 6,
      temp byte t_173 = Node_2.m % 100,
      temp byte t_174 = t_173 / 10,
      temp bool t_175 = t_174 > Node_2.caw,
      temp bool t_176 = t_172 and t_175;

    guardCondition t_176;
    effect
      Node_2.state = 1;

  process Node_2 
    guardBlock
      temp bool t_177 = Node_2.state == 9,
      temp bool t_178 = Node_2.caw == 2,
      temp bool t_179 = t_177 and t_178;

    guardCondition t_179;
    effect
      Node_2.state = 10,
      Node_2.j = 0;

  process Node_2 
    guardBlock
      temp bool t_180 = Node_2.state == 10,
      temp bool t_181 = Node_2.j == 1,
      temp bool t_182 = t_180 and t_181;

    guardCondition t_182;
    effect
      Node_2.state = 1;

  process Node_2 
    guardBlock
      temp bool t_183 = Node_2.state == 3,
      temp bool t_184 = Node_2.lrec == 0,
      temp bool t_185 = t_183 and t_184;

    guardCondition t_185;
    effect
      Node_2.state = 4,
      Node_2.j = 0;

  process Node_2 
    guardBlock
      temp bool t_186 = Node_2.state == 4,
      temp bool t_187 = Node_2.j == 1,
      temp bool t_188 = t_186 and t_187;

    guardCondition t_188;
    effect
      Node_2.state = 5;

  process Node_2 
    guardBlock
      temp bool t_189 = Node_2.state == 3,
      temp bool t_190 = Node_2.lrec > 0,
      temp bool t_191 = t_189 and t_190;

    guardCondition t_191;
    effect
      Node_2.state = 5;

  process Node_2 
    guardBlock
      temp bool t_192 = Node_2.state == 5;

    guardCondition t_192;
    effect
      Node_2.state = 1,
      temp byte t_193 = Node_2.lrec + 1,
      Node_2.lrec = t_193,
      temp byte t_194 = Node_2.m % 100,
      temp byte t_195 = t_194 / 10,
      Node_2.win = t_195;

  process Node_2 
    guardBlock
      temp bool t_196 = Node_2.state == 1,
      temp bool t_197 = Node_2.lrec == 1,
      temp bool t_198 = Node_2.win == 2,
      temp bool t_199 = t_197 and t_198,
      temp bool t_200 = t_196 and t_199;

    guardCondition t_200;
    effect
      Node_2.state = 11,
      temp byte t_201 = leaders_num + 1,
      leaders_num = t_201;

  process Node_2 
    guardBlock
      temp bool t_202 = Node_2.state == 1,
      temp bool t_203 = Node_2.lrec == 1,
      temp bool t_204 = Node_2.win != 2,
      temp bool t_205 = t_203 and t_204,
      temp bool t_206 = t_202 and t_205;

    guardCondition t_206;
    effect
      Node_2.state = 12;

  process LTL_property 
    guardBlock
      temp bool t_207 = LTL_property.state == 0,
      temp bool t_208 = leaders_num > 0,
      temp bool t_209 = not t_208,
      temp bool t_210 = t_207 and t_209;

    guardCondition t_210;
    effect
      LTL_property.state = 0;

  process channel_ch_0_Node_0 
    guardBlock
      temp bool t_211 = channel_ch_0.state == 0,
      temp bool t_212 = channel_ch_0.buf_act == 0,
      temp bool t_213 = not t_212,
      temp bool t_214 = t_211 and t_213,
      temp bool t_215 = Node_0.state == 1,
      temp bool t_216 = t_214 and t_215;

    guardCondition t_216;
    effect
      channel_ch_0.state = 0,
      temp byte t_217 = channel_ch_0.buf[1],
      channel_ch_0.buf[0] = t_217,
      temp byte t_218 = channel_ch_0.buf[2],
      channel_ch_0.buf[1] = t_218,
      temp byte t_219 = channel_ch_0.buf[3],
      channel_ch_0.buf[2] = t_219,
      temp byte t_220 = channel_ch_0.buf[4],
      channel_ch_0.buf[3] = t_220,
      temp byte t_221 = channel_ch_0.buf[5],
      channel_ch_0.buf[4] = t_221,
      temp byte t_222 = channel_ch_0.buf[6],
      channel_ch_0.buf[5] = t_222,
      temp byte t_223 = channel_ch_0.buf[7],
      channel_ch_0.buf[6] = t_223,
      temp byte t_224 = channel_ch_0.buf[8],
      channel_ch_0.buf[7] = t_224,
      temp byte t_225 = channel_ch_0.buf[9],
      channel_ch_0.buf[8] = t_225,
      channel_ch_0.buf[9] = 0,
      temp byte t_226 = channel_ch_0.buf_act - 1,
      channel_ch_0.buf_act = t_226,
      temp byte t_227 = channel_ch_0.buf[0],
      Node_0.m = t_227,
      Node_0.state = 2;

  process Node_0_channel_ch_1 
    guardBlock
      temp bool t_228 = Node_0.state == 0,
      temp bool t_229 = Node_0.j == 0,
      temp bool t_230 = t_228 and t_229,
      temp bool t_231 = channel_ch_1.state == 0,
      temp bool t_232 = channel_ch_1.buf_act == 10,
      temp bool t_233 = not t_232,
      temp bool t_234 = t_231 and t_233,
      temp bool t_235 = t_230 and t_234;

    guardCondition t_235;
    effect
      Node_0.state = 0,
      temp byte t_236 = Node_0.j + 1,
      Node_0.j = t_236,
      channel_ch_1.buf[channel_ch_1.buf_act] = 0,
      channel_ch_1.state = 0,
      temp byte t_237 = channel_ch_1.buf_act + 1,
      channel_ch_1.buf_act = t_237;

  process Node_0_channel_ch_1 
    guardBlock
      temp bool t_238 = Node_0.state == 7,
      temp bool t_239 = Node_0.j == 0,
      temp bool t_240 = t_238 and t_239,
      temp bool t_241 = channel_ch_1.state == 0,
      temp bool t_242 = channel_ch_1.buf_act == 10,
      temp bool t_243 = not t_242,
      temp bool t_244 = t_241 and t_243,
      temp bool t_245 = t_240 and t_244;

    guardCondition t_245;
    effect
      Node_0.state = 7,
      temp byte t_246 = Node_0.j + 1,
      Node_0.j = t_246,
      temp byte t_247 = Node_0.caw * 10,
      temp byte t_248 = 0 + t_247,
      temp byte t_249 = t_248 + 0,
      channel_ch_1.buf[channel_ch_1.buf_act] = t_249,
      channel_ch_1.state = 0,
      temp byte t_250 = channel_ch_1.buf_act + 1,
      channel_ch_1.buf_act = t_250;

  process Node_0_channel_ch_1 
    guardBlock
      temp bool t_251 = Node_0.state == 9,
      temp bool t_252 = Node_0.caw != 0,
      temp bool t_253 = Node_0.father == 1,
      temp bool t_254 = t_252 and t_253,
      temp bool t_255 = t_251 and t_254,
      temp bool t_256 = channel_ch_1.state == 0,
      temp bool t_257 = channel_ch_1.buf_act == 10,
      temp bool t_258 = not t_257,
      temp bool t_259 = t_256 and t_258,
      temp bool t_260 = t_255 and t_259;

    guardCondition t_260;
    effect
      Node_0.state = 1,
      temp byte t_261 = Node_0.caw * 10,
      temp byte t_262 = 0 + t_261,
      temp byte t_263 = t_262 + 0,
      channel_ch_1.buf[channel_ch_1.buf_act] = t_263,
      channel_ch_1.state = 0,
      temp byte t_264 = channel_ch_1.buf_act + 1,
      channel_ch_1.buf_act = t_264;

  process Node_0_channel_ch_1 
    guardBlock
      temp bool t_265 = Node_0.state == 10,
      temp bool t_266 = Node_0.j == 0,
      temp bool t_267 = t_265 and t_266,
      temp bool t_268 = channel_ch_1.state == 0,
      temp bool t_269 = channel_ch_1.buf_act == 10,
      temp bool t_270 = not t_269,
      temp bool t_271 = t_268 and t_270,
      temp bool t_272 = t_267 and t_271;

    guardCondition t_272;
    effect
      Node_0.state = 10,
      temp byte t_273 = Node_0.j + 1,
      Node_0.j = t_273,
      channel_ch_1.buf[channel_ch_1.buf_act] = 100,
      channel_ch_1.state = 0,
      temp byte t_274 = channel_ch_1.buf_act + 1,
      channel_ch_1.buf_act = t_274;

  process Node_0_channel_ch_1 
    guardBlock
      temp bool t_275 = Node_0.state == 4,
      temp bool t_276 = Node_0.j == 0,
      temp bool t_277 = t_275 and t_276,
      temp bool t_278 = channel_ch_1.state == 0,
      temp bool t_279 = channel_ch_1.buf_act == 10,
      temp bool t_280 = not t_279,
      temp bool t_281 = t_278 and t_280,
      temp bool t_282 = t_277 and t_281;

    guardCondition t_282;
    effect
      Node_0.state = 4,
      temp byte t_283 = Node_0.j + 1,
      Node_0.j = t_283,
      temp byte t_284 = Node_0.m % 100,
      temp byte t_285 = t_284 / 10,
      temp byte t_286 = t_285 * 10,
      temp byte t_287 = 0 + t_286,
      temp byte t_288 = t_287 + 100,
      channel_ch_1.buf[channel_ch_1.buf_act] = t_288,
      channel_ch_1.state = 0,
      temp byte t_289 = channel_ch_1.buf_act + 1,
      channel_ch_1.buf_act = t_289;

  process Node_1_channel_ch_1 
    guardBlock
      temp bool t_290 = Node_1.state == 9,
      temp bool t_291 = Node_1.caw != 1,
      temp bool t_292 = Node_1.father == 1,
      temp bool t_293 = t_291 and t_292,
      temp bool t_294 = t_290 and t_293,
      temp bool t_295 = channel_ch_1.state == 0,
      temp bool t_296 = channel_ch_1.buf_act == 10,
      temp bool t_297 = not t_296,
      temp bool t_298 = t_295 and t_297,
      temp bool t_299 = t_294 and t_298;

    guardCondition t_299;
    effect
      Node_1.state = 1,
      temp byte t_300 = Node_1.caw * 10,
      temp byte t_301 = 1 + t_300,
      temp byte t_302 = t_301 + 0,
      channel_ch_1.buf[channel_ch_1.buf_act] = t_302,
      channel_ch_1.state = 0,
      temp byte t_303 = channel_ch_1.buf_act + 1,
      channel_ch_1.buf_act = t_303;

  process Node_2_channel_ch_1 
    guardBlock
      temp bool t_304 = Node_2.state == 0,
      temp bool t_305 = Node_2.j == 0,
      temp bool t_306 = t_304 and t_305,
      temp bool t_307 = channel_ch_1.state == 0,
      temp bool t_308 = channel_ch_1.buf_act == 10,
      temp bool t_309 = not t_308,
      temp bool t_310 = t_307 and t_309,
      temp bool t_311 = t_306 and t_310;

    guardCondition t_311;
    effect
      Node_2.state = 0,
      temp byte t_312 = Node_2.j + 1,
      Node_2.j = t_312,
      channel_ch_1.buf[channel_ch_1.buf_act] = 22,
      channel_ch_1.state = 0,
      temp byte t_313 = channel_ch_1.buf_act + 1,
      channel_ch_1.buf_act = t_313;

  process Node_2_channel_ch_1 
    guardBlock
      temp bool t_314 = Node_2.state == 7,
      temp bool t_315 = Node_2.j == 0,
      temp bool t_316 = t_314 and t_315,
      temp bool t_317 = channel_ch_1.state == 0,
      temp bool t_318 = channel_ch_1.buf_act == 10,
      temp bool t_319 = not t_318,
      temp bool t_320 = t_317 and t_319,
      temp bool t_321 = t_316 and t_320;

    guardCondition t_321;
    effect
      Node_2.state = 7,
      temp byte t_322 = Node_2.j + 1,
      Node_2.j = t_322,
      temp byte t_323 = Node_2.caw * 10,
      temp byte t_324 = 2 + t_323,
      temp byte t_325 = t_324 + 0,
      channel_ch_1.buf[channel_ch_1.buf_act] = t_325,
      channel_ch_1.state = 0,
      temp byte t_326 = channel_ch_1.buf_act + 1,
      channel_ch_1.buf_act = t_326;

  process Node_2_channel_ch_1 
    guardBlock
      temp bool t_327 = Node_2.state == 9,
      temp bool t_328 = Node_2.caw != 2,
      temp bool t_329 = Node_2.father == 1,
      temp bool t_330 = t_328 and t_329,
      temp bool t_331 = t_327 and t_330,
      temp bool t_332 = channel_ch_1.state == 0,
      temp bool t_333 = channel_ch_1.buf_act == 10,
      temp bool t_334 = not t_333,
      temp bool t_335 = t_332 and t_334,
      temp bool t_336 = t_331 and t_335;

    guardCondition t_336;
    effect
      Node_2.state = 1,
      temp byte t_337 = Node_2.caw * 10,
      temp byte t_338 = 2 + t_337,
      temp byte t_339 = t_338 + 0,
      channel_ch_1.buf[channel_ch_1.buf_act] = t_339,
      channel_ch_1.state = 0,
      temp byte t_340 = channel_ch_1.buf_act + 1,
      channel_ch_1.buf_act = t_340;

  process Node_2_channel_ch_1 
    guardBlock
      temp bool t_341 = Node_2.state == 10,
      temp bool t_342 = Node_2.j == 0,
      temp bool t_343 = t_341 and t_342,
      temp bool t_344 = channel_ch_1.state == 0,
      temp bool t_345 = channel_ch_1.buf_act == 10,
      temp bool t_346 = not t_345,
      temp bool t_347 = t_344 and t_346,
      temp bool t_348 = t_343 and t_347;

    guardCondition t_348;
    effect
      Node_2.state = 10,
      temp byte t_349 = Node_2.j + 1,
      Node_2.j = t_349,
      channel_ch_1.buf[channel_ch_1.buf_act] = 122,
      channel_ch_1.state = 0,
      temp byte t_350 = channel_ch_1.buf_act + 1,
      channel_ch_1.buf_act = t_350;

  process Node_2_channel_ch_1 
    guardBlock
      temp bool t_351 = Node_2.state == 4,
      temp bool t_352 = Node_2.j == 0,
      temp bool t_353 = t_351 and t_352,
      temp bool t_354 = channel_ch_1.state == 0,
      temp bool t_355 = channel_ch_1.buf_act == 10,
      temp bool t_356 = not t_355,
      temp bool t_357 = t_354 and t_356,
      temp bool t_358 = t_353 and t_357;

    guardCondition t_358;
    effect
      Node_2.state = 4,
      temp byte t_359 = Node_2.j + 1,
      Node_2.j = t_359,
      temp byte t_360 = Node_2.m % 100,
      temp byte t_361 = t_360 / 10,
      temp byte t_362 = t_361 * 10,
      temp byte t_363 = 2 + t_362,
      temp byte t_364 = t_363 + 100,
      channel_ch_1.buf[channel_ch_1.buf_act] = t_364,
      channel_ch_1.state = 0,
      temp byte t_365 = channel_ch_1.buf_act + 1,
      channel_ch_1.buf_act = t_365;

  process channel_ch_2_Node_2 
    guardBlock
      temp bool t_366 = channel_ch_2.state == 0,
      temp bool t_367 = channel_ch_2.buf_act == 0,
      temp bool t_368 = not t_367,
      temp bool t_369 = t_366 and t_368,
      temp bool t_370 = Node_2.state == 1,
      temp bool t_371 = t_369 and t_370;

    guardCondition t_371;
    effect
      channel_ch_2.state = 0,
      temp byte t_372 = channel_ch_2.buf[1],
      channel_ch_2.buf[0] = t_372,
      temp byte t_373 = channel_ch_2.buf[2],
      channel_ch_2.buf[1] = t_373,
      temp byte t_374 = channel_ch_2.buf[3],
      channel_ch_2.buf[2] = t_374,
      temp byte t_375 = channel_ch_2.buf[4],
      channel_ch_2.buf[3] = t_375,
      temp byte t_376 = channel_ch_2.buf[5],
      channel_ch_2.buf[4] = t_376,
      temp byte t_377 = channel_ch_2.buf[6],
      channel_ch_2.buf[5] = t_377,
      temp byte t_378 = channel_ch_2.buf[7],
      channel_ch_2.buf[6] = t_378,
      temp byte t_379 = channel_ch_2.buf[8],
      channel_ch_2.buf[7] = t_379,
      temp byte t_380 = channel_ch_2.buf[9],
      channel_ch_2.buf[8] = t_380,
      channel_ch_2.buf[9] = 0,
      temp byte t_381 = channel_ch_2.buf_act - 1,
      channel_ch_2.buf_act = t_381,
      temp byte t_382 = channel_ch_2.buf[0],
      Node_2.m = t_382,
      Node_2.state = 2;

  process channel_ch_1_Node_1 
    guardBlock
      temp bool t_383 = channel_ch_1.state == 0,
      temp bool t_384 = channel_ch_1.buf_act == 0,
      temp bool t_385 = not t_384,
      temp bool t_386 = t_383 and t_385,
      temp bool t_387 = Node_1.state == 1,
      temp bool t_388 = t_386 and t_387;

    guardCondition t_388;
    effect
      channel_ch_1.state = 0,
      temp byte t_389 = channel_ch_1.buf[1],
      channel_ch_1.buf[0] = t_389,
      temp byte t_390 = channel_ch_1.buf[2],
      channel_ch_1.buf[1] = t_390,
      temp byte t_391 = channel_ch_1.buf[3],
      channel_ch_1.buf[2] = t_391,
      temp byte t_392 = channel_ch_1.buf[4],
      channel_ch_1.buf[3] = t_392,
      temp byte t_393 = channel_ch_1.buf[5],
      channel_ch_1.buf[4] = t_393,
      temp byte t_394 = channel_ch_1.buf[6],
      channel_ch_1.buf[5] = t_394,
      temp byte t_395 = channel_ch_1.buf[7],
      channel_ch_1.buf[6] = t_395,
      temp byte t_396 = channel_ch_1.buf[8],
      channel_ch_1.buf[7] = t_396,
      temp byte t_397 = channel_ch_1.buf[9],
      channel_ch_1.buf[8] = t_397,
      channel_ch_1.buf[9] = 0,
      temp byte t_398 = channel_ch_1.buf_act - 1,
      channel_ch_1.buf_act = t_398,
      temp byte t_399 = channel_ch_1.buf[0],
      Node_1.m = t_399,
      Node_1.state = 2;

  process Node_0_channel_ch_0 
    guardBlock
      temp bool t_400 = Node_0.state == 9,
      temp bool t_401 = Node_0.caw != 0,
      temp bool t_402 = Node_0.father == 0,
      temp bool t_403 = t_401 and t_402,
      temp bool t_404 = t_400 and t_403,
      temp bool t_405 = channel_ch_0.state == 0,
      temp bool t_406 = channel_ch_0.buf_act == 10,
      temp bool t_407 = not t_406,
      temp bool t_408 = t_405 and t_407,
      temp bool t_409 = t_404 and t_408;

    guardCondition t_409;
    effect
      Node_0.state = 1,
      temp byte t_410 = Node_0.caw * 10,
      temp byte t_411 = 0 + t_410,
      temp byte t_412 = t_411 + 0,
      channel_ch_0.buf[channel_ch_0.buf_act] = t_412,
      channel_ch_0.state = 0,
      temp byte t_413 = channel_ch_0.buf_act + 1,
      channel_ch_0.buf_act = t_413;

  process Node_1_channel_ch_0 
    guardBlock
      temp bool t_414 = Node_1.state == 0,
      temp bool t_415 = Node_1.j == 0,
      temp bool t_416 = t_414 and t_415,
      temp bool t_417 = channel_ch_0.state == 0,
      temp bool t_418 = channel_ch_0.buf_act == 10,
      temp bool t_419 = not t_418,
      temp bool t_420 = t_417 and t_419,
      temp bool t_421 = t_416 and t_420;

    guardCondition t_421;
    effect
      Node_1.state = 0,
      temp byte t_422 = Node_1.j + 1,
      Node_1.j = t_422,
      channel_ch_0.buf[channel_ch_0.buf_act] = 11,
      channel_ch_0.state = 0,
      temp byte t_423 = channel_ch_0.buf_act + 1,
      channel_ch_0.buf_act = t_423;

  process Node_1_channel_ch_0 
    guardBlock
      temp bool t_424 = Node_1.state == 7,
      temp bool t_425 = Node_1.j == 0,
      temp bool t_426 = t_424 and t_425,
      temp bool t_427 = channel_ch_0.state == 0,
      temp bool t_428 = channel_ch_0.buf_act == 10,
      temp bool t_429 = not t_428,
      temp bool t_430 = t_427 and t_429,
      temp bool t_431 = t_426 and t_430;

    guardCondition t_431;
    effect
      Node_1.state = 7,
      temp byte t_432 = Node_1.j + 1,
      Node_1.j = t_432,
      temp byte t_433 = Node_1.caw * 10,
      temp byte t_434 = 1 + t_433,
      temp byte t_435 = t_434 + 0,
      channel_ch_0.buf[channel_ch_0.buf_act] = t_435,
      channel_ch_0.state = 0,
      temp byte t_436 = channel_ch_0.buf_act + 1,
      channel_ch_0.buf_act = t_436;

  process Node_1_channel_ch_0 
    guardBlock
      temp bool t_437 = Node_1.state == 9,
      temp bool t_438 = Node_1.caw != 1,
      temp bool t_439 = Node_1.father == 0,
      temp bool t_440 = t_438 and t_439,
      temp bool t_441 = t_437 and t_440,
      temp bool t_442 = channel_ch_0.state == 0,
      temp bool t_443 = channel_ch_0.buf_act == 10,
      temp bool t_444 = not t_443,
      temp bool t_445 = t_442 and t_444,
      temp bool t_446 = t_441 and t_445;

    guardCondition t_446;
    effect
      Node_1.state = 1,
      temp byte t_447 = Node_1.caw * 10,
      temp byte t_448 = 1 + t_447,
      temp byte t_449 = t_448 + 0,
      channel_ch_0.buf[channel_ch_0.buf_act] = t_449,
      channel_ch_0.state = 0,
      temp byte t_450 = channel_ch_0.buf_act + 1,
      channel_ch_0.buf_act = t_450;

  process Node_1_channel_ch_0 
    guardBlock
      temp bool t_451 = Node_1.state == 10,
      temp bool t_452 = Node_1.j == 0,
      temp bool t_453 = t_451 and t_452,
      temp bool t_454 = channel_ch_0.state == 0,
      temp bool t_455 = channel_ch_0.buf_act == 10,
      temp bool t_456 = not t_455,
      temp bool t_457 = t_454 and t_456,
      temp bool t_458 = t_453 and t_457;

    guardCondition t_458;
    effect
      Node_1.state = 10,
      temp byte t_459 = Node_1.j + 1,
      Node_1.j = t_459,
      channel_ch_0.buf[channel_ch_0.buf_act] = 111,
      channel_ch_0.state = 0,
      temp byte t_460 = channel_ch_0.buf_act + 1,
      channel_ch_0.buf_act = t_460;

  process Node_1_channel_ch_0 
    guardBlock
      temp bool t_461 = Node_1.state == 4,
      temp bool t_462 = Node_1.j == 0,
      temp bool t_463 = t_461 and t_462,
      temp bool t_464 = channel_ch_0.state == 0,
      temp bool t_465 = channel_ch_0.buf_act == 10,
      temp bool t_466 = not t_465,
      temp bool t_467 = t_464 and t_466,
      temp bool t_468 = t_463 and t_467;

    guardCondition t_468;
    effect
      Node_1.state = 4,
      temp byte t_469 = Node_1.j + 1,
      Node_1.j = t_469,
      temp byte t_470 = Node_1.m % 100,
      temp byte t_471 = t_470 / 10,
      temp byte t_472 = t_471 * 10,
      temp byte t_473 = 1 + t_472,
      temp byte t_474 = t_473 + 100,
      channel_ch_0.buf[channel_ch_0.buf_act] = t_474,
      channel_ch_0.state = 0,
      temp byte t_475 = channel_ch_0.buf_act + 1,
      channel_ch_0.buf_act = t_475;

  process Node_2_channel_ch_0 
    guardBlock
      temp bool t_476 = Node_2.state == 9,
      temp bool t_477 = Node_2.caw != 2,
      temp bool t_478 = Node_2.father == 0,
      temp bool t_479 = t_477 and t_478,
      temp bool t_480 = t_476 and t_479,
      temp bool t_481 = channel_ch_0.state == 0,
      temp bool t_482 = channel_ch_0.buf_act == 10,
      temp bool t_483 = not t_482,
      temp bool t_484 = t_481 and t_483,
      temp bool t_485 = t_480 and t_484;

    guardCondition t_485;
    effect
      Node_2.state = 1,
      temp byte t_486 = Node_2.caw * 10,
      temp byte t_487 = 2 + t_486,
      temp byte t_488 = t_487 + 0,
      channel_ch_0.buf[channel_ch_0.buf_act] = t_488,
      channel_ch_0.state = 0,
      temp byte t_489 = channel_ch_0.buf_act + 1,
      channel_ch_0.buf_act = t_489;

  process Node_0_channel_ch_2 
    guardBlock
      temp bool t_490 = Node_0.state == 9,
      temp bool t_491 = Node_0.caw != 0,
      temp bool t_492 = Node_0.father == 2,
      temp bool t_493 = t_491 and t_492,
      temp bool t_494 = t_490 and t_493,
      temp bool t_495 = channel_ch_2.state == 0,
      temp bool t_496 = channel_ch_2.buf_act == 10,
      temp bool t_497 = not t_496,
      temp bool t_498 = t_495 and t_497,
      temp bool t_499 = t_494 and t_498;

    guardCondition t_499;
    effect
      Node_0.state = 1,
      temp byte t_500 = Node_0.caw * 10,
      temp byte t_501 = 0 + t_500,
      temp byte t_502 = t_501 + 0,
      channel_ch_2.buf[channel_ch_2.buf_act] = t_502,
      channel_ch_2.state = 0,
      temp byte t_503 = channel_ch_2.buf_act + 1,
      channel_ch_2.buf_act = t_503;

  process Node_1_channel_ch_2 
    guardBlock
      temp bool t_504 = Node_1.state == 0,
      temp bool t_505 = Node_1.j == 1,
      temp bool t_506 = t_504 and t_505,
      temp bool t_507 = channel_ch_2.state == 0,
      temp bool t_508 = channel_ch_2.buf_act == 10,
      temp bool t_509 = not t_508,
      temp bool t_510 = t_507 and t_509,
      temp bool t_511 = t_506 and t_510;

    guardCondition t_511;
    effect
      Node_1.state = 0,
      temp byte t_512 = Node_1.j + 1,
      Node_1.j = t_512,
      channel_ch_2.buf[channel_ch_2.buf_act] = 11,
      channel_ch_2.state = 0,
      temp byte t_513 = channel_ch_2.buf_act + 1,
      channel_ch_2.buf_act = t_513;

  process Node_1_channel_ch_2 
    guardBlock
      temp bool t_514 = Node_1.state == 7,
      temp bool t_515 = Node_1.j == 1,
      temp bool t_516 = t_514 and t_515,
      temp bool t_517 = channel_ch_2.state == 0,
      temp bool t_518 = channel_ch_2.buf_act == 10,
      temp bool t_519 = not t_518,
      temp bool t_520 = t_517 and t_519,
      temp bool t_521 = t_516 and t_520;

    guardCondition t_521;
    effect
      Node_1.state = 7,
      temp byte t_522 = Node_1.j + 1,
      Node_1.j = t_522,
      temp byte t_523 = Node_1.caw * 10,
      temp byte t_524 = 1 + t_523,
      temp byte t_525 = t_524 + 0,
      channel_ch_2.buf[channel_ch_2.buf_act] = t_525,
      channel_ch_2.state = 0,
      temp byte t_526 = channel_ch_2.buf_act + 1,
      channel_ch_2.buf_act = t_526;

  process Node_1_channel_ch_2 
    guardBlock
      temp bool t_527 = Node_1.state == 9,
      temp bool t_528 = Node_1.caw != 1,
      temp bool t_529 = Node_1.father == 2,
      temp bool t_530 = t_528 and t_529,
      temp bool t_531 = t_527 and t_530,
      temp bool t_532 = channel_ch_2.state == 0,
      temp bool t_533 = channel_ch_2.buf_act == 10,
      temp bool t_534 = not t_533,
      temp bool t_535 = t_532 and t_534,
      temp bool t_536 = t_531 and t_535;

    guardCondition t_536;
    effect
      Node_1.state = 1,
      temp byte t_537 = Node_1.caw * 10,
      temp byte t_538 = 1 + t_537,
      temp byte t_539 = t_538 + 0,
      channel_ch_2.buf[channel_ch_2.buf_act] = t_539,
      channel_ch_2.state = 0,
      temp byte t_540 = channel_ch_2.buf_act + 1,
      channel_ch_2.buf_act = t_540;

  process Node_1_channel_ch_2 
    guardBlock
      temp bool t_541 = Node_1.state == 10,
      temp bool t_542 = Node_1.j == 1,
      temp bool t_543 = t_541 and t_542,
      temp bool t_544 = channel_ch_2.state == 0,
      temp bool t_545 = channel_ch_2.buf_act == 10,
      temp bool t_546 = not t_545,
      temp bool t_547 = t_544 and t_546,
      temp bool t_548 = t_543 and t_547;

    guardCondition t_548;
    effect
      Node_1.state = 10,
      temp byte t_549 = Node_1.j + 1,
      Node_1.j = t_549,
      channel_ch_2.buf[channel_ch_2.buf_act] = 111,
      channel_ch_2.state = 0,
      temp byte t_550 = channel_ch_2.buf_act + 1,
      channel_ch_2.buf_act = t_550;

  process Node_1_channel_ch_2 
    guardBlock
      temp bool t_551 = Node_1.state == 4,
      temp bool t_552 = Node_1.j == 1,
      temp bool t_553 = t_551 and t_552,
      temp bool t_554 = channel_ch_2.state == 0,
      temp bool t_555 = channel_ch_2.buf_act == 10,
      temp bool t_556 = not t_555,
      temp bool t_557 = t_554 and t_556,
      temp bool t_558 = t_553 and t_557;

    guardCondition t_558;
    effect
      Node_1.state = 4,
      temp byte t_559 = Node_1.j + 1,
      Node_1.j = t_559,
      temp byte t_560 = Node_1.m % 100,
      temp byte t_561 = t_560 / 10,
      temp byte t_562 = t_561 * 10,
      temp byte t_563 = 1 + t_562,
      temp byte t_564 = t_563 + 100,
      channel_ch_2.buf[channel_ch_2.buf_act] = t_564,
      channel_ch_2.state = 0,
      temp byte t_565 = channel_ch_2.buf_act + 1,
      channel_ch_2.buf_act = t_565;

  process Node_2_channel_ch_2 
    guardBlock
      temp bool t_566 = Node_2.state == 9,
      temp bool t_567 = Node_2.caw != 2,
      temp bool t_568 = Node_2.father == 2,
      temp bool t_569 = t_567 and t_568,
      temp bool t_570 = t_566 and t_569,
      temp bool t_571 = channel_ch_2.state == 0,
      temp bool t_572 = channel_ch_2.buf_act == 10,
      temp bool t_573 = not t_572,
      temp bool t_574 = t_571 and t_573,
      temp bool t_575 = t_570 and t_574;

    guardCondition t_575;
    effect
      Node_2.state = 1,
      temp byte t_576 = Node_2.caw * 10,
      temp byte t_577 = 2 + t_576,
      temp byte t_578 = t_577 + 0,
      channel_ch_2.buf[channel_ch_2.buf_act] = t_578,
      channel_ch_2.state = 0,
      temp byte t_579 = channel_ch_2.buf_act + 1,
      channel_ch_2.buf_act = t_579;

accepting conditions
  LTL_property.state == 0

