byte pos[3] =  {0, 0, 0};
byte step[3] =  {0, 0, 0};
state {NCS(0), CS(1), wait(2), q2(3), q3(4)} P_0.state = 0;
byte P_0.j = 0;
byte P_0.k = 0;
state {NCS(0), CS(1), wait(2), q2(3), q3(4)} P_1.state = 0;
byte P_1.j = 0;
byte P_1.k = 0;
state {NCS(0), CS(1), wait(2), q2(3), q3(4)} P_2.state = 0;
byte P_2.j = 0;
byte P_2.k = 0;
state {q1(0), q2(1)} LTL_property.state = 0;

  process P_0
    guardBlock
      temp bool t_0 = P_0.state == 0;
    guardCondition t_0;
    effect
      P_0.state = 2,
      P_0.j = 1;

  process P_0
    guardBlock
      temp bool t_1 = P_0.state == 2,
      temp bool t_2 = P_0.j < 3,
      temp bool t_3 = t_1 and t_2;
    guardCondition t_3;
    effect
      P_0.state = 3,
      pos[0] = P_0.j;

  process P_0
    guardBlock
      temp bool t_4 = P_0.state == 3;
    guardCondition t_4;
    effect
      P_0.state = 4,
      temp int t_5 = P_0.j - 1,
      step[t_5] = 0,
      P_0.k = 0;

  process P_0
    guardBlock
      temp bool t_6 = P_0.state == 4,
      temp bool t_7 = P_0.k < 3,
      temp bool t_8 = P_0.k == 0,
      temp byte t_9 = pos[P_0.k],
      temp bool t_10 = t_9 <= P_0.j,
      temp bool t_11 = t_8 or t_10,
      temp bool t_12 = t_7 and t_11,
      temp bool t_13 = t_6 and t_12;
    guardCondition t_13;
    effect
      P_0.state = 4,
      temp int t_14 = P_0.k + 1,
      P_0.k = t_14;

  process P_0
    guardBlock
      temp bool t_15 = P_0.state == 4,
      temp int t_16 = P_0.j - 1,
      temp byte t_17 = step[t_16],
      temp bool t_18 = t_17 != 0,
      temp bool t_19 = P_0.k == 3,
      temp bool t_20 = t_18 or t_19,
      temp bool t_21 = t_15 and t_20;
    guardCondition t_21;
    effect
      P_0.state = 2,
      temp int t_22 = P_0.j + 1,
      P_0.j = t_22;

  process P_0
    guardBlock
      temp bool t_23 = P_0.state == 2,
      temp bool t_24 = P_0.j == 3,
      temp bool t_25 = t_23 and t_24;
    guardCondition t_25;
    effect
      P_0.state = 1;

  process P_0
    guardBlock
      temp bool t_26 = P_0.state == 1;
    guardCondition t_26;
    effect
      P_0.state = 0,
      pos[0] = 0;

  process P_1
    guardBlock
      temp bool t_27 = P_1.state == 0;
    guardCondition t_27;
    effect
      P_1.state = 2,
      P_1.j = 1;

  process P_1
    guardBlock
      temp bool t_28 = P_1.state == 2,
      temp bool t_29 = P_1.j < 3,
      temp bool t_30 = t_28 and t_29;
    guardCondition t_30;
    effect
      P_1.state = 3,
      pos[1] = P_1.j;

  process P_1
    guardBlock
      temp bool t_31 = P_1.state == 3;
    guardCondition t_31;
    effect
      P_1.state = 4,
      temp int t_32 = P_1.j - 1,
      step[t_32] = 1,
      P_1.k = 0;

  process P_1
    guardBlock
      temp bool t_33 = P_1.state == 4,
      temp bool t_34 = P_1.k < 3,
      temp bool t_35 = P_1.k == 1,
      temp byte t_36 = pos[P_1.k],
      temp bool t_37 = t_36 <= P_1.j,
      temp bool t_38 = t_35 or t_37,
      temp bool t_39 = t_34 and t_38,
      temp bool t_40 = t_33 and t_39;
    guardCondition t_40;
    effect
      P_1.state = 4,
      temp int t_41 = P_1.k + 1,
      P_1.k = t_41;

  process P_1
    guardBlock
      temp bool t_42 = P_1.state == 4,
      temp int t_43 = P_1.j - 1,
      temp byte t_44 = step[t_43],
      temp bool t_45 = t_44 != 1,
      temp bool t_46 = P_1.k == 3,
      temp bool t_47 = t_45 or t_46,
      temp bool t_48 = t_42 and t_47;
    guardCondition t_48;
    effect
      P_1.state = 2,
      temp int t_49 = P_1.j + 1,
      P_1.j = t_49;

  process P_1
    guardBlock
      temp bool t_50 = P_1.state == 2,
      temp bool t_51 = P_1.j == 3,
      temp bool t_52 = t_50 and t_51;
    guardCondition t_52;
    effect
      P_1.state = 1;

  process P_1
    guardBlock
      temp bool t_53 = P_1.state == 1;
    guardCondition t_53;
    effect
      P_1.state = 0,
      pos[1] = 0;

  process P_2
    guardBlock
      temp bool t_54 = P_2.state == 0;
    guardCondition t_54;
    effect
      P_2.state = 2,
      P_2.j = 1;

  process P_2
    guardBlock
      temp bool t_55 = P_2.state == 2,
      temp bool t_56 = P_2.j < 3,
      temp bool t_57 = t_55 and t_56;
    guardCondition t_57;
    effect
      P_2.state = 3,
      pos[2] = P_2.j;

  process P_2
    guardBlock
      temp bool t_58 = P_2.state == 3;
    guardCondition t_58;
    effect
      P_2.state = 4,
      temp int t_59 = P_2.j - 1,
      step[t_59] = 2,
      P_2.k = 0;

  process P_2
    guardBlock
      temp bool t_60 = P_2.state == 4,
      temp bool t_61 = P_2.k < 3,
      temp bool t_62 = P_2.k == 2,
      temp byte t_63 = pos[P_2.k],
      temp bool t_64 = t_63 <= P_2.j,
      temp bool t_65 = t_62 or t_64,
      temp bool t_66 = t_61 and t_65,
      temp bool t_67 = t_60 and t_66;
    guardCondition t_67;
    effect
      P_2.state = 4,
      temp int t_68 = P_2.k + 1,
      P_2.k = t_68;

  process P_2
    guardBlock
      temp bool t_69 = P_2.state == 4,
      temp int t_70 = P_2.j - 1,
      temp byte t_71 = step[t_70],
      temp bool t_72 = t_71 != 2,
      temp bool t_73 = P_2.k == 3,
      temp bool t_74 = t_72 or t_73,
      temp bool t_75 = t_69 and t_74;
    guardCondition t_75;
    effect
      P_2.state = 2,
      temp int t_76 = P_2.j + 1,
      P_2.j = t_76;

  process P_2
    guardBlock
      temp bool t_77 = P_2.state == 2,
      temp bool t_78 = P_2.j == 3,
      temp bool t_79 = t_77 and t_78;
    guardCondition t_79;
    effect
      P_2.state = 1;

  process P_2
    guardBlock
      temp bool t_80 = P_2.state == 1;
    guardCondition t_80;
    effect
      P_2.state = 0,
      pos[2] = 0;

  process LTL_property
    guardBlock
      temp bool t_81 = LTL_property.state == 0;
    guardCondition t_81;
    effect
      LTL_property.state = 0;

  process LTL_property
    guardBlock
      temp bool t_82 = LTL_property.state == 0,
      temp bool t_83 = P_0.state == 1,
      temp bool t_84 = P_1.state == 1,
      temp int t_85 = t_83 + t_84,
      temp bool t_86 = P_2.state == 1,
      temp int t_87 = t_85 + t_86,
      temp bool t_88 = t_87 == 1,
      temp bool t_89 = not t_88,
      temp bool t_90 = t_82 and t_89;
    guardCondition t_90;
    effect
      LTL_property.state = 1;

  process LTL_property
    guardBlock
      temp bool t_91 = LTL_property.state == 1,
      temp bool t_92 = P_0.state == 1,
      temp bool t_93 = P_1.state == 1,
      temp int t_94 = t_92 + t_93,
      temp bool t_95 = P_2.state == 1,
      temp int t_96 = t_94 + t_95,
      temp bool t_97 = t_96 == 1,
      temp bool t_98 = not t_97,
      temp bool t_99 = t_91 and t_98;
    guardCondition t_99;
    effect
      LTL_property.state = 1;
      accepting conditions
      LTL_property.state == 1
