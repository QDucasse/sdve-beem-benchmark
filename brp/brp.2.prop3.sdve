byte prod_n = 0;
state {ready(0), start_send(1), wait_result(2), check(3)} Producer.state = 0;
byte Producer.result = 0;
byte Producer.n = 0;
state {ready(0), get_msg(1), check(2), st_error(3)} Consumer.state = 0;
byte Consumer.m = 0;
byte Consumer.n = 0;
state {idle(0), next_frame(1), wait_ack(2), send(3), success(4), q_error(5), ret(6)} Sender.state = 0;
byte Sender.ab = 0;
byte Sender.n = 0;
byte Sender.i = 0;
byte Sender.counter = 0;
state {idle(0), new_file(1), frame_received(2), frame_reported(3), first_safe(4), ret(5)} Receiver.state = 1;
byte Receiver.value = 0;
byte Receiver.exp_ab = 0;
state {ready(0), got_msg(1)} K.state = 0;
byte K.value = 0;
state {ready(0), got_msg(1)} L.state = 0;
state {q1(0), q2(1)} LTL_property.state = 0;
temp bool t_0 = false;
temp bool t_1 = false;
temp bool t_2 = false;
temp bool t_3 = false;
temp bool t_4 = false;
temp bool t_5 = false;
temp bool t_6 = false;
temp bool t_7 = false;
temp bool t_8 = false;
temp bool t_9 = false;
temp bool t_10 = false;
temp bool t_11 = false;
temp bool t_12 = false;
temp bool t_13 = false;
temp bool t_14 = false;
temp bool t_15 = false;
temp bool t_16 = false;
temp bool t_17 = false;
temp bool t_18 = false;
temp bool t_19 = false;
temp bool t_20 = false;
temp bool t_21 = false;
temp bool t_22 = false;
temp bool t_23 = false;
temp bool t_24 = false;
temp bool t_25 = false;
temp int t_26 = 0;
temp bool t_27 = false;
temp byte t_28 = 0;
temp bool t_29 = false;
temp byte t_30 = 0;
temp bool t_31 = false;
temp bool t_32 = false;
temp bool t_33 = false;
temp bool t_34 = false;
temp bool t_35 = false;
temp bool t_36 = false;
temp bool t_37 = false;
temp bool t_38 = false;
temp bool t_39 = false;
temp bool t_40 = false;
temp bool t_41 = false;
temp bool t_42 = false;
temp bool t_43 = false;
temp bool t_44 = false;
temp bool t_45 = false;
temp bool t_46 = false;
temp bool t_47 = false;
temp bool t_48 = false;
temp bool t_49 = false;
temp bool t_50 = false;
temp int t_51 = 0;
temp bool t_52 = false;
temp bool t_53 = false;
temp bool t_54 = false;
temp bool t_55 = false;
temp bool t_56 = false;
temp bool t_57 = false;
temp bool t_58 = false;
temp int t_59 = 0;
temp bool t_60 = false;
temp bool t_61 = false;
temp bool t_62 = false;
temp bool t_63 = false;
temp bool t_64 = false;
temp bool t_65 = false;
temp bool t_66 = false;
temp int t_67 = 0;
temp bool t_68 = false;
temp bool t_69 = false;
temp bool t_70 = false;
temp bool t_71 = false;
temp bool t_72 = false;
temp bool t_73 = false;
temp bool t_74 = false;
temp bool t_75 = false;
temp bool t_76 = false;
temp bool t_77 = false;
temp bool t_78 = false;
temp bool t_79 = false;
temp bool t_80 = false;
temp bool t_81 = false;
temp bool t_82 = false;
temp bool t_83 = false;
temp bool t_84 = false;
temp bool t_85 = false;
temp bool t_86 = false;
temp bool t_87 = false;
temp bool t_88 = false;
temp bool t_89 = false;
temp bool t_90 = false;
temp bool t_91 = false;
temp byte t_92 = 0;
temp bool t_93 = false;
temp bool t_94 = false;
temp bool t_95 = false;
temp bool t_96 = false;
temp bool t_97 = false;
temp bool t_98 = false;
temp bool t_99 = false;
temp int t_100 = 0;
temp bool t_101 = false;
temp bool t_102 = false;
temp bool t_103 = false;
temp bool t_104 = false;
temp bool t_105 = false;
temp bool t_106 = false;
temp bool t_107 = false;
temp bool t_108 = false;
temp bool t_109 = false;
temp bool t_110 = false;
temp bool t_111 = false;
temp bool t_112 = false;
temp bool t_113 = false;
temp bool t_114 = false;
temp bool t_115 = false;
temp bool t_116 = false;
temp byte t_117 = 0;
temp bool t_118 = false;
temp byte t_119 = 0;
temp bool t_120 = false;
temp bool t_121 = false;
temp bool t_122 = false;
temp bool t_123 = false;
temp bool t_124 = false;
temp int t_125 = 0;
temp bool t_126 = false;
temp byte t_127 = 0;
temp bool t_128 = false;
temp byte t_129 = 0;
temp bool t_130 = false;
temp bool t_131 = false;
temp byte t_132 = 0;
temp bool t_133 = false;
temp bool t_134 = false;
temp bool t_135 = false;
temp bool t_136 = false;
temp bool t_137 = false;
temp int t_138 = 0;
temp bool t_139 = false;
temp byte t_140 = 0;
temp bool t_141 = false;
temp byte t_142 = 0;
temp bool t_143 = false;
temp bool t_144 = false;
temp byte t_145 = 0;
temp bool t_146 = false;
temp bool t_147 = false;
temp bool t_148 = false;
temp bool t_149 = false;
temp bool t_150 = false;
temp int t_151 = 0;
temp bool t_152 = false;
temp bool t_153 = false;
temp bool t_154 = false;
temp int t_155 = 0;
temp bool t_156 = false;
temp bool t_157 = false;
temp bool t_158 = false;
temp bool t_159 = false;
temp bool t_160 = false;
temp bool t_161 = false;
temp bool t_162 = false;
temp bool t_163 = false;
temp bool t_164 = false;
temp bool t_165 = false;
temp int t_166 = 0;
temp bool t_167 = false;
temp bool t_168 = false;
temp bool t_169 = false;
temp bool t_170 = false;
temp bool t_171 = false;
temp bool t_172 = false;
temp bool t_173 = false;
temp bool t_174 = false;
temp bool t_175 = false;
temp bool t_176 = false;
temp int t_177 = 0;
temp bool t_178 = false;
temp bool t_179 = false;
temp bool t_180 = false;
temp bool t_181 = false;
temp bool t_182 = false;
temp bool t_183 = false;
temp bool t_184 = false;
temp bool t_185 = false;
temp bool t_186 = false;
temp int t_187 = 0;
	process Producer 
		guardBlock
			t_0 = Producer.state == 0;

		guardCondition t_0;
		effect
			Producer.state = 1,
			prod_n = 1;

	process Producer 
		guardBlock
			t_1 = Producer.state == 0;

		guardCondition t_1;
		effect
			Producer.state = 1,
			prod_n = 2;

	process Producer 
		guardBlock
			t_2 = Producer.state == 0;

		guardCondition t_2;
		effect
			Producer.state = 1,
			prod_n = 3;

	process Producer 
		guardBlock
			t_3 = Producer.state == 3,
			t_4 = Producer.result == 2,
			t_5 = Producer.result == 3,
			t_6 = t_4 or t_5,
			t_7 = t_3 and t_6;

		guardCondition t_7;
		effect
			Producer.state = 1;

	process Consumer 
		guardBlock
			t_8 = Consumer.state == 1,
			t_9 = Consumer.m == 4,
			t_10 = Consumer.m == 5,
			t_11 = t_9 or t_10,
			t_12 = t_8 and t_11;

		guardCondition t_12;
		effect
			Consumer.state = 0;

	process Consumer 
		guardBlock
			t_13 = Consumer.state == 1,
			t_14 = Consumer.m == 2,
			t_15 = t_13 and t_14;

		guardCondition t_15;
		effect
			Consumer.state = 0,
			Consumer.n = 0;

	process Consumer 
		guardBlock
			t_16 = Consumer.state == 1,
			t_17 = Consumer.m == 1,
			t_18 = t_16 and t_17;

		guardCondition t_18;
		effect
			Consumer.state = 2;

	process Consumer 
		guardBlock
			t_19 = Consumer.state == 2,
			t_20 = Consumer.n != prod_n,
			t_21 = t_19 and t_20;

		guardCondition t_21;
		effect
			Consumer.state = 3;

	process Sender 
		guardBlock
			t_22 = Sender.state == 1;

		guardCondition t_22;
		effect
			Sender.state = 3,
			Sender.counter = 0;

	process Sender 
		guardBlock
			t_23 = Sender.state == 4,
			t_24 = Sender.i < Sender.n,
			t_25 = t_23 and t_24;

		guardCondition t_25;
		effect
			Sender.state = 1,
			t_26 = Sender.i + 1,
			Sender.i = t_26;

	process Receiver 
		guardBlock
			t_27 = Receiver.state == 4;

		guardCondition t_27;
		effect
			Receiver.state = 2,
			t_28 = Receiver.value & 1,
			Receiver.exp_ab = t_28;

	process Receiver 
		guardBlock
			t_29 = Receiver.state == 0,
			t_30 = Receiver.value & 2,
			t_31 = t_30 == 2,
			t_32 = t_29 and t_31;

		guardCondition t_32;
		effect
			Receiver.state = 5;

	process LTL_property 
		guardBlock
			t_33 = LTL_property.state == 0;

		guardCondition t_33;
		effect
			LTL_property.state = 0;

	process LTL_property 
		guardBlock
			t_34 = LTL_property.state == 0,
			t_35 = Producer.state == 2,
			t_36 = Producer.state == 0,
			t_37 = not t_36,
			t_38 = t_35 and t_37,
			t_39 = t_34 and t_38;

		guardCondition t_39;
		effect
			LTL_property.state = 1;

	process LTL_property 
		guardBlock
			t_40 = LTL_property.state == 1,
			t_41 = Producer.state == 0,
			t_42 = not t_41,
			t_43 = t_40 and t_42;

		guardCondition t_43;
		effect
			LTL_property.state = 1;

	process Sender_K 
		guardBlock
			t_44 = Sender.state == 3,
			t_45 = Sender.i == 1,
			t_46 = Sender.i == Sender.n,
			t_47 = t_45 and t_46,
			t_48 = t_44 and t_47,
			t_49 = K.state == 0,
			t_50 = t_48 and t_49;

		guardCondition t_50;
		effect
			Sender.state = 2,
			t_51 = 6 + Sender.ab,
			K.value = t_51,
			K.state = 1;

	process Sender_K 
		guardBlock
			t_52 = Sender.state == 3,
			t_53 = Sender.i > 1,
			t_54 = Sender.i == Sender.n,
			t_55 = t_53 and t_54,
			t_56 = t_52 and t_55,
			t_57 = K.state == 0,
			t_58 = t_56 and t_57;

		guardCondition t_58;
		effect
			Sender.state = 2,
			t_59 = 2 + Sender.ab,
			K.value = t_59,
			K.state = 1;

	process Sender_K 
		guardBlock
			t_60 = Sender.state == 3,
			t_61 = Sender.i == 1,
			t_62 = Sender.i < Sender.n,
			t_63 = t_61 and t_62,
			t_64 = t_60 and t_63,
			t_65 = K.state == 0,
			t_66 = t_64 and t_65;

		guardCondition t_66;
		effect
			Sender.state = 2,
			t_67 = 4 + Sender.ab,
			K.value = t_67,
			K.state = 1;

	process Sender_K 
		guardBlock
			t_68 = Sender.state == 3,
			t_69 = Sender.i > 1,
			t_70 = Sender.i < Sender.n,
			t_71 = t_69 and t_70,
			t_72 = t_68 and t_71,
			t_73 = K.state == 0,
			t_74 = t_72 and t_73;

		guardCondition t_74;
		effect
			Sender.state = 2,
			K.value = Sender.ab,
			K.state = 1;

	process Sender_Receiver 
		guardBlock
			t_75 = Sender.state == 6,
			t_76 = Receiver.state == 5,
			t_77 = t_75 and t_76;

		guardCondition t_77;
		effect
			Sender.state = 0,
			Receiver.state = 1;

	process Sender_Receiver 
		guardBlock
			t_78 = Sender.state == 6,
			t_79 = Receiver.state == 1,
			t_80 = t_78 and t_79;

		guardCondition t_80;
		effect
			Sender.state = 0,
			Receiver.state = 1;

	process Producer_Sender 
		guardBlock
			t_81 = Producer.state == 1,
			t_82 = Sender.state == 0,
			t_83 = t_81 and t_82;

		guardCondition t_83;
		effect
			Producer.state = 2,
			Sender.n = prod_n,
			Sender.state = 1,
			Sender.i = 1;

	process Producer_Consumer 
		guardBlock
			t_84 = Producer.state == 3,
			t_85 = Producer.result == 1,
			t_86 = t_84 and t_85,
			t_87 = Consumer.state == 2,
			t_88 = Consumer.n == prod_n,
			t_89 = t_87 and t_88,
			t_90 = t_86 and t_89;

		guardCondition t_90;
		effect
			Producer.state = 0,
			Consumer.state = 0;

	process Receiver_L 
		guardBlock
			t_91 = Receiver.state == 2,
			t_92 = Receiver.value & 1,
			t_93 = Receiver.exp_ab != t_92,
			t_94 = t_91 and t_93,
			t_95 = L.state == 0,
			t_96 = t_94 and t_95;

		guardCondition t_96;
		effect
			Receiver.state = 0,
			L.state = 1;

	process Receiver_L 
		guardBlock
			t_97 = Receiver.state == 3,
			t_98 = L.state == 0,
			t_99 = t_97 and t_98;

		guardCondition t_99;
		effect
			Receiver.state = 0,
			t_100 = 1 - Receiver.exp_ab,
			Receiver.exp_ab = t_100,
			L.state = 1;

	process Sender_Producer 
		guardBlock
			t_101 = Sender.state == 4,
			t_102 = Sender.i == Sender.n,
			t_103 = t_101 and t_102,
			t_104 = Producer.state == 2,
			t_105 = t_103 and t_104;

		guardCondition t_105;
		effect
			Sender.state = 6,
			Producer.result = 1,
			Producer.state = 3;

	process Sender_Producer 
		guardBlock
			t_106 = Sender.state == 5,
			t_107 = Sender.i < Sender.n,
			t_108 = t_106 and t_107,
			t_109 = Producer.state == 2,
			t_110 = t_108 and t_109;

		guardCondition t_110;
		effect
			Sender.state = 6,
			Producer.result = 2,
			Producer.state = 3;

	process Sender_Producer 
		guardBlock
			t_111 = Sender.state == 5,
			t_112 = Sender.i == Sender.n,
			t_113 = t_111 and t_112,
			t_114 = Producer.state == 2,
			t_115 = t_113 and t_114;

		guardCondition t_115;
		effect
			Sender.state = 6,
			Producer.result = 3,
			Producer.state = 3;

	process Receiver_Consumer 
		guardBlock
			t_116 = Receiver.state == 2,
			t_117 = Receiver.value & 1,
			t_118 = t_117 == Receiver.exp_ab,
			t_119 = Receiver.value & 2,
			t_120 = t_119 == 2,
			t_121 = t_118 and t_120,
			t_122 = t_116 and t_121,
			t_123 = Consumer.state == 0,
			t_124 = t_122 and t_123;

		guardCondition t_124;
		effect
			Receiver.state = 3,
			Consumer.m = 1,
			Consumer.state = 1,
			t_125 = Consumer.n + 1,
			Consumer.n = t_125;

	process Receiver_Consumer 
		guardBlock
			t_126 = Receiver.state == 2,
			t_127 = Receiver.value & 1,
			t_128 = t_127 == Receiver.exp_ab,
			t_129 = Receiver.value & 2,
			t_130 = t_129 == 0,
			t_131 = t_128 and t_130,
			t_132 = Receiver.value & 4,
			t_133 = t_132 == 0,
			t_134 = t_131 and t_133,
			t_135 = t_126 and t_134,
			t_136 = Consumer.state == 0,
			t_137 = t_135 and t_136;

		guardCondition t_137;
		effect
			Receiver.state = 3,
			Consumer.m = 5,
			Consumer.state = 1,
			t_138 = Consumer.n + 1,
			Consumer.n = t_138;

	process Receiver_Consumer 
		guardBlock
			t_139 = Receiver.state == 2,
			t_140 = Receiver.value & 1,
			t_141 = t_140 == Receiver.exp_ab,
			t_142 = Receiver.value & 2,
			t_143 = t_142 == 0,
			t_144 = t_141 and t_143,
			t_145 = Receiver.value & 4,
			t_146 = t_145 == 4,
			t_147 = t_144 and t_146,
			t_148 = t_139 and t_147,
			t_149 = Consumer.state == 0,
			t_150 = t_148 and t_149;

		guardCondition t_150;
		effect
			Receiver.state = 3,
			Consumer.m = 4,
			Consumer.state = 1,
			t_151 = Consumer.n + 1,
			Consumer.n = t_151;

	process Receiver_Consumer 
		guardBlock
			t_152 = Receiver.state == 0,
			t_153 = Consumer.state == 0,
			t_154 = t_152 and t_153;

		guardCondition t_154;
		effect
			Receiver.state = 5,
			Consumer.m = 2,
			Consumer.state = 1,
			t_155 = Consumer.n + 1,
			Consumer.n = t_155;

	process K_Sender 
		guardBlock
			t_156 = K.state == 1,
			t_157 = Sender.state == 2,
			t_158 = Sender.counter == 5,
			t_159 = t_157 and t_158,
			t_160 = t_156 and t_159;

		guardCondition t_160;
		effect
			K.state = 0,
			Sender.state = 5;

	process K_Sender 
		guardBlock
			t_161 = K.state == 1,
			t_162 = Sender.state == 2,
			t_163 = Sender.counter < 5,
			t_164 = t_162 and t_163,
			t_165 = t_161 and t_164;

		guardCondition t_165;
		effect
			K.state = 0,
			Sender.state = 3,
			t_166 = Sender.counter + 1,
			Sender.counter = t_166;

	process L_Sender 
		guardBlock
			t_167 = L.state == 1,
			t_168 = Sender.state == 2,
			t_169 = Sender.counter == 5,
			t_170 = t_168 and t_169,
			t_171 = t_167 and t_170;

		guardCondition t_171;
		effect
			L.state = 0,
			Sender.state = 5;

	process L_Sender 
		guardBlock
			t_172 = L.state == 1,
			t_173 = Sender.state == 2,
			t_174 = Sender.counter < 5,
			t_175 = t_173 and t_174,
			t_176 = t_172 and t_175;

		guardCondition t_176;
		effect
			L.state = 0,
			Sender.state = 3,
			t_177 = Sender.counter + 1,
			Sender.counter = t_177;

	process K_Receiver 
		guardBlock
			t_178 = K.state == 1,
			t_179 = Receiver.state == 1,
			t_180 = t_178 and t_179;

		guardCondition t_180;
		effect
			K.state = 0,
			Receiver.value = K.value,
			Receiver.state = 4;

	process K_Receiver 
		guardBlock
			t_181 = K.state == 1,
			t_182 = Receiver.state == 0,
			t_183 = t_181 and t_182;

		guardCondition t_183;
		effect
			K.state = 0,
			Receiver.value = K.value,
			Receiver.state = 2;

	process L_Sender 
		guardBlock
			t_184 = L.state == 1,
			t_185 = Sender.state == 2,
			t_186 = t_184 and t_185;

		guardCondition t_186;
		effect
			L.state = 0,
			Sender.state = 4,
			t_187 = 1 - Sender.ab,
			Sender.ab = t_187;

accepting conditions
	LTL_property.state == 1

system async property LTL_property;
