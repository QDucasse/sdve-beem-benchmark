state {ready(0), start_send(1), wait_result(2), check(3)} Producer.state = 0;
state {ready(0), get_msg(1), check(2), st_error(3)} Consumer.state = 0;
state {idle(0), next_frame(1), wait_ack(2), send(3), success(4), q_error(5), ret(6)} Sender.state = 0;
state {idle(0), new_file(1), frame_received(2), frame_reported(3), first_safe(4), ret(5)} Receiver.state = 1;
state {ready(0), got_msg(1)} K.state = 0;
state {ready(0), got_msg(1)} L.state = 0;
state {q1(0), q2(1)} LTL_property.state = 0;
byte prod_n = 0;
byte Producer.result = 0;
byte Producer.n = 0;
byte Consumer.m = 0;
byte Consumer.n = 0;
byte Sender.ab = 0;
byte Sender.n = 0;
byte Sender.i = 0;
byte Sender.counter = 0;
byte Receiver.value = 0;
byte Receiver.exp_ab = 0;
byte K.value = 0;

  process Producer 
    guardBlock
      temp bool t_0 = Producer.state == 0;

    guardCondition t_0;
    effect
      Producer.state = 1,
      prod_n = 1;

  process Producer 
    guardBlock
      temp bool t_1 = Producer.state == 0;

    guardCondition t_1;
    effect
      Producer.state = 1,
      prod_n = 2;

  process Producer 
    guardBlock
      temp bool t_2 = Producer.state == 0;

    guardCondition t_2;
    effect
      Producer.state = 1,
      prod_n = 3;

  process Producer 
    guardBlock
      temp bool t_3 = Producer.state == 3,
      temp bool t_4 = Producer.result == 2,
      temp bool t_5 = Producer.result == 3,
      temp bool t_6 = t_4 or t_5,
      temp bool t_7 = t_3 and t_6;

    guardCondition t_7;
    effect
      Producer.state = 1;

  process Consumer 
    guardBlock
      temp bool t_8 = Consumer.state == 1,
      temp bool t_9 = Consumer.m == 4,
      temp bool t_10 = Consumer.m == 5,
      temp bool t_11 = t_9 or t_10,
      temp bool t_12 = t_8 and t_11;

    guardCondition t_12;
    effect
      Consumer.state = 0;

  process Consumer 
    guardBlock
      temp bool t_13 = Consumer.state == 1,
      temp bool t_14 = Consumer.m == 2,
      temp bool t_15 = t_13 and t_14;

    guardCondition t_15;
    effect
      Consumer.state = 0,
      Consumer.n = 0;

  process Consumer 
    guardBlock
      temp bool t_16 = Consumer.state == 1,
      temp bool t_17 = Consumer.m == 1,
      temp bool t_18 = t_16 and t_17;

    guardCondition t_18;
    effect
      Consumer.state = 2;

  process Consumer 
    guardBlock
      temp bool t_19 = Consumer.state == 2,
      temp bool t_20 = Consumer.n != prod_n,
      temp bool t_21 = t_19 and t_20;

    guardCondition t_21;
    effect
      Consumer.state = 3;

  process Sender 
    guardBlock
      temp bool t_22 = Sender.state == 1;

    guardCondition t_22;
    effect
      Sender.state = 3,
      Sender.counter = 0;

  process Sender 
    guardBlock
      temp bool t_23 = Sender.state == 4,
      temp bool t_24 = Sender.i < Sender.n,
      temp bool t_25 = t_23 and t_24;

    guardCondition t_25;
    effect
      Sender.state = 1,
      temp byte t_26 = Sender.i + 1,
      Sender.i = t_26;

  process Receiver 
    guardBlock
      temp bool t_27 = Receiver.state == 4;

    guardCondition t_27;
    effect
      Receiver.state = 2,
      temp byte t_28 = Receiver.value and 1,
      Receiver.exp_ab = t_28;

  process Receiver 
    guardBlock
      temp bool t_29 = Receiver.state == 0,
      temp byte t_30 = Receiver.value and 2,
      temp bool t_31 = t_30 == 2,
      temp bool t_32 = t_29 and t_31;

    guardCondition t_32;
    effect
      Receiver.state = 5;

  process LTL_property 
    guardBlock
      temp bool t_33 = LTL_property.state == 0;

    guardCondition t_33;
    effect
      LTL_property.state = 0;

  process LTL_property 
    guardBlock
      temp bool t_34 = LTL_property.state == 0,
      temp bool t_35 = Producer.state == 2,
      temp bool t_36 = Producer.state == 0,
      temp bool t_37 = not t_36,
      temp bool t_38 = t_35 and t_37,
      temp bool t_39 = t_34 and t_38;

    guardCondition t_39;
    effect
      LTL_property.state = 1;

  process LTL_property 
    guardBlock
      temp bool t_40 = LTL_property.state == 1,
      temp bool t_41 = Producer.state == 0,
      temp bool t_42 = not t_41,
      temp bool t_43 = t_40 and t_42;

    guardCondition t_43;
    effect
      LTL_property.state = 1;

  process Receiver_Consumer 
    guardBlock
      temp bool t_44 = Receiver.state == 2,
      temp byte t_45 = Receiver.value and 1,
      temp bool t_46 = t_45 == Receiver.exp_ab,
      temp byte t_47 = Receiver.value and 2,
      temp bool t_48 = t_47 == 2,
      temp bool t_49 = t_46 and t_48,
      temp bool t_50 = t_44 and t_49,
      temp bool t_51 = Consumer.state == 0,
      temp bool t_52 = t_50 and t_51;

    guardCondition t_52;
    effect
      Receiver.state = 3,
      Consumer.m = 1,
      Consumer.state = 1,
      temp byte t_53 = Consumer.n + 1,
      Consumer.n = t_53;

  process Receiver_Consumer 
    guardBlock
      temp bool t_54 = Receiver.state == 2,
      temp byte t_55 = Receiver.value and 1,
      temp bool t_56 = t_55 == Receiver.exp_ab,
      temp byte t_57 = Receiver.value and 2,
      temp bool t_58 = t_57 == 0,
      temp bool t_59 = t_56 and t_58,
      temp byte t_60 = Receiver.value and 4,
      temp bool t_61 = t_60 == 0,
      temp bool t_62 = t_59 and t_61,
      temp bool t_63 = t_54 and t_62,
      temp bool t_64 = Consumer.state == 0,
      temp bool t_65 = t_63 and t_64;

    guardCondition t_65;
    effect
      Receiver.state = 3,
      Consumer.m = 5,
      Consumer.state = 1,
      temp byte t_66 = Consumer.n + 1,
      Consumer.n = t_66;

  process Receiver_Consumer 
    guardBlock
      temp bool t_67 = Receiver.state == 2,
      temp byte t_68 = Receiver.value and 1,
      temp bool t_69 = t_68 == Receiver.exp_ab,
      temp byte t_70 = Receiver.value and 2,
      temp bool t_71 = t_70 == 0,
      temp bool t_72 = t_69 and t_71,
      temp byte t_73 = Receiver.value and 4,
      temp bool t_74 = t_73 == 4,
      temp bool t_75 = t_72 and t_74,
      temp bool t_76 = t_67 and t_75,
      temp bool t_77 = Consumer.state == 0,
      temp bool t_78 = t_76 and t_77;

    guardCondition t_78;
    effect
      Receiver.state = 3,
      Consumer.m = 4,
      Consumer.state = 1,
      temp byte t_79 = Consumer.n + 1,
      Consumer.n = t_79;

  process Receiver_Consumer 
    guardBlock
      temp bool t_80 = Receiver.state == 0,
      temp bool t_81 = Consumer.state == 0,
      temp bool t_82 = t_80 and t_81;

    guardCondition t_82;
    effect
      Receiver.state = 5,
      Consumer.m = 2,
      Consumer.state = 1,
      temp byte t_83 = Consumer.n + 1,
      Consumer.n = t_83;

  process Producer_Sender 
    guardBlock
      temp bool t_84 = Producer.state == 1,
      temp bool t_85 = Sender.state == 0,
      temp bool t_86 = t_84 and t_85;

    guardCondition t_86;
    effect
      Producer.state = 2,
      Sender.n = prod_n,
      Sender.state = 1,
      Sender.i = 1;

  process Producer_Consumer 
    guardBlock
      temp bool t_87 = Producer.state == 3,
      temp bool t_88 = Producer.result == 1,
      temp bool t_89 = t_87 and t_88,
      temp bool t_90 = Consumer.state == 2,
      temp bool t_91 = Consumer.n == prod_n,
      temp bool t_92 = t_90 and t_91,
      temp bool t_93 = t_89 and t_92;

    guardCondition t_93;
    effect
      Producer.state = 0,
      Consumer.state = 0;

  process L_Sender 
    guardBlock
      temp bool t_94 = L.state == 1,
      temp bool t_95 = Sender.state == 2,
      temp bool t_96 = t_94 and t_95;

    guardCondition t_96;
    effect
      L.state = 0,
      Sender.state = 4,
      temp byte t_97 = 1 - Sender.ab,
      Sender.ab = t_97;

  process Sender_K 
    guardBlock
      temp bool t_98 = Sender.state == 3,
      temp bool t_99 = Sender.i == 1,
      temp bool t_100 = Sender.i == Sender.n,
      temp bool t_101 = t_99 and t_100,
      temp bool t_102 = t_98 and t_101,
      temp bool t_103 = K.state == 0,
      temp bool t_104 = t_102 and t_103;

    guardCondition t_104;
    effect
      Sender.state = 2,
      temp byte t_105 = 6 + Sender.ab,
      K.value = t_105,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_106 = Sender.state == 3,
      temp bool t_107 = Sender.i > 1,
      temp bool t_108 = Sender.i == Sender.n,
      temp bool t_109 = t_107 and t_108,
      temp bool t_110 = t_106 and t_109,
      temp bool t_111 = K.state == 0,
      temp bool t_112 = t_110 and t_111;

    guardCondition t_112;
    effect
      Sender.state = 2,
      temp byte t_113 = 2 + Sender.ab,
      K.value = t_113,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_114 = Sender.state == 3,
      temp bool t_115 = Sender.i == 1,
      temp bool t_116 = Sender.i < Sender.n,
      temp bool t_117 = t_115 and t_116,
      temp bool t_118 = t_114 and t_117,
      temp bool t_119 = K.state == 0,
      temp bool t_120 = t_118 and t_119;

    guardCondition t_120;
    effect
      Sender.state = 2,
      temp byte t_121 = 4 + Sender.ab,
      K.value = t_121,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_122 = Sender.state == 3,
      temp bool t_123 = Sender.i > 1,
      temp bool t_124 = Sender.i < Sender.n,
      temp bool t_125 = t_123 and t_124,
      temp bool t_126 = t_122 and t_125,
      temp bool t_127 = K.state == 0,
      temp bool t_128 = t_126 and t_127;

    guardCondition t_128;
    effect
      Sender.state = 2,
      K.value = Sender.ab,
      K.state = 1;

  process Sender_Producer 
    guardBlock
      temp bool t_129 = Sender.state == 4,
      temp bool t_130 = Sender.i == Sender.n,
      temp bool t_131 = t_129 and t_130,
      temp bool t_132 = Producer.state == 2,
      temp bool t_133 = t_131 and t_132;

    guardCondition t_133;
    effect
      Sender.state = 6,
      Producer.result = 1,
      Producer.state = 3;

  process Sender_Producer 
    guardBlock
      temp bool t_134 = Sender.state == 5,
      temp bool t_135 = Sender.i < Sender.n,
      temp bool t_136 = t_134 and t_135,
      temp bool t_137 = Producer.state == 2,
      temp bool t_138 = t_136 and t_137;

    guardCondition t_138;
    effect
      Sender.state = 6,
      Producer.result = 2,
      Producer.state = 3;

  process Sender_Producer 
    guardBlock
      temp bool t_139 = Sender.state == 5,
      temp bool t_140 = Sender.i == Sender.n,
      temp bool t_141 = t_139 and t_140,
      temp bool t_142 = Producer.state == 2,
      temp bool t_143 = t_141 and t_142;

    guardCondition t_143;
    effect
      Sender.state = 6,
      Producer.result = 3,
      Producer.state = 3;

  process Sender_Receiver 
    guardBlock
      temp bool t_144 = Sender.state == 6,
      temp bool t_145 = Receiver.state == 5,
      temp bool t_146 = t_144 and t_145;

    guardCondition t_146;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Sender_Receiver 
    guardBlock
      temp bool t_147 = Sender.state == 6,
      temp bool t_148 = Receiver.state == 1,
      temp bool t_149 = t_147 and t_148;

    guardCondition t_149;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process K_Sender 
    guardBlock
      temp bool t_150 = K.state == 1,
      temp bool t_151 = Sender.state == 2,
      temp bool t_152 = Sender.counter == 5,
      temp bool t_153 = t_151 and t_152,
      temp bool t_154 = t_150 and t_153;

    guardCondition t_154;
    effect
      K.state = 0,
      Sender.state = 5;

  process K_Sender 
    guardBlock
      temp bool t_155 = K.state == 1,
      temp bool t_156 = Sender.state == 2,
      temp bool t_157 = Sender.counter < 5,
      temp bool t_158 = t_156 and t_157,
      temp bool t_159 = t_155 and t_158;

    guardCondition t_159;
    effect
      K.state = 0,
      Sender.state = 3,
      temp byte t_160 = Sender.counter + 1,
      Sender.counter = t_160;

  process L_Sender 
    guardBlock
      temp bool t_161 = L.state == 1,
      temp bool t_162 = Sender.state == 2,
      temp bool t_163 = Sender.counter == 5,
      temp bool t_164 = t_162 and t_163,
      temp bool t_165 = t_161 and t_164;

    guardCondition t_165;
    effect
      L.state = 0,
      Sender.state = 5;

  process L_Sender 
    guardBlock
      temp bool t_166 = L.state == 1,
      temp bool t_167 = Sender.state == 2,
      temp bool t_168 = Sender.counter < 5,
      temp bool t_169 = t_167 and t_168,
      temp bool t_170 = t_166 and t_169;

    guardCondition t_170;
    effect
      L.state = 0,
      Sender.state = 3,
      temp byte t_171 = Sender.counter + 1,
      Sender.counter = t_171;

  process K_Receiver 
    guardBlock
      temp bool t_172 = K.state == 1,
      temp bool t_173 = Receiver.state == 1,
      temp bool t_174 = t_172 and t_173;

    guardCondition t_174;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 4;

  process K_Receiver 
    guardBlock
      temp bool t_175 = K.state == 1,
      temp bool t_176 = Receiver.state == 0,
      temp bool t_177 = t_175 and t_176;

    guardCondition t_177;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 2;

  process Receiver_L 
    guardBlock
      temp bool t_178 = Receiver.state == 2,
      temp byte t_179 = Receiver.value and 1,
      temp bool t_180 = Receiver.exp_ab != t_179,
      temp bool t_181 = t_178 and t_180,
      temp bool t_182 = L.state == 0,
      temp bool t_183 = t_181 and t_182;

    guardCondition t_183;
    effect
      Receiver.state = 0,
      L.state = 1;

  process Receiver_L 
    guardBlock
      temp bool t_184 = Receiver.state == 3,
      temp bool t_185 = L.state == 0,
      temp bool t_186 = t_184 and t_185;

    guardCondition t_186;
    effect
      Receiver.state = 0,
      temp byte t_187 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_187,
      L.state = 1;

accepting conditions
  LTL_property.state == 1

