byte prod_n = 0;
state {ready(0), start_send(1), wait_result(2), check(3)} Producer.state = 0;
byte Producer.result = 0;
byte Producer.n = 0;
state {ready(0), get_msg(1), check(2), st_error(3)} Consumer.state = 0;
byte Consumer.m = 0;
byte Consumer.n = 0;
state {idle(0), next_frame(1), wait_ack(2), send(3), success(4), q_error(5), ret(6)} Sender.state = 0;
byte Sender.ab = 0;
byte Sender.n = 0;
byte Sender.i = 0;
byte Sender.counter = 0;
state {idle(0), new_file(1), frame_received(2), frame_reported(3), first_safe(4), ret(5)} Receiver.state = 1;
byte Receiver.value = 0;
byte Receiver.exp_ab = 0;
state {ready(0), got_msg(1)} K.state = 0;
byte K.value = 0;
state {ready(0), got_msg(1)} L.state = 0;
state {q1(0), q2(1)} LTL_property.state = 0;

  process Producer
    guardBlock
      temp bool t_0 = Producer.state == 0;
    guardCondition t_0;
    effect
      Producer.state = 1,
      prod_n = 1;

  process Producer
    guardBlock
      temp bool t_1 = Producer.state == 0;
    guardCondition t_1;
    effect
      Producer.state = 1,
      prod_n = 2;

  process Producer
    guardBlock
      temp bool t_2 = Producer.state == 0;
    guardCondition t_2;
    effect
      Producer.state = 1,
      prod_n = 3;

  process Producer
    guardBlock
      temp bool t_3 = Producer.state == 3,
      temp bool t_4 = Producer.result == 2,
      temp bool t_5 = Producer.result == 3,
      temp bool t_6 = t_4 or t_5,
      temp bool t_7 = t_3 and t_6;
    guardCondition t_7;
    effect
      Producer.state = 1;

  process Consumer
    guardBlock
      temp bool t_8 = Consumer.state == 1,
      temp bool t_9 = Consumer.m == 4,
      temp bool t_10 = Consumer.m == 5,
      temp bool t_11 = t_9 or t_10,
      temp bool t_12 = t_8 and t_11;
    guardCondition t_12;
    effect
      Consumer.state = 0;

  process Consumer
    guardBlock
      temp bool t_13 = Consumer.state == 1,
      temp bool t_14 = Consumer.m == 2,
      temp bool t_15 = t_13 and t_14;
    guardCondition t_15;
    effect
      Consumer.state = 0,
      Consumer.n = 0;

  process Consumer
    guardBlock
      temp bool t_16 = Consumer.state == 1,
      temp bool t_17 = Consumer.m == 1,
      temp bool t_18 = t_16 and t_17;
    guardCondition t_18;
    effect
      Consumer.state = 2;

  process Consumer
    guardBlock
      temp bool t_19 = Consumer.state == 2,
      temp bool t_20 = Consumer.n != prod_n,
      temp bool t_21 = t_19 and t_20;
    guardCondition t_21;
    effect
      Consumer.state = 3;

  process Sender
    guardBlock
      temp bool t_22 = Sender.state == 1;
    guardCondition t_22;
    effect
      Sender.state = 3,
      Sender.counter = 0;

  process Sender
    guardBlock
      temp bool t_23 = Sender.state == 4,
      temp bool t_24 = Sender.i < Sender.n,
      temp bool t_25 = t_23 and t_24;
    guardCondition t_25;
    effect
      Sender.state = 1,
      temp int t_26 = Sender.i + 1,
      Sender.i = t_26;

  process Receiver
    guardBlock
      temp bool t_27 = Receiver.state == 4;
    guardCondition t_27;
    effect
      Receiver.state = 2,
      temp byte t_28 = Receiver.value & 1,
      Receiver.exp_ab = t_28;

  process Receiver
    guardBlock
      temp bool t_29 = Receiver.state == 0,
      temp byte t_30 = Receiver.value & 2,
      temp bool t_31 = t_30 == 2,
      temp bool t_32 = t_29 and t_31;
    guardCondition t_32;
    effect
      Receiver.state = 5;

  process LTL_property
    guardBlock
      temp bool t_33 = LTL_property.state == 0;
    guardCondition t_33;
    effect
      LTL_property.state = 0;

  process LTL_property
    guardBlock
      temp bool t_34 = LTL_property.state == 0,
      temp bool t_35 = Producer.state == 2,
      temp bool t_36 = Producer.state == 0,
      temp bool t_37 = not t_36,
      temp bool t_38 = t_35 and t_37,
      temp bool t_39 = t_34 and t_38;
    guardCondition t_39;
    effect
      LTL_property.state = 1;

  process LTL_property
    guardBlock
      temp bool t_40 = LTL_property.state == 1,
      temp bool t_41 = Producer.state == 0,
      temp bool t_42 = not t_41,
      temp bool t_43 = t_40 and t_42;
    guardCondition t_43;
    effect
      LTL_property.state = 1;

  process Sender_K
    guardBlock
      temp bool t_44 = Sender.state == 3,
      temp bool t_45 = Sender.i == 1,
      temp bool t_46 = Sender.i == Sender.n,
      temp bool t_47 = t_45 and t_46,
      temp bool t_48 = t_44 and t_47,
      temp bool t_49 = K.state == 0,
      temp bool t_50 = t_48 and t_49;
    guardCondition t_50;
    effect
      Sender.state = 2,
      temp int t_51 = 6 + Sender.ab,
      K.value = t_51,
      K.state = 1;

  process Sender_K
    guardBlock
      temp bool t_52 = Sender.state == 3,
      temp bool t_53 = Sender.i > 1,
      temp bool t_54 = Sender.i == Sender.n,
      temp bool t_55 = t_53 and t_54,
      temp bool t_56 = t_52 and t_55,
      temp bool t_57 = K.state == 0,
      temp bool t_58 = t_56 and t_57;
    guardCondition t_58;
    effect
      Sender.state = 2,
      temp int t_59 = 2 + Sender.ab,
      K.value = t_59,
      K.state = 1;

  process Sender_K
    guardBlock
      temp bool t_60 = Sender.state == 3,
      temp bool t_61 = Sender.i == 1,
      temp bool t_62 = Sender.i < Sender.n,
      temp bool t_63 = t_61 and t_62,
      temp bool t_64 = t_60 and t_63,
      temp bool t_65 = K.state == 0,
      temp bool t_66 = t_64 and t_65;
    guardCondition t_66;
    effect
      Sender.state = 2,
      temp int t_67 = 4 + Sender.ab,
      K.value = t_67,
      K.state = 1;

  process Sender_K
    guardBlock
      temp bool t_68 = Sender.state == 3,
      temp bool t_69 = Sender.i > 1,
      temp bool t_70 = Sender.i < Sender.n,
      temp bool t_71 = t_69 and t_70,
      temp bool t_72 = t_68 and t_71,
      temp bool t_73 = K.state == 0,
      temp bool t_74 = t_72 and t_73;
    guardCondition t_74;
    effect
      Sender.state = 2,
      K.value = Sender.ab,
      K.state = 1;

  process Sender_Receiver
    guardBlock
      temp bool t_75 = Sender.state == 6,
      temp bool t_76 = Receiver.state == 5,
      temp bool t_77 = t_75 and t_76;
    guardCondition t_77;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Sender_Receiver
    guardBlock
      temp bool t_78 = Sender.state == 6,
      temp bool t_79 = Receiver.state == 1,
      temp bool t_80 = t_78 and t_79;
    guardCondition t_80;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Producer_Sender
    guardBlock
      temp bool t_81 = Producer.state == 1,
      temp bool t_82 = Sender.state == 0,
      temp bool t_83 = t_81 and t_82;
    guardCondition t_83;
    effect
      Producer.state = 2,
      Sender.n = prod_n,
      Sender.state = 1,
      Sender.i = 1;

  process Producer_Consumer
    guardBlock
      temp bool t_84 = Producer.state == 3,
      temp bool t_85 = Producer.result == 1,
      temp bool t_86 = t_84 and t_85,
      temp bool t_87 = Consumer.state == 2,
      temp bool t_88 = Consumer.n == prod_n,
      temp bool t_89 = t_87 and t_88,
      temp bool t_90 = t_86 and t_89;
    guardCondition t_90;
    effect
      Producer.state = 0,
      Consumer.state = 0;

  process Receiver_L
    guardBlock
      temp bool t_91 = Receiver.state == 2,
      temp byte t_92 = Receiver.value & 1,
      temp bool t_93 = Receiver.exp_ab != t_92,
      temp bool t_94 = t_91 and t_93,
      temp bool t_95 = L.state == 0,
      temp bool t_96 = t_94 and t_95;
    guardCondition t_96;
    effect
      Receiver.state = 0,
      L.state = 1;

  process Receiver_L
    guardBlock
      temp bool t_97 = Receiver.state == 3,
      temp bool t_98 = L.state == 0,
      temp bool t_99 = t_97 and t_98;
    guardCondition t_99;
    effect
      Receiver.state = 0,
      temp int t_100 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_100,
      L.state = 1;

  process Sender_Producer
    guardBlock
      temp bool t_101 = Sender.state == 4,
      temp bool t_102 = Sender.i == Sender.n,
      temp bool t_103 = t_101 and t_102,
      temp bool t_104 = Producer.state == 2,
      temp bool t_105 = t_103 and t_104;
    guardCondition t_105;
    effect
      Sender.state = 6,
      Producer.result = 1,
      Producer.state = 3;

  process Sender_Producer
    guardBlock
      temp bool t_106 = Sender.state == 5,
      temp bool t_107 = Sender.i < Sender.n,
      temp bool t_108 = t_106 and t_107,
      temp bool t_109 = Producer.state == 2,
      temp bool t_110 = t_108 and t_109;
    guardCondition t_110;
    effect
      Sender.state = 6,
      Producer.result = 2,
      Producer.state = 3;

  process Sender_Producer
    guardBlock
      temp bool t_111 = Sender.state == 5,
      temp bool t_112 = Sender.i == Sender.n,
      temp bool t_113 = t_111 and t_112,
      temp bool t_114 = Producer.state == 2,
      temp bool t_115 = t_113 and t_114;
    guardCondition t_115;
    effect
      Sender.state = 6,
      Producer.result = 3,
      Producer.state = 3;

  process Receiver_Consumer
    guardBlock
      temp bool t_116 = Receiver.state == 2,
      temp byte t_117 = Receiver.value & 1,
      temp bool t_118 = t_117 == Receiver.exp_ab,
      temp byte t_119 = Receiver.value & 2,
      temp bool t_120 = t_119 == 2,
      temp bool t_121 = t_118 and t_120,
      temp bool t_122 = t_116 and t_121,
      temp bool t_123 = Consumer.state == 0,
      temp bool t_124 = t_122 and t_123;
    guardCondition t_124;
    effect
      Receiver.state = 3,
      Consumer.m = 1,
      Consumer.state = 1,
      temp int t_125 = Consumer.n + 1,
      Consumer.n = t_125;

  process Receiver_Consumer
    guardBlock
      temp bool t_126 = Receiver.state == 2,
      temp byte t_127 = Receiver.value & 1,
      temp bool t_128 = t_127 == Receiver.exp_ab,
      temp byte t_129 = Receiver.value & 2,
      temp bool t_130 = t_129 == 0,
      temp bool t_131 = t_128 and t_130,
      temp byte t_132 = Receiver.value & 4,
      temp bool t_133 = t_132 == 0,
      temp bool t_134 = t_131 and t_133,
      temp bool t_135 = t_126 and t_134,
      temp bool t_136 = Consumer.state == 0,
      temp bool t_137 = t_135 and t_136;
    guardCondition t_137;
    effect
      Receiver.state = 3,
      Consumer.m = 5,
      Consumer.state = 1,
      temp int t_138 = Consumer.n + 1,
      Consumer.n = t_138;

  process Receiver_Consumer
    guardBlock
      temp bool t_139 = Receiver.state == 2,
      temp byte t_140 = Receiver.value & 1,
      temp bool t_141 = t_140 == Receiver.exp_ab,
      temp byte t_142 = Receiver.value & 2,
      temp bool t_143 = t_142 == 0,
      temp bool t_144 = t_141 and t_143,
      temp byte t_145 = Receiver.value & 4,
      temp bool t_146 = t_145 == 4,
      temp bool t_147 = t_144 and t_146,
      temp bool t_148 = t_139 and t_147,
      temp bool t_149 = Consumer.state == 0,
      temp bool t_150 = t_148 and t_149;
    guardCondition t_150;
    effect
      Receiver.state = 3,
      Consumer.m = 4,
      Consumer.state = 1,
      temp int t_151 = Consumer.n + 1,
      Consumer.n = t_151;

  process Receiver_Consumer
    guardBlock
      temp bool t_152 = Receiver.state == 0,
      temp bool t_153 = Consumer.state == 0,
      temp bool t_154 = t_152 and t_153;
    guardCondition t_154;
    effect
      Receiver.state = 5,
      Consumer.m = 2,
      Consumer.state = 1,
      temp int t_155 = Consumer.n + 1,
      Consumer.n = t_155;

  process K_Sender
    guardBlock
      temp bool t_156 = K.state == 1,
      temp bool t_157 = Sender.state == 2,
      temp bool t_158 = Sender.counter == 5,
      temp bool t_159 = t_157 and t_158,
      temp bool t_160 = t_156 and t_159;
    guardCondition t_160;
    effect
      K.state = 0,
      Sender.state = 5;

  process K_Sender
    guardBlock
      temp bool t_161 = K.state == 1,
      temp bool t_162 = Sender.state == 2,
      temp bool t_163 = Sender.counter < 5,
      temp bool t_164 = t_162 and t_163,
      temp bool t_165 = t_161 and t_164;
    guardCondition t_165;
    effect
      K.state = 0,
      Sender.state = 3,
      temp int t_166 = Sender.counter + 1,
      Sender.counter = t_166;

  process L_Sender
    guardBlock
      temp bool t_167 = L.state == 1,
      temp bool t_168 = Sender.state == 2,
      temp bool t_169 = Sender.counter == 5,
      temp bool t_170 = t_168 and t_169,
      temp bool t_171 = t_167 and t_170;
    guardCondition t_171;
    effect
      L.state = 0,
      Sender.state = 5;

  process L_Sender
    guardBlock
      temp bool t_172 = L.state == 1,
      temp bool t_173 = Sender.state == 2,
      temp bool t_174 = Sender.counter < 5,
      temp bool t_175 = t_173 and t_174,
      temp bool t_176 = t_172 and t_175;
    guardCondition t_176;
    effect
      L.state = 0,
      Sender.state = 3,
      temp int t_177 = Sender.counter + 1,
      Sender.counter = t_177;

  process K_Receiver
    guardBlock
      temp bool t_178 = K.state == 1,
      temp bool t_179 = Receiver.state == 1,
      temp bool t_180 = t_178 and t_179;
    guardCondition t_180;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 4;

  process K_Receiver
    guardBlock
      temp bool t_181 = K.state == 1,
      temp bool t_182 = Receiver.state == 0,
      temp bool t_183 = t_181 and t_182;
    guardCondition t_183;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 2;

  process L_Sender
    guardBlock
      temp bool t_184 = L.state == 1,
      temp bool t_185 = Sender.state == 2,
      temp bool t_186 = t_184 and t_185;
    guardCondition t_186;
    effect
      L.state = 0,
      Sender.state = 4,
      temp int t_187 = 1 - Sender.ab,
      Sender.ab = t_187;
      accepting conditions
      LTL_property.state == 1
