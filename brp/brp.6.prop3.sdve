byte prod_n = 0;
state {ready(0), start_send(1), wait_result(2), check(3)} Producer.state = 0;
byte Producer.result = 0;
byte Producer.n = 0;
state {ready(0), get_msg(1), check(2), st_error(3)} Consumer.state = 0;
byte Consumer.m = 0;
byte Consumer.n = 0;
state {idle(0), next_frame(1), wait_ack(2), send(3), success(4), q_error(5), ret(6)} Sender.state = 0;
byte Sender.ab = 0;
byte Sender.n = 0;
byte Sender.i = 0;
byte Sender.counter = 0;
state {idle(0), new_file(1), frame_received(2), frame_reported(3), first_safe(4), ret(5)} Receiver.state = 1;
byte Receiver.value = 0;
byte Receiver.exp_ab = 0;
state {ready(0), got_msg(1)} K.state = 0;
byte K.value = 0;
state {ready(0), got_msg(1)} L.state = 0;
state {q1(0), q2(1)} LTL_property.state = 0;

  process Producer
    guardBlock
      temp bool t_0 = Producer.state == 0;
    guardCondition t_0;
    effect
      Producer.state = 1,
      prod_n = 1;

  process Producer
    guardBlock
      temp bool t_1 = Producer.state == 0;
    guardCondition t_1;
    effect
      Producer.state = 1,
      prod_n = 2;

  process Producer
    guardBlock
      temp bool t_2 = Producer.state == 0;
    guardCondition t_2;
    effect
      Producer.state = 1,
      prod_n = 3;

  process Producer
    guardBlock
      temp bool t_3 = Producer.state == 0;
    guardCondition t_3;
    effect
      Producer.state = 1,
      prod_n = 4;

  process Producer
    guardBlock
      temp bool t_4 = Producer.state == 0;
    guardCondition t_4;
    effect
      Producer.state = 1,
      prod_n = 5;

  process Producer
    guardBlock
      temp bool t_5 = Producer.state == 0;
    guardCondition t_5;
    effect
      Producer.state = 1,
      prod_n = 6;

  process Producer
    guardBlock
      temp bool t_6 = Producer.state == 0;
    guardCondition t_6;
    effect
      Producer.state = 1,
      prod_n = 7;

  process Producer
    guardBlock
      temp bool t_7 = Producer.state == 0;
    guardCondition t_7;
    effect
      Producer.state = 1,
      prod_n = 8;

  process Producer
    guardBlock
      temp bool t_8 = Producer.state == 0;
    guardCondition t_8;
    effect
      Producer.state = 1,
      prod_n = 9;

  process Producer
    guardBlock
      temp bool t_9 = Producer.state == 0;
    guardCondition t_9;
    effect
      Producer.state = 1,
      prod_n = 10;

  process Producer
    guardBlock
      temp bool t_10 = Producer.state == 0;
    guardCondition t_10;
    effect
      Producer.state = 1,
      prod_n = 11;

  process Producer
    guardBlock
      temp bool t_11 = Producer.state == 0;
    guardCondition t_11;
    effect
      Producer.state = 1,
      prod_n = 12;

  process Producer
    guardBlock
      temp bool t_12 = Producer.state == 0;
    guardCondition t_12;
    effect
      Producer.state = 1,
      prod_n = 13;

  process Producer
    guardBlock
      temp bool t_13 = Producer.state == 0;
    guardCondition t_13;
    effect
      Producer.state = 1,
      prod_n = 14;

  process Producer
    guardBlock
      temp bool t_14 = Producer.state == 0;
    guardCondition t_14;
    effect
      Producer.state = 1,
      prod_n = 15;

  process Producer
    guardBlock
      temp bool t_15 = Producer.state == 0;
    guardCondition t_15;
    effect
      Producer.state = 1,
      prod_n = 16;

  process Producer
    guardBlock
      temp bool t_16 = Producer.state == 0;
    guardCondition t_16;
    effect
      Producer.state = 1,
      prod_n = 17;

  process Producer
    guardBlock
      temp bool t_17 = Producer.state == 0;
    guardCondition t_17;
    effect
      Producer.state = 1,
      prod_n = 18;

  process Producer
    guardBlock
      temp bool t_18 = Producer.state == 0;
    guardCondition t_18;
    effect
      Producer.state = 1,
      prod_n = 19;

  process Producer
    guardBlock
      temp bool t_19 = Producer.state == 0;
    guardCondition t_19;
    effect
      Producer.state = 1,
      prod_n = 20;

  process Producer
    guardBlock
      temp bool t_20 = Producer.state == 0;
    guardCondition t_20;
    effect
      Producer.state = 1,
      prod_n = 21;

  process Producer
    guardBlock
      temp bool t_21 = Producer.state == 0;
    guardCondition t_21;
    effect
      Producer.state = 1,
      prod_n = 22;

  process Producer
    guardBlock
      temp bool t_22 = Producer.state == 0;
    guardCondition t_22;
    effect
      Producer.state = 1,
      prod_n = 23;

  process Producer
    guardBlock
      temp bool t_23 = Producer.state == 0;
    guardCondition t_23;
    effect
      Producer.state = 1,
      prod_n = 24;

  process Producer
    guardBlock
      temp bool t_24 = Producer.state == 0;
    guardCondition t_24;
    effect
      Producer.state = 1,
      prod_n = 25;

  process Producer
    guardBlock
      temp bool t_25 = Producer.state == 0;
    guardCondition t_25;
    effect
      Producer.state = 1,
      prod_n = 26;

  process Producer
    guardBlock
      temp bool t_26 = Producer.state == 0;
    guardCondition t_26;
    effect
      Producer.state = 1,
      prod_n = 27;

  process Producer
    guardBlock
      temp bool t_27 = Producer.state == 0;
    guardCondition t_27;
    effect
      Producer.state = 1,
      prod_n = 28;

  process Producer
    guardBlock
      temp bool t_28 = Producer.state == 0;
    guardCondition t_28;
    effect
      Producer.state = 1,
      prod_n = 29;

  process Producer
    guardBlock
      temp bool t_29 = Producer.state == 0;
    guardCondition t_29;
    effect
      Producer.state = 1,
      prod_n = 30;

  process Producer
    guardBlock
      temp bool t_30 = Producer.state == 3,
      temp bool t_31 = Producer.result == 2,
      temp bool t_32 = Producer.result == 3,
      temp bool t_33 = t_31 or t_32,
      temp bool t_34 = t_30 and t_33;
    guardCondition t_34;
    effect
      Producer.state = 1;

  process Consumer
    guardBlock
      temp bool t_35 = Consumer.state == 1,
      temp bool t_36 = Consumer.m == 4,
      temp bool t_37 = Consumer.m == 5,
      temp bool t_38 = t_36 or t_37,
      temp bool t_39 = t_35 and t_38;
    guardCondition t_39;
    effect
      Consumer.state = 0;

  process Consumer
    guardBlock
      temp bool t_40 = Consumer.state == 1,
      temp bool t_41 = Consumer.m == 2,
      temp bool t_42 = t_40 and t_41;
    guardCondition t_42;
    effect
      Consumer.state = 0,
      Consumer.n = 0;

  process Consumer
    guardBlock
      temp bool t_43 = Consumer.state == 1,
      temp bool t_44 = Consumer.m == 1,
      temp bool t_45 = t_43 and t_44;
    guardCondition t_45;
    effect
      Consumer.state = 2;

  process Consumer
    guardBlock
      temp bool t_46 = Consumer.state == 2,
      temp bool t_47 = Consumer.n != prod_n,
      temp bool t_48 = t_46 and t_47;
    guardCondition t_48;
    effect
      Consumer.state = 3;

  process Sender
    guardBlock
      temp bool t_49 = Sender.state == 1;
    guardCondition t_49;
    effect
      Sender.state = 3,
      Sender.counter = 0;

  process Sender
    guardBlock
      temp bool t_50 = Sender.state == 4,
      temp bool t_51 = Sender.i < Sender.n,
      temp bool t_52 = t_50 and t_51;
    guardCondition t_52;
    effect
      Sender.state = 1,
      temp int t_53 = Sender.i + 1,
      Sender.i = t_53;

  process Receiver
    guardBlock
      temp bool t_54 = Receiver.state == 4;
    guardCondition t_54;
    effect
      Receiver.state = 2,
      temp byte t_55 = Receiver.value and 1,
      Receiver.exp_ab = t_55;

  process Receiver
    guardBlock
      temp bool t_56 = Receiver.state == 0,
      temp byte t_57 = Receiver.value and 2,
      temp bool t_58 = t_57 == 2,
      temp bool t_59 = t_56 and t_58;
    guardCondition t_59;
    effect
      Receiver.state = 5;

  process LTL_property
    guardBlock
      temp bool t_60 = LTL_property.state == 0;
    guardCondition t_60;
    effect
      LTL_property.state = 0;

  process LTL_property
    guardBlock
      temp bool t_61 = LTL_property.state == 0,
      temp bool t_62 = Producer.state == 2,
      temp bool t_63 = Producer.state == 0,
      temp bool t_64 = not t_63,
      temp bool t_65 = t_62 and t_64,
      temp bool t_66 = t_61 and t_65;
    guardCondition t_66;
    effect
      LTL_property.state = 1;

  process LTL_property
    guardBlock
      temp bool t_67 = LTL_property.state == 1,
      temp bool t_68 = Producer.state == 0,
      temp bool t_69 = not t_68,
      temp bool t_70 = t_67 and t_69;
    guardCondition t_70;
    effect
      LTL_property.state = 1;

  process Sender_K
    guardBlock
      temp bool t_71 = Sender.state == 3,
      temp bool t_72 = Sender.i == 1,
      temp bool t_73 = Sender.i == Sender.n,
      temp bool t_74 = t_72 and t_73,
      temp bool t_75 = t_71 and t_74,
      temp bool t_76 = K.state == 0,
      temp bool t_77 = t_75 and t_76;
    guardCondition t_77;
    effect
      Sender.state = 2,
      temp int t_78 = 6 + Sender.ab,
      K.value = t_78,
      K.state = 1;

  process Sender_K
    guardBlock
      temp bool t_79 = Sender.state == 3,
      temp bool t_80 = Sender.i > 1,
      temp bool t_81 = Sender.i == Sender.n,
      temp bool t_82 = t_80 and t_81,
      temp bool t_83 = t_79 and t_82,
      temp bool t_84 = K.state == 0,
      temp bool t_85 = t_83 and t_84;
    guardCondition t_85;
    effect
      Sender.state = 2,
      temp int t_86 = 2 + Sender.ab,
      K.value = t_86,
      K.state = 1;

  process Sender_K
    guardBlock
      temp bool t_87 = Sender.state == 3,
      temp bool t_88 = Sender.i == 1,
      temp bool t_89 = Sender.i < Sender.n,
      temp bool t_90 = t_88 and t_89,
      temp bool t_91 = t_87 and t_90,
      temp bool t_92 = K.state == 0,
      temp bool t_93 = t_91 and t_92;
    guardCondition t_93;
    effect
      Sender.state = 2,
      temp int t_94 = 4 + Sender.ab,
      K.value = t_94,
      K.state = 1;

  process Sender_K
    guardBlock
      temp bool t_95 = Sender.state == 3,
      temp bool t_96 = Sender.i > 1,
      temp bool t_97 = Sender.i < Sender.n,
      temp bool t_98 = t_96 and t_97,
      temp bool t_99 = t_95 and t_98,
      temp bool t_100 = K.state == 0,
      temp bool t_101 = t_99 and t_100;
    guardCondition t_101;
    effect
      Sender.state = 2,
      K.value = Sender.ab,
      K.state = 1;

  process Receiver_L
    guardBlock
      temp bool t_102 = Receiver.state == 2,
      temp byte t_103 = Receiver.value and 1,
      temp bool t_104 = Receiver.exp_ab != t_103,
      temp bool t_105 = t_102 and t_104,
      temp bool t_106 = L.state == 0,
      temp bool t_107 = t_105 and t_106;
    guardCondition t_107;
    effect
      Receiver.state = 0,
      L.state = 1;

  process Receiver_L
    guardBlock
      temp bool t_108 = Receiver.state == 3,
      temp bool t_109 = L.state == 0,
      temp bool t_110 = t_108 and t_109;
    guardCondition t_110;
    effect
      Receiver.state = 0,
      temp int t_111 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_111,
      L.state = 1;

  process K_Sender
    guardBlock
      temp bool t_112 = K.state == 1,
      temp bool t_113 = Sender.state == 2,
      temp bool t_114 = Sender.counter == 23,
      temp bool t_115 = t_113 and t_114,
      temp bool t_116 = t_112 and t_115;
    guardCondition t_116;
    effect
      K.state = 0,
      Sender.state = 5;

  process K_Sender
    guardBlock
      temp bool t_117 = K.state == 1,
      temp bool t_118 = Sender.state == 2,
      temp bool t_119 = Sender.counter < 23,
      temp bool t_120 = t_118 and t_119,
      temp bool t_121 = t_117 and t_120;
    guardCondition t_121;
    effect
      K.state = 0,
      Sender.state = 3,
      temp int t_122 = Sender.counter + 1,
      Sender.counter = t_122;

  process L_Sender
    guardBlock
      temp bool t_123 = L.state == 1,
      temp bool t_124 = Sender.state == 2,
      temp bool t_125 = Sender.counter == 23,
      temp bool t_126 = t_124 and t_125,
      temp bool t_127 = t_123 and t_126;
    guardCondition t_127;
    effect
      L.state = 0,
      Sender.state = 5;

  process L_Sender
    guardBlock
      temp bool t_128 = L.state == 1,
      temp bool t_129 = Sender.state == 2,
      temp bool t_130 = Sender.counter < 23,
      temp bool t_131 = t_129 and t_130,
      temp bool t_132 = t_128 and t_131;
    guardCondition t_132;
    effect
      L.state = 0,
      Sender.state = 3,
      temp int t_133 = Sender.counter + 1,
      Sender.counter = t_133;

  process K_Receiver
    guardBlock
      temp bool t_134 = K.state == 1,
      temp bool t_135 = Receiver.state == 1,
      temp bool t_136 = t_134 and t_135;
    guardCondition t_136;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 4;

  process K_Receiver
    guardBlock
      temp bool t_137 = K.state == 1,
      temp bool t_138 = Receiver.state == 0,
      temp bool t_139 = t_137 and t_138;
    guardCondition t_139;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 2;

  process L_Sender
    guardBlock
      temp bool t_140 = L.state == 1,
      temp bool t_141 = Sender.state == 2,
      temp bool t_142 = t_140 and t_141;
    guardCondition t_142;
    effect
      L.state = 0,
      Sender.state = 4,
      temp int t_143 = 1 - Sender.ab,
      Sender.ab = t_143;

  process Sender_Receiver
    guardBlock
      temp bool t_144 = Sender.state == 6,
      temp bool t_145 = Receiver.state == 5,
      temp bool t_146 = t_144 and t_145;
    guardCondition t_146;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Sender_Receiver
    guardBlock
      temp bool t_147 = Sender.state == 6,
      temp bool t_148 = Receiver.state == 1,
      temp bool t_149 = t_147 and t_148;
    guardCondition t_149;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Producer_Sender
    guardBlock
      temp bool t_150 = Producer.state == 1,
      temp bool t_151 = Sender.state == 0,
      temp bool t_152 = t_150 and t_151;
    guardCondition t_152;
    effect
      Producer.state = 2,
      Sender.n = prod_n,
      Sender.state = 1,
      Sender.i = 1;

  process Sender_Producer
    guardBlock
      temp bool t_153 = Sender.state == 4,
      temp bool t_154 = Sender.i == Sender.n,
      temp bool t_155 = t_153 and t_154,
      temp bool t_156 = Producer.state == 2,
      temp bool t_157 = t_155 and t_156;
    guardCondition t_157;
    effect
      Sender.state = 6,
      Producer.result = 1,
      Producer.state = 3;

  process Sender_Producer
    guardBlock
      temp bool t_158 = Sender.state == 5,
      temp bool t_159 = Sender.i < Sender.n,
      temp bool t_160 = t_158 and t_159,
      temp bool t_161 = Producer.state == 2,
      temp bool t_162 = t_160 and t_161;
    guardCondition t_162;
    effect
      Sender.state = 6,
      Producer.result = 2,
      Producer.state = 3;

  process Sender_Producer
    guardBlock
      temp bool t_163 = Sender.state == 5,
      temp bool t_164 = Sender.i == Sender.n,
      temp bool t_165 = t_163 and t_164,
      temp bool t_166 = Producer.state == 2,
      temp bool t_167 = t_165 and t_166;
    guardCondition t_167;
    effect
      Sender.state = 6,
      Producer.result = 3,
      Producer.state = 3;

  process Producer_Consumer
    guardBlock
      temp bool t_168 = Producer.state == 3,
      temp bool t_169 = Producer.result == 1,
      temp bool t_170 = t_168 and t_169,
      temp bool t_171 = Consumer.state == 2,
      temp bool t_172 = Consumer.n == prod_n,
      temp bool t_173 = t_171 and t_172,
      temp bool t_174 = t_170 and t_173;
    guardCondition t_174;
    effect
      Producer.state = 0,
      Consumer.state = 0;

  process Receiver_Consumer
    guardBlock
      temp bool t_175 = Receiver.state == 2,
      temp byte t_176 = Receiver.value and 1,
      temp bool t_177 = t_176 == Receiver.exp_ab,
      temp byte t_178 = Receiver.value and 2,
      temp bool t_179 = t_178 == 2,
      temp bool t_180 = t_177 and t_179,
      temp bool t_181 = t_175 and t_180,
      temp bool t_182 = Consumer.state == 0,
      temp bool t_183 = t_181 and t_182;
    guardCondition t_183;
    effect
      Receiver.state = 3,
      Consumer.m = 1,
      Consumer.state = 1,
      temp int t_184 = Consumer.n + 1,
      Consumer.n = t_184;

  process Receiver_Consumer
    guardBlock
      temp bool t_185 = Receiver.state == 2,
      temp byte t_186 = Receiver.value and 1,
      temp bool t_187 = t_186 == Receiver.exp_ab,
      temp byte t_188 = Receiver.value and 2,
      temp bool t_189 = t_188 == 0,
      temp bool t_190 = t_187 and t_189,
      temp byte t_191 = Receiver.value and 4,
      temp bool t_192 = t_191 == 0,
      temp bool t_193 = t_190 and t_192,
      temp bool t_194 = t_185 and t_193,
      temp bool t_195 = Consumer.state == 0,
      temp bool t_196 = t_194 and t_195;
    guardCondition t_196;
    effect
      Receiver.state = 3,
      Consumer.m = 5,
      Consumer.state = 1,
      temp int t_197 = Consumer.n + 1,
      Consumer.n = t_197;

  process Receiver_Consumer
    guardBlock
      temp bool t_198 = Receiver.state == 2,
      temp byte t_199 = Receiver.value and 1,
      temp bool t_200 = t_199 == Receiver.exp_ab,
      temp byte t_201 = Receiver.value and 2,
      temp bool t_202 = t_201 == 0,
      temp bool t_203 = t_200 and t_202,
      temp byte t_204 = Receiver.value and 4,
      temp bool t_205 = t_204 == 4,
      temp bool t_206 = t_203 and t_205,
      temp bool t_207 = t_198 and t_206,
      temp bool t_208 = Consumer.state == 0,
      temp bool t_209 = t_207 and t_208;
    guardCondition t_209;
    effect
      Receiver.state = 3,
      Consumer.m = 4,
      Consumer.state = 1,
      temp int t_210 = Consumer.n + 1,
      Consumer.n = t_210;

  process Receiver_Consumer
    guardBlock
      temp bool t_211 = Receiver.state == 0,
      temp bool t_212 = Consumer.state == 0,
      temp bool t_213 = t_211 and t_212;
    guardCondition t_213;
    effect
      Receiver.state = 5,
      Consumer.m = 2,
      Consumer.state = 1,
      temp int t_214 = Consumer.n + 1,
      Consumer.n = t_214;
      // accepting conditions
      // LTL_property.state == 1
