byte prod_n = 0;
state {ready(0), start_send(1), wait_result(2), check(3)} Producer.state = 0;
byte Producer.result = 0;
byte Producer.n = 0;
state {ready(0), get_msg(1), check(2), st_error(3)} Consumer.state = 0;
byte Consumer.m = 0;
byte Consumer.n = 0;
state {idle(0), next_frame(1), wait_ack(2), send(3), success(4), q_error(5), ret(6)} Sender.state = 0;
byte Sender.ab = 0;
byte Sender.n = 0;
byte Sender.i = 0;
byte Sender.counter = 0;
state {idle(0), new_file(1), frame_received(2), frame_reported(3), first_safe(4), ret(5)} Receiver.state = 1;
byte Receiver.value = 0;
byte Receiver.exp_ab = 0;
state {ready(0), got_msg(1)} K.state = 0;
byte K.value = 0;
state {ready(0), got_msg(1)} L.state = 0;
state {q1(0), q2(1)} LTL_property.state = 0;
temp bool t_0 = false;
temp bool t_1 = false;
temp bool t_2 = false;
temp bool t_3 = false;
temp bool t_4 = false;
temp bool t_5 = false;
temp bool t_6 = false;
temp bool t_7 = false;
temp bool t_8 = false;
temp bool t_9 = false;
temp bool t_10 = false;
temp bool t_11 = false;
temp bool t_12 = false;
temp bool t_13 = false;
temp bool t_14 = false;
temp bool t_15 = false;
temp bool t_16 = false;
temp bool t_17 = false;
temp bool t_18 = false;
temp bool t_19 = false;
temp bool t_20 = false;
temp bool t_21 = false;
temp bool t_22 = false;
temp bool t_23 = false;
temp bool t_24 = false;
temp bool t_25 = false;
temp bool t_26 = false;
temp bool t_27 = false;
temp bool t_28 = false;
temp bool t_29 = false;
temp bool t_30 = false;
temp bool t_31 = false;
temp bool t_32 = false;
temp int t_33 = 0;
temp bool t_34 = false;
temp byte t_35 = 0;
temp bool t_36 = false;
temp byte t_37 = 0;
temp bool t_38 = false;
temp bool t_39 = false;
temp bool t_40 = false;
temp bool t_41 = false;
temp bool t_42 = false;
temp bool t_43 = false;
temp bool t_44 = false;
temp bool t_45 = false;
temp bool t_46 = false;
temp bool t_47 = false;
temp bool t_48 = false;
temp bool t_49 = false;
temp bool t_50 = false;
temp bool t_51 = false;
temp bool t_52 = false;
temp bool t_53 = false;
temp int t_54 = 0;
temp bool t_55 = false;
temp bool t_56 = false;
temp bool t_57 = false;
temp bool t_58 = false;
temp bool t_59 = false;
temp bool t_60 = false;
temp bool t_61 = false;
temp byte t_62 = 0;
temp bool t_63 = false;
temp byte t_64 = 0;
temp bool t_65 = false;
temp bool t_66 = false;
temp bool t_67 = false;
temp bool t_68 = false;
temp bool t_69 = false;
temp int t_70 = 0;
temp bool t_71 = false;
temp byte t_72 = 0;
temp bool t_73 = false;
temp byte t_74 = 0;
temp bool t_75 = false;
temp bool t_76 = false;
temp byte t_77 = 0;
temp bool t_78 = false;
temp bool t_79 = false;
temp bool t_80 = false;
temp bool t_81 = false;
temp bool t_82 = false;
temp int t_83 = 0;
temp bool t_84 = false;
temp byte t_85 = 0;
temp bool t_86 = false;
temp byte t_87 = 0;
temp bool t_88 = false;
temp bool t_89 = false;
temp byte t_90 = 0;
temp bool t_91 = false;
temp bool t_92 = false;
temp bool t_93 = false;
temp bool t_94 = false;
temp bool t_95 = false;
temp int t_96 = 0;
temp bool t_97 = false;
temp bool t_98 = false;
temp bool t_99 = false;
temp int t_100 = 0;
temp bool t_101 = false;
temp bool t_102 = false;
temp bool t_103 = false;
temp bool t_104 = false;
temp bool t_105 = false;
temp bool t_106 = false;
temp bool t_107 = false;
temp bool t_108 = false;
temp bool t_109 = false;
temp bool t_110 = false;
temp bool t_111 = false;
temp bool t_112 = false;
temp bool t_113 = false;
temp bool t_114 = false;
temp bool t_115 = false;
temp bool t_116 = false;
temp bool t_117 = false;
temp bool t_118 = false;
temp bool t_119 = false;
temp int t_120 = 0;
temp bool t_121 = false;
temp bool t_122 = false;
temp bool t_123 = false;
temp bool t_124 = false;
temp bool t_125 = false;
temp bool t_126 = false;
temp bool t_127 = false;
temp bool t_128 = false;
temp bool t_129 = false;
temp bool t_130 = false;
temp int t_131 = 0;
temp bool t_132 = false;
temp byte t_133 = 0;
temp bool t_134 = false;
temp bool t_135 = false;
temp bool t_136 = false;
temp bool t_137 = false;
temp bool t_138 = false;
temp bool t_139 = false;
temp bool t_140 = false;
temp int t_141 = 0;
temp bool t_142 = false;
temp bool t_143 = false;
temp bool t_144 = false;
temp bool t_145 = false;
temp bool t_146 = false;
temp bool t_147 = false;
temp bool t_148 = false;
temp bool t_149 = false;
temp bool t_150 = false;
temp bool t_151 = false;
temp bool t_152 = false;
temp bool t_153 = false;
temp bool t_154 = false;
temp bool t_155 = false;
temp bool t_156 = false;
temp bool t_157 = false;
temp bool t_158 = false;
temp bool t_159 = false;
temp bool t_160 = false;
temp bool t_161 = false;
temp bool t_162 = false;
temp bool t_163 = false;
temp int t_164 = 0;
temp bool t_165 = false;
temp bool t_166 = false;
temp bool t_167 = false;
temp bool t_168 = false;
temp bool t_169 = false;
temp bool t_170 = false;
temp bool t_171 = false;
temp int t_172 = 0;
temp bool t_173 = false;
temp bool t_174 = false;
temp bool t_175 = false;
temp bool t_176 = false;
temp bool t_177 = false;
temp bool t_178 = false;
temp bool t_179 = false;
temp int t_180 = 0;
temp bool t_181 = false;
temp bool t_182 = false;
temp bool t_183 = false;
temp bool t_184 = false;
temp bool t_185 = false;
temp bool t_186 = false;
temp bool t_187 = false;
temp bool t_188 = false;
temp bool t_189 = false;
temp bool t_190 = false;
temp bool t_191 = false;
temp bool t_192 = false;
temp bool t_193 = false;
temp bool t_194 = false;
	process Producer 
		guardBlock
			t_0 = Producer.state == 0;

		guardCondition t_0;
		effect
			Producer.state = 1,
			prod_n = 1;

	process Producer 
		guardBlock
			t_1 = Producer.state == 0;

		guardCondition t_1;
		effect
			Producer.state = 1,
			prod_n = 2;

	process Producer 
		guardBlock
			t_2 = Producer.state == 0;

		guardCondition t_2;
		effect
			Producer.state = 1,
			prod_n = 3;

	process Producer 
		guardBlock
			t_3 = Producer.state == 0;

		guardCondition t_3;
		effect
			Producer.state = 1,
			prod_n = 4;

	process Producer 
		guardBlock
			t_4 = Producer.state == 0;

		guardCondition t_4;
		effect
			Producer.state = 1,
			prod_n = 5;

	process Producer 
		guardBlock
			t_5 = Producer.state == 0;

		guardCondition t_5;
		effect
			Producer.state = 1,
			prod_n = 6;

	process Producer 
		guardBlock
			t_6 = Producer.state == 0;

		guardCondition t_6;
		effect
			Producer.state = 1,
			prod_n = 7;

	process Producer 
		guardBlock
			t_7 = Producer.state == 0;

		guardCondition t_7;
		effect
			Producer.state = 1,
			prod_n = 8;

	process Producer 
		guardBlock
			t_8 = Producer.state == 0;

		guardCondition t_8;
		effect
			Producer.state = 1,
			prod_n = 9;

	process Producer 
		guardBlock
			t_9 = Producer.state == 0;

		guardCondition t_9;
		effect
			Producer.state = 1,
			prod_n = 10;

	process Producer 
		guardBlock
			t_10 = Producer.state == 3,
			t_11 = Producer.result == 2,
			t_12 = Producer.result == 3,
			t_13 = t_11 or t_12,
			t_14 = t_10 and t_13;

		guardCondition t_14;
		effect
			Producer.state = 1;

	process Consumer 
		guardBlock
			t_15 = Consumer.state == 1,
			t_16 = Consumer.m == 4,
			t_17 = Consumer.m == 5,
			t_18 = t_16 or t_17,
			t_19 = t_15 and t_18;

		guardCondition t_19;
		effect
			Consumer.state = 0;

	process Consumer 
		guardBlock
			t_20 = Consumer.state == 1,
			t_21 = Consumer.m == 2,
			t_22 = t_20 and t_21;

		guardCondition t_22;
		effect
			Consumer.state = 0,
			Consumer.n = 0;

	process Consumer 
		guardBlock
			t_23 = Consumer.state == 1,
			t_24 = Consumer.m == 1,
			t_25 = t_23 and t_24;

		guardCondition t_25;
		effect
			Consumer.state = 2;

	process Consumer 
		guardBlock
			t_26 = Consumer.state == 2,
			t_27 = Consumer.n != prod_n,
			t_28 = t_26 and t_27;

		guardCondition t_28;
		effect
			Consumer.state = 3;

	process Sender 
		guardBlock
			t_29 = Sender.state == 1;

		guardCondition t_29;
		effect
			Sender.state = 3,
			Sender.counter = 0;

	process Sender 
		guardBlock
			t_30 = Sender.state == 4,
			t_31 = Sender.i < Sender.n,
			t_32 = t_30 and t_31;

		guardCondition t_32;
		effect
			Sender.state = 1,
			t_33 = Sender.i + 1,
			Sender.i = t_33;

	process Receiver 
		guardBlock
			t_34 = Receiver.state == 4;

		guardCondition t_34;
		effect
			Receiver.state = 2,
			t_35 = Receiver.value & 1,
			Receiver.exp_ab = t_35;

	process Receiver 
		guardBlock
			t_36 = Receiver.state == 0,
			t_37 = Receiver.value & 2,
			t_38 = t_37 == 2,
			t_39 = t_36 and t_38;

		guardCondition t_39;
		effect
			Receiver.state = 5;

	process LTL_property 
		guardBlock
			t_40 = LTL_property.state == 0;

		guardCondition t_40;
		effect
			LTL_property.state = 0;

	process LTL_property 
		guardBlock
			t_41 = LTL_property.state == 0,
			t_42 = Producer.state == 2,
			t_43 = Producer.state == 3,
			t_44 = not t_43,
			t_45 = t_42 and t_44,
			t_46 = t_41 and t_45;

		guardCondition t_46;
		effect
			LTL_property.state = 1;

	process LTL_property 
		guardBlock
			t_47 = LTL_property.state == 1,
			t_48 = Producer.state == 3,
			t_49 = not t_48,
			t_50 = t_47 and t_49;

		guardCondition t_50;
		effect
			LTL_property.state = 1;

	process L_Sender 
		guardBlock
			t_51 = L.state == 1,
			t_52 = Sender.state == 2,
			t_53 = t_51 and t_52;

		guardCondition t_53;
		effect
			L.state = 0,
			Sender.state = 4,
			t_54 = 1 - Sender.ab,
			Sender.ab = t_54;

	process Sender_Receiver 
		guardBlock
			t_55 = Sender.state == 6,
			t_56 = Receiver.state == 5,
			t_57 = t_55 and t_56;

		guardCondition t_57;
		effect
			Sender.state = 0,
			Receiver.state = 1;

	process Sender_Receiver 
		guardBlock
			t_58 = Sender.state == 6,
			t_59 = Receiver.state == 1,
			t_60 = t_58 and t_59;

		guardCondition t_60;
		effect
			Sender.state = 0,
			Receiver.state = 1;

	process Receiver_Consumer 
		guardBlock
			t_61 = Receiver.state == 2,
			t_62 = Receiver.value & 1,
			t_63 = t_62 == Receiver.exp_ab,
			t_64 = Receiver.value & 2,
			t_65 = t_64 == 2,
			t_66 = t_63 and t_65,
			t_67 = t_61 and t_66,
			t_68 = Consumer.state == 0,
			t_69 = t_67 and t_68;

		guardCondition t_69;
		effect
			Receiver.state = 3,
			Consumer.m = 1,
			Consumer.state = 1,
			t_70 = Consumer.n + 1,
			Consumer.n = t_70;

	process Receiver_Consumer 
		guardBlock
			t_71 = Receiver.state == 2,
			t_72 = Receiver.value & 1,
			t_73 = t_72 == Receiver.exp_ab,
			t_74 = Receiver.value & 2,
			t_75 = t_74 == 0,
			t_76 = t_73 and t_75,
			t_77 = Receiver.value & 4,
			t_78 = t_77 == 0,
			t_79 = t_76 and t_78,
			t_80 = t_71 and t_79,
			t_81 = Consumer.state == 0,
			t_82 = t_80 and t_81;

		guardCondition t_82;
		effect
			Receiver.state = 3,
			Consumer.m = 5,
			Consumer.state = 1,
			t_83 = Consumer.n + 1,
			Consumer.n = t_83;

	process Receiver_Consumer 
		guardBlock
			t_84 = Receiver.state == 2,
			t_85 = Receiver.value & 1,
			t_86 = t_85 == Receiver.exp_ab,
			t_87 = Receiver.value & 2,
			t_88 = t_87 == 0,
			t_89 = t_86 and t_88,
			t_90 = Receiver.value & 4,
			t_91 = t_90 == 4,
			t_92 = t_89 and t_91,
			t_93 = t_84 and t_92,
			t_94 = Consumer.state == 0,
			t_95 = t_93 and t_94;

		guardCondition t_95;
		effect
			Receiver.state = 3,
			Consumer.m = 4,
			Consumer.state = 1,
			t_96 = Consumer.n + 1,
			Consumer.n = t_96;

	process Receiver_Consumer 
		guardBlock
			t_97 = Receiver.state == 0,
			t_98 = Consumer.state == 0,
			t_99 = t_97 and t_98;

		guardCondition t_99;
		effect
			Receiver.state = 5,
			Consumer.m = 2,
			Consumer.state = 1,
			t_100 = Consumer.n + 1,
			Consumer.n = t_100;

	process Producer_Sender 
		guardBlock
			t_101 = Producer.state == 1,
			t_102 = Sender.state == 0,
			t_103 = t_101 and t_102;

		guardCondition t_103;
		effect
			Producer.state = 2,
			Sender.n = prod_n,
			Sender.state = 1,
			Sender.i = 1;

	process K_Receiver 
		guardBlock
			t_104 = K.state == 1,
			t_105 = Receiver.state == 1,
			t_106 = t_104 and t_105;

		guardCondition t_106;
		effect
			K.state = 0,
			Receiver.value = K.value,
			Receiver.state = 4;

	process K_Receiver 
		guardBlock
			t_107 = K.state == 1,
			t_108 = Receiver.state == 0,
			t_109 = t_107 and t_108;

		guardCondition t_109;
		effect
			K.state = 0,
			Receiver.value = K.value,
			Receiver.state = 2;

	process K_Sender 
		guardBlock
			t_110 = K.state == 1,
			t_111 = Sender.state == 2,
			t_112 = Sender.counter == 10,
			t_113 = t_111 and t_112,
			t_114 = t_110 and t_113;

		guardCondition t_114;
		effect
			K.state = 0,
			Sender.state = 5;

	process K_Sender 
		guardBlock
			t_115 = K.state == 1,
			t_116 = Sender.state == 2,
			t_117 = Sender.counter < 10,
			t_118 = t_116 and t_117,
			t_119 = t_115 and t_118;

		guardCondition t_119;
		effect
			K.state = 0,
			Sender.state = 3,
			t_120 = Sender.counter + 1,
			Sender.counter = t_120;

	process L_Sender 
		guardBlock
			t_121 = L.state == 1,
			t_122 = Sender.state == 2,
			t_123 = Sender.counter == 10,
			t_124 = t_122 and t_123,
			t_125 = t_121 and t_124;

		guardCondition t_125;
		effect
			L.state = 0,
			Sender.state = 5;

	process L_Sender 
		guardBlock
			t_126 = L.state == 1,
			t_127 = Sender.state == 2,
			t_128 = Sender.counter < 10,
			t_129 = t_127 and t_128,
			t_130 = t_126 and t_129;

		guardCondition t_130;
		effect
			L.state = 0,
			Sender.state = 3,
			t_131 = Sender.counter + 1,
			Sender.counter = t_131;

	process Receiver_L 
		guardBlock
			t_132 = Receiver.state == 2,
			t_133 = Receiver.value & 1,
			t_134 = Receiver.exp_ab != t_133,
			t_135 = t_132 and t_134,
			t_136 = L.state == 0,
			t_137 = t_135 and t_136;

		guardCondition t_137;
		effect
			Receiver.state = 0,
			L.state = 1;

	process Receiver_L 
		guardBlock
			t_138 = Receiver.state == 3,
			t_139 = L.state == 0,
			t_140 = t_138 and t_139;

		guardCondition t_140;
		effect
			Receiver.state = 0,
			t_141 = 1 - Receiver.exp_ab,
			Receiver.exp_ab = t_141,
			L.state = 1;

	process Sender_Producer 
		guardBlock
			t_142 = Sender.state == 4,
			t_143 = Sender.i == Sender.n,
			t_144 = t_142 and t_143,
			t_145 = Producer.state == 2,
			t_146 = t_144 and t_145;

		guardCondition t_146;
		effect
			Sender.state = 6,
			Producer.result = 1,
			Producer.state = 3;

	process Sender_Producer 
		guardBlock
			t_147 = Sender.state == 5,
			t_148 = Sender.i < Sender.n,
			t_149 = t_147 and t_148,
			t_150 = Producer.state == 2,
			t_151 = t_149 and t_150;

		guardCondition t_151;
		effect
			Sender.state = 6,
			Producer.result = 2,
			Producer.state = 3;

	process Sender_Producer 
		guardBlock
			t_152 = Sender.state == 5,
			t_153 = Sender.i == Sender.n,
			t_154 = t_152 and t_153,
			t_155 = Producer.state == 2,
			t_156 = t_154 and t_155;

		guardCondition t_156;
		effect
			Sender.state = 6,
			Producer.result = 3,
			Producer.state = 3;

	process Sender_K 
		guardBlock
			t_157 = Sender.state == 3,
			t_158 = Sender.i == 1,
			t_159 = Sender.i == Sender.n,
			t_160 = t_158 and t_159,
			t_161 = t_157 and t_160,
			t_162 = K.state == 0,
			t_163 = t_161 and t_162;

		guardCondition t_163;
		effect
			Sender.state = 2,
			t_164 = 6 + Sender.ab,
			K.value = t_164,
			K.state = 1;

	process Sender_K 
		guardBlock
			t_165 = Sender.state == 3,
			t_166 = Sender.i > 1,
			t_167 = Sender.i == Sender.n,
			t_168 = t_166 and t_167,
			t_169 = t_165 and t_168,
			t_170 = K.state == 0,
			t_171 = t_169 and t_170;

		guardCondition t_171;
		effect
			Sender.state = 2,
			t_172 = 2 + Sender.ab,
			K.value = t_172,
			K.state = 1;

	process Sender_K 
		guardBlock
			t_173 = Sender.state == 3,
			t_174 = Sender.i == 1,
			t_175 = Sender.i < Sender.n,
			t_176 = t_174 and t_175,
			t_177 = t_173 and t_176,
			t_178 = K.state == 0,
			t_179 = t_177 and t_178;

		guardCondition t_179;
		effect
			Sender.state = 2,
			t_180 = 4 + Sender.ab,
			K.value = t_180,
			K.state = 1;

	process Sender_K 
		guardBlock
			t_181 = Sender.state == 3,
			t_182 = Sender.i > 1,
			t_183 = Sender.i < Sender.n,
			t_184 = t_182 and t_183,
			t_185 = t_181 and t_184,
			t_186 = K.state == 0,
			t_187 = t_185 and t_186;

		guardCondition t_187;
		effect
			Sender.state = 2,
			K.value = Sender.ab,
			K.state = 1;

	process Producer_Consumer 
		guardBlock
			t_188 = Producer.state == 3,
			t_189 = Producer.result == 1,
			t_190 = t_188 and t_189,
			t_191 = Consumer.state == 2,
			t_192 = Consumer.n == prod_n,
			t_193 = t_191 and t_192,
			t_194 = t_190 and t_193;

		guardCondition t_194;
		effect
			Producer.state = 0,
			Consumer.state = 0;

accepting conditions
	LTL_property.state == 1

system async property LTL_property;
