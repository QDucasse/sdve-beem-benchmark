state {ready(0), start_send(1), wait_result(2), check(3)} Producer.state = 0;
state {ready(0), get_msg(1), check(2), st_error(3)} Consumer.state = 0;
state {idle(0), next_frame(1), wait_ack(2), send(3), success(4), q_error(5), ret(6)} Sender.state = 0;
state {idle(0), new_file(1), frame_received(2), frame_reported(3), first_safe(4), ret(5)} Receiver.state = 1;
state {ready(0), got_msg(1)} K.state = 0;
state {ready(0), got_msg(1)} L.state = 0;
state {q1(0), q2(1)} LTL_property.state = 0;
byte prod_n = 0;
byte Producer.result = 0;
byte Producer.n = 0;
byte Consumer.m = 0;
byte Consumer.n = 0;
byte Sender.ab = 0;
byte Sender.n = 0;
byte Sender.i = 0;
byte Sender.counter = 0;
byte Receiver.value = 0;
byte Receiver.exp_ab = 0;
byte K.value = 0;

  process Producer
    guardBlock
      temp bool t_0 = Producer.state == 0;
    guardCondition t_0;
    effect
      Producer.state = 1,
      prod_n = 1;

  process Producer
    guardBlock
      temp bool t_1 = Producer.state == 0;
    guardCondition t_1;
    effect
      Producer.state = 1,
      prod_n = 2;

  process Producer
    guardBlock
      temp bool t_2 = Producer.state == 0;
    guardCondition t_2;
    effect
      Producer.state = 1,
      prod_n = 3;

  process Producer
    guardBlock
      temp bool t_3 = Producer.state == 0;
    guardCondition t_3;
    effect
      Producer.state = 1,
      prod_n = 4;

  process Producer
    guardBlock
      temp bool t_4 = Producer.state == 0;
    guardCondition t_4;
    effect
      Producer.state = 1,
      prod_n = 5;

  process Producer
    guardBlock
      temp bool t_5 = Producer.state == 0;
    guardCondition t_5;
    effect
      Producer.state = 1,
      prod_n = 6;

  process Producer
    guardBlock
      temp bool t_6 = Producer.state == 0;
    guardCondition t_6;
    effect
      Producer.state = 1,
      prod_n = 7;

  process Producer
    guardBlock
      temp bool t_7 = Producer.state == 0;
    guardCondition t_7;
    effect
      Producer.state = 1,
      prod_n = 8;

  process Producer
    guardBlock
      temp bool t_8 = Producer.state == 0;
    guardCondition t_8;
    effect
      Producer.state = 1,
      prod_n = 9;

  process Producer
    guardBlock
      temp bool t_9 = Producer.state == 0;
    guardCondition t_9;
    effect
      Producer.state = 1,
      prod_n = 10;

  process Producer
    guardBlock
      temp bool t_10 = Producer.state == 3,
      temp bool t_11 = Producer.result == 2,
      temp bool t_12 = Producer.result == 3,
      temp bool t_13 = t_11 or t_12,
      temp bool t_14 = t_10 and t_13;
    guardCondition t_14;
    effect
      Producer.state = 1;

  process Consumer
    guardBlock
      temp bool t_15 = Consumer.state == 1,
      temp bool t_16 = Consumer.m == 4,
      temp bool t_17 = Consumer.m == 5,
      temp bool t_18 = t_16 or t_17,
      temp bool t_19 = t_15 and t_18;
    guardCondition t_19;
    effect
      Consumer.state = 0;

  process Consumer
    guardBlock
      temp bool t_20 = Consumer.state == 1,
      temp bool t_21 = Consumer.m == 2,
      temp bool t_22 = t_20 and t_21;
    guardCondition t_22;
    effect
      Consumer.state = 0,
      Consumer.n = 0;

  process Consumer
    guardBlock
      temp bool t_23 = Consumer.state == 1,
      temp bool t_24 = Consumer.m == 1,
      temp bool t_25 = t_23 and t_24;
    guardCondition t_25;
    effect
      Consumer.state = 2;

  process Consumer
    guardBlock
      temp bool t_26 = Consumer.state == 2,
      temp bool t_27 = Consumer.n != prod_n,
      temp bool t_28 = t_26 and t_27;
    guardCondition t_28;
    effect
      Consumer.state = 3;

  process Sender
    guardBlock
      temp bool t_29 = Sender.state == 1;
    guardCondition t_29;
    effect
      Sender.state = 3,
      Sender.counter = 0;

  process Sender
    guardBlock
      temp bool t_30 = Sender.state == 4,
      temp bool t_31 = Sender.i < Sender.n,
      temp bool t_32 = t_30 and t_31;
    guardCondition t_32;
    effect
      Sender.state = 1,
      temp int t_33 = Sender.i + 1,
      Sender.i = t_33;

  process Receiver
    guardBlock
      temp bool t_34 = Receiver.state == 4;
    guardCondition t_34;
    effect
      Receiver.state = 2,
      temp byte t_35 = Receiver.value and 1,
      Receiver.exp_ab = t_35;

  process Receiver
    guardBlock
      temp bool t_36 = Receiver.state == 0,
      temp byte t_37 = Receiver.value and 2,
      temp bool t_38 = t_37 == 2,
      temp bool t_39 = t_36 and t_38;
    guardCondition t_39;
    effect
      Receiver.state = 5;

  process LTL_property
    guardBlock
      temp bool t_40 = LTL_property.state == 0;
    guardCondition t_40;
    effect
      LTL_property.state = 0;

  process LTL_property
    guardBlock
      temp bool t_41 = LTL_property.state == 0,
      temp bool t_42 = Producer.state == 2,
      temp bool t_43 = Producer.state == 3,
      temp bool t_44 = not t_43,
      temp bool t_45 = t_42 and t_44,
      temp bool t_46 = t_41 and t_45;
    guardCondition t_46;
    effect
      LTL_property.state = 1;

  process LTL_property
    guardBlock
      temp bool t_47 = LTL_property.state == 1,
      temp bool t_48 = Producer.state == 3,
      temp bool t_49 = not t_48,
      temp bool t_50 = t_47 and t_49;
    guardCondition t_50;
    effect
      LTL_property.state = 1;

  process L_Sender
    guardBlock
      temp bool t_51 = L.state == 1,
      temp bool t_52 = Sender.state == 2,
      temp bool t_53 = t_51 and t_52;
    guardCondition t_53;
    effect
      L.state = 0,
      Sender.state = 4,
      temp int t_54 = 1 - Sender.ab,
      Sender.ab = t_54;

  process Sender_Receiver
    guardBlock
      temp bool t_55 = Sender.state == 6,
      temp bool t_56 = Receiver.state == 5,
      temp bool t_57 = t_55 and t_56;
    guardCondition t_57;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Sender_Receiver
    guardBlock
      temp bool t_58 = Sender.state == 6,
      temp bool t_59 = Receiver.state == 1,
      temp bool t_60 = t_58 and t_59;
    guardCondition t_60;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Receiver_Consumer
    guardBlock
      temp bool t_61 = Receiver.state == 2,
      temp byte t_62 = Receiver.value and 1,
      temp bool t_63 = t_62 == Receiver.exp_ab,
      temp byte t_64 = Receiver.value and 2,
      temp bool t_65 = t_64 == 2,
      temp bool t_66 = t_63 and t_65,
      temp bool t_67 = t_61 and t_66,
      temp bool t_68 = Consumer.state == 0,
      temp bool t_69 = t_67 and t_68;
    guardCondition t_69;
    effect
      Receiver.state = 3,
      Consumer.m = 1,
      Consumer.state = 1,
      temp int t_70 = Consumer.n + 1,
      Consumer.n = t_70;

  process Receiver_Consumer
    guardBlock
      temp bool t_71 = Receiver.state == 2,
      temp byte t_72 = Receiver.value and 1,
      temp bool t_73 = t_72 == Receiver.exp_ab,
      temp byte t_74 = Receiver.value and 2,
      temp bool t_75 = t_74 == 0,
      temp bool t_76 = t_73 and t_75,
      temp byte t_77 = Receiver.value and 4,
      temp bool t_78 = t_77 == 0,
      temp bool t_79 = t_76 and t_78,
      temp bool t_80 = t_71 and t_79,
      temp bool t_81 = Consumer.state == 0,
      temp bool t_82 = t_80 and t_81;
    guardCondition t_82;
    effect
      Receiver.state = 3,
      Consumer.m = 5,
      Consumer.state = 1,
      temp int t_83 = Consumer.n + 1,
      Consumer.n = t_83;

  process Receiver_Consumer
    guardBlock
      temp bool t_84 = Receiver.state == 2,
      temp byte t_85 = Receiver.value and 1,
      temp bool t_86 = t_85 == Receiver.exp_ab,
      temp byte t_87 = Receiver.value and 2,
      temp bool t_88 = t_87 == 0,
      temp bool t_89 = t_86 and t_88,
      temp byte t_90 = Receiver.value and 4,
      temp bool t_91 = t_90 == 4,
      temp bool t_92 = t_89 and t_91,
      temp bool t_93 = t_84 and t_92,
      temp bool t_94 = Consumer.state == 0,
      temp bool t_95 = t_93 and t_94;
    guardCondition t_95;
    effect
      Receiver.state = 3,
      Consumer.m = 4,
      Consumer.state = 1,
      temp int t_96 = Consumer.n + 1,
      Consumer.n = t_96;

  process Receiver_Consumer
    guardBlock
      temp bool t_97 = Receiver.state == 0,
      temp bool t_98 = Consumer.state == 0,
      temp bool t_99 = t_97 and t_98;
    guardCondition t_99;
    effect
      Receiver.state = 5,
      Consumer.m = 2,
      Consumer.state = 1,
      temp int t_100 = Consumer.n + 1,
      Consumer.n = t_100;

  process Producer_Sender
    guardBlock
      temp bool t_101 = Producer.state == 1,
      temp bool t_102 = Sender.state == 0,
      temp bool t_103 = t_101 and t_102;
    guardCondition t_103;
    effect
      Producer.state = 2,
      Sender.n = prod_n,
      Sender.state = 1,
      Sender.i = 1;

  process K_Receiver
    guardBlock
      temp bool t_104 = K.state == 1,
      temp bool t_105 = Receiver.state == 1,
      temp bool t_106 = t_104 and t_105;
    guardCondition t_106;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 4;

  process K_Receiver
    guardBlock
      temp bool t_107 = K.state == 1,
      temp bool t_108 = Receiver.state == 0,
      temp bool t_109 = t_107 and t_108;
    guardCondition t_109;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 2;

  process K_Sender
    guardBlock
      temp bool t_110 = K.state == 1,
      temp bool t_111 = Sender.state == 2,
      temp bool t_112 = Sender.counter == 10,
      temp bool t_113 = t_111 and t_112,
      temp bool t_114 = t_110 and t_113;
    guardCondition t_114;
    effect
      K.state = 0,
      Sender.state = 5;

  process K_Sender
    guardBlock
      temp bool t_115 = K.state == 1,
      temp bool t_116 = Sender.state == 2,
      temp bool t_117 = Sender.counter < 10,
      temp bool t_118 = t_116 and t_117,
      temp bool t_119 = t_115 and t_118;
    guardCondition t_119;
    effect
      K.state = 0,
      Sender.state = 3,
      temp int t_120 = Sender.counter + 1,
      Sender.counter = t_120;

  process L_Sender
    guardBlock
      temp bool t_121 = L.state == 1,
      temp bool t_122 = Sender.state == 2,
      temp bool t_123 = Sender.counter == 10,
      temp bool t_124 = t_122 and t_123,
      temp bool t_125 = t_121 and t_124;
    guardCondition t_125;
    effect
      L.state = 0,
      Sender.state = 5;

  process L_Sender
    guardBlock
      temp bool t_126 = L.state == 1,
      temp bool t_127 = Sender.state == 2,
      temp bool t_128 = Sender.counter < 10,
      temp bool t_129 = t_127 and t_128,
      temp bool t_130 = t_126 and t_129;
    guardCondition t_130;
    effect
      L.state = 0,
      Sender.state = 3,
      temp int t_131 = Sender.counter + 1,
      Sender.counter = t_131;

  process Receiver_L
    guardBlock
      temp bool t_132 = Receiver.state == 2,
      temp byte t_133 = Receiver.value and 1,
      temp bool t_134 = Receiver.exp_ab != t_133,
      temp bool t_135 = t_132 and t_134,
      temp bool t_136 = L.state == 0,
      temp bool t_137 = t_135 and t_136;
    guardCondition t_137;
    effect
      Receiver.state = 0,
      L.state = 1;

  process Receiver_L
    guardBlock
      temp bool t_138 = Receiver.state == 3,
      temp bool t_139 = L.state == 0,
      temp bool t_140 = t_138 and t_139;
    guardCondition t_140;
    effect
      Receiver.state = 0,
      temp int t_141 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_141,
      L.state = 1;

  process Sender_Producer
    guardBlock
      temp bool t_142 = Sender.state == 4,
      temp bool t_143 = Sender.i == Sender.n,
      temp bool t_144 = t_142 and t_143,
      temp bool t_145 = Producer.state == 2,
      temp bool t_146 = t_144 and t_145;
    guardCondition t_146;
    effect
      Sender.state = 6,
      Producer.result = 1,
      Producer.state = 3;

  process Sender_Producer
    guardBlock
      temp bool t_147 = Sender.state == 5,
      temp bool t_148 = Sender.i < Sender.n,
      temp bool t_149 = t_147 and t_148,
      temp bool t_150 = Producer.state == 2,
      temp bool t_151 = t_149 and t_150;
    guardCondition t_151;
    effect
      Sender.state = 6,
      Producer.result = 2,
      Producer.state = 3;

  process Sender_Producer
    guardBlock
      temp bool t_152 = Sender.state == 5,
      temp bool t_153 = Sender.i == Sender.n,
      temp bool t_154 = t_152 and t_153,
      temp bool t_155 = Producer.state == 2,
      temp bool t_156 = t_154 and t_155;
    guardCondition t_156;
    effect
      Sender.state = 6,
      Producer.result = 3,
      Producer.state = 3;

  process Sender_K
    guardBlock
      temp bool t_157 = Sender.state == 3,
      temp bool t_158 = Sender.i == 1,
      temp bool t_159 = Sender.i == Sender.n,
      temp bool t_160 = t_158 and t_159,
      temp bool t_161 = t_157 and t_160,
      temp bool t_162 = K.state == 0,
      temp bool t_163 = t_161 and t_162;
    guardCondition t_163;
    effect
      Sender.state = 2,
      temp int t_164 = 6 + Sender.ab,
      K.value = t_164,
      K.state = 1;

  process Sender_K
    guardBlock
      temp bool t_165 = Sender.state == 3,
      temp bool t_166 = Sender.i > 1,
      temp bool t_167 = Sender.i == Sender.n,
      temp bool t_168 = t_166 and t_167,
      temp bool t_169 = t_165 and t_168,
      temp bool t_170 = K.state == 0,
      temp bool t_171 = t_169 and t_170;
    guardCondition t_171;
    effect
      Sender.state = 2,
      temp int t_172 = 2 + Sender.ab,
      K.value = t_172,
      K.state = 1;

  process Sender_K
    guardBlock
      temp bool t_173 = Sender.state == 3,
      temp bool t_174 = Sender.i == 1,
      temp bool t_175 = Sender.i < Sender.n,
      temp bool t_176 = t_174 and t_175,
      temp bool t_177 = t_173 and t_176,
      temp bool t_178 = K.state == 0,
      temp bool t_179 = t_177 and t_178;
    guardCondition t_179;
    effect
      Sender.state = 2,
      temp int t_180 = 4 + Sender.ab,
      K.value = t_180,
      K.state = 1;

  process Sender_K
    guardBlock
      temp bool t_181 = Sender.state == 3,
      temp bool t_182 = Sender.i > 1,
      temp bool t_183 = Sender.i < Sender.n,
      temp bool t_184 = t_182 and t_183,
      temp bool t_185 = t_181 and t_184,
      temp bool t_186 = K.state == 0,
      temp bool t_187 = t_185 and t_186;
    guardCondition t_187;
    effect
      Sender.state = 2,
      K.value = Sender.ab,
      K.state = 1;

  process Producer_Consumer
    guardBlock
      temp bool t_188 = Producer.state == 3,
      temp bool t_189 = Producer.result == 1,
      temp bool t_190 = t_188 and t_189,
      temp bool t_191 = Consumer.state == 2,
      temp bool t_192 = Consumer.n == prod_n,
      temp bool t_193 = t_191 and t_192,
      temp bool t_194 = t_190 and t_193;
    guardCondition t_194;
    effect
      Producer.state = 0,
      Consumer.state = 0;
      // accepting conditions
      // LTL_property.state == 1
