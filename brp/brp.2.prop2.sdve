byte prod_n = 0;
state {ready(0), start_send(1), wait_result(2), check(3)} Producer.state = 0;
byte Producer.result = 0;
byte Producer.n = 0;
state {ready(0), get_msg(1), check(2), st_error(3)} Consumer.state = 0;
byte Consumer.m = 0;
byte Consumer.n = 0;
state {idle(0), next_frame(1), wait_ack(2), send(3), success(4), q_error(5), ret(6)} Sender.state = 0;
byte Sender.ab = 0;
byte Sender.n = 0;
byte Sender.i = 0;
byte Sender.counter = 0;
state {idle(0), new_file(1), frame_received(2), frame_reported(3), first_safe(4), ret(5)} Receiver.state = 1;
byte Receiver.value = 0;
byte Receiver.exp_ab = 0;
state {ready(0), got_msg(1)} K.state = 0;
byte K.value = 0;
state {ready(0), got_msg(1)} L.state = 0;
state {q1(0), q2(1)} LTL_property.state = 0;
temp bool t_0 = false;
temp bool t_1 = false;
temp bool t_2 = false;
temp bool t_3 = false;
temp bool t_4 = false;
temp bool t_5 = false;
temp bool t_6 = false;
temp bool t_7 = false;
temp bool t_8 = false;
temp bool t_9 = false;
temp bool t_10 = false;
temp bool t_11 = false;
temp bool t_12 = false;
temp bool t_13 = false;
temp bool t_14 = false;
temp bool t_15 = false;
temp bool t_16 = false;
temp bool t_17 = false;
temp bool t_18 = false;
temp bool t_19 = false;
temp bool t_20 = false;
temp bool t_21 = false;
temp bool t_22 = false;
temp bool t_23 = false;
temp bool t_24 = false;
temp bool t_25 = false;
temp int t_26 = 0;
temp bool t_27 = false;
temp byte t_28 = 0;
temp bool t_29 = false;
temp byte t_30 = 0;
temp bool t_31 = false;
temp bool t_32 = false;
temp bool t_33 = false;
temp bool t_34 = false;
temp bool t_35 = false;
temp bool t_36 = false;
temp bool t_37 = false;
temp bool t_38 = false;
temp bool t_39 = false;
temp bool t_40 = false;
temp bool t_41 = false;
temp bool t_42 = false;
temp bool t_43 = false;
temp bool t_44 = false;
temp byte t_45 = 0;
temp bool t_46 = false;
temp bool t_47 = false;
temp bool t_48 = false;
temp bool t_49 = false;
temp bool t_50 = false;
temp bool t_51 = false;
temp bool t_52 = false;
temp int t_53 = 0;
temp bool t_54 = false;
temp bool t_55 = false;
temp bool t_56 = false;
temp bool t_57 = false;
temp bool t_58 = false;
temp bool t_59 = false;
temp bool t_60 = false;
temp bool t_61 = false;
temp bool t_62 = false;
temp bool t_63 = false;
temp bool t_64 = false;
temp bool t_65 = false;
temp bool t_66 = false;
temp bool t_67 = false;
temp bool t_68 = false;
temp bool t_69 = false;
temp bool t_70 = false;
temp bool t_71 = false;
temp bool t_72 = false;
temp bool t_73 = false;
temp bool t_74 = false;
temp bool t_75 = false;
temp byte t_76 = 0;
temp bool t_77 = false;
temp byte t_78 = 0;
temp bool t_79 = false;
temp bool t_80 = false;
temp bool t_81 = false;
temp bool t_82 = false;
temp bool t_83 = false;
temp int t_84 = 0;
temp bool t_85 = false;
temp byte t_86 = 0;
temp bool t_87 = false;
temp byte t_88 = 0;
temp bool t_89 = false;
temp bool t_90 = false;
temp byte t_91 = 0;
temp bool t_92 = false;
temp bool t_93 = false;
temp bool t_94 = false;
temp bool t_95 = false;
temp bool t_96 = false;
temp int t_97 = 0;
temp bool t_98 = false;
temp byte t_99 = 0;
temp bool t_100 = false;
temp byte t_101 = 0;
temp bool t_102 = false;
temp bool t_103 = false;
temp byte t_104 = 0;
temp bool t_105 = false;
temp bool t_106 = false;
temp bool t_107 = false;
temp bool t_108 = false;
temp bool t_109 = false;
temp int t_110 = 0;
temp bool t_111 = false;
temp bool t_112 = false;
temp bool t_113 = false;
temp int t_114 = 0;
temp bool t_115 = false;
temp bool t_116 = false;
temp bool t_117 = false;
temp bool t_118 = false;
temp bool t_119 = false;
temp bool t_120 = false;
temp bool t_121 = false;
temp int t_122 = 0;
temp bool t_123 = false;
temp bool t_124 = false;
temp bool t_125 = false;
temp bool t_126 = false;
temp bool t_127 = false;
temp bool t_128 = false;
temp bool t_129 = false;
temp int t_130 = 0;
temp bool t_131 = false;
temp bool t_132 = false;
temp bool t_133 = false;
temp bool t_134 = false;
temp bool t_135 = false;
temp bool t_136 = false;
temp bool t_137 = false;
temp int t_138 = 0;
temp bool t_139 = false;
temp bool t_140 = false;
temp bool t_141 = false;
temp bool t_142 = false;
temp bool t_143 = false;
temp bool t_144 = false;
temp bool t_145 = false;
temp bool t_146 = false;
temp bool t_147 = false;
temp bool t_148 = false;
temp int t_149 = 0;
temp bool t_150 = false;
temp bool t_151 = false;
temp bool t_152 = false;
temp bool t_153 = false;
temp bool t_154 = false;
temp bool t_155 = false;
temp bool t_156 = false;
temp bool t_157 = false;
temp bool t_158 = false;
temp bool t_159 = false;
temp bool t_160 = false;
temp bool t_161 = false;
temp bool t_162 = false;
temp int t_163 = 0;
temp bool t_164 = false;
temp bool t_165 = false;
temp bool t_166 = false;
temp bool t_167 = false;
temp bool t_168 = false;
temp bool t_169 = false;
temp bool t_170 = false;
temp bool t_171 = false;
temp bool t_172 = false;
temp bool t_173 = false;
temp int t_174 = 0;
temp bool t_175 = false;
temp bool t_176 = false;
temp bool t_177 = false;
temp bool t_178 = false;
temp bool t_179 = false;
temp bool t_180 = false;
temp bool t_181 = false;
temp bool t_182 = false;
temp bool t_183 = false;
temp bool t_184 = false;
temp bool t_185 = false;
temp bool t_186 = false;
temp bool t_187 = false;
	process Producer 
		guardBlock
			t_0 = Producer.state == 0;

		guardCondition t_0;
		effect
			Producer.state = 1,
			prod_n = 1;

	process Producer 
		guardBlock
			t_1 = Producer.state == 0;

		guardCondition t_1;
		effect
			Producer.state = 1,
			prod_n = 2;

	process Producer 
		guardBlock
			t_2 = Producer.state == 0;

		guardCondition t_2;
		effect
			Producer.state = 1,
			prod_n = 3;

	process Producer 
		guardBlock
			t_3 = Producer.state == 3,
			t_4 = Producer.result == 2,
			t_5 = Producer.result == 3,
			t_6 = t_4 or t_5,
			t_7 = t_3 and t_6;

		guardCondition t_7;
		effect
			Producer.state = 1;

	process Consumer 
		guardBlock
			t_8 = Consumer.state == 1,
			t_9 = Consumer.m == 4,
			t_10 = Consumer.m == 5,
			t_11 = t_9 or t_10,
			t_12 = t_8 and t_11;

		guardCondition t_12;
		effect
			Consumer.state = 0;

	process Consumer 
		guardBlock
			t_13 = Consumer.state == 1,
			t_14 = Consumer.m == 2,
			t_15 = t_13 and t_14;

		guardCondition t_15;
		effect
			Consumer.state = 0,
			Consumer.n = 0;

	process Consumer 
		guardBlock
			t_16 = Consumer.state == 1,
			t_17 = Consumer.m == 1,
			t_18 = t_16 and t_17;

		guardCondition t_18;
		effect
			Consumer.state = 2;

	process Consumer 
		guardBlock
			t_19 = Consumer.state == 2,
			t_20 = Consumer.n != prod_n,
			t_21 = t_19 and t_20;

		guardCondition t_21;
		effect
			Consumer.state = 3;

	process Sender 
		guardBlock
			t_22 = Sender.state == 1;

		guardCondition t_22;
		effect
			Sender.state = 3,
			Sender.counter = 0;

	process Sender 
		guardBlock
			t_23 = Sender.state == 4,
			t_24 = Sender.i < Sender.n,
			t_25 = t_23 and t_24;

		guardCondition t_25;
		effect
			Sender.state = 1,
			t_26 = Sender.i + 1,
			Sender.i = t_26;

	process Receiver 
		guardBlock
			t_27 = Receiver.state == 4;

		guardCondition t_27;
		effect
			Receiver.state = 2,
			t_28 = Receiver.value & 1,
			Receiver.exp_ab = t_28;

	process Receiver 
		guardBlock
			t_29 = Receiver.state == 0,
			t_30 = Receiver.value & 2,
			t_31 = t_30 == 2,
			t_32 = t_29 and t_31;

		guardCondition t_32;
		effect
			Receiver.state = 5;

	process LTL_property 
		guardBlock
			t_33 = LTL_property.state == 0;

		guardCondition t_33;
		effect
			LTL_property.state = 0;

	process LTL_property 
		guardBlock
			t_34 = LTL_property.state == 0,
			t_35 = Producer.state == 2,
			t_36 = Producer.state == 3,
			t_37 = not t_36,
			t_38 = t_35 and t_37,
			t_39 = t_34 and t_38;

		guardCondition t_39;
		effect
			LTL_property.state = 1;

	process LTL_property 
		guardBlock
			t_40 = LTL_property.state == 1,
			t_41 = Producer.state == 3,
			t_42 = not t_41,
			t_43 = t_40 and t_42;

		guardCondition t_43;
		effect
			LTL_property.state = 1;

	process Receiver_L 
		guardBlock
			t_44 = Receiver.state == 2,
			t_45 = Receiver.value & 1,
			t_46 = Receiver.exp_ab != t_45,
			t_47 = t_44 and t_46,
			t_48 = L.state == 0,
			t_49 = t_47 and t_48;

		guardCondition t_49;
		effect
			Receiver.state = 0,
			L.state = 1;

	process Receiver_L 
		guardBlock
			t_50 = Receiver.state == 3,
			t_51 = L.state == 0,
			t_52 = t_50 and t_51;

		guardCondition t_52;
		effect
			Receiver.state = 0,
			t_53 = 1 - Receiver.exp_ab,
			Receiver.exp_ab = t_53,
			L.state = 1;

	process Sender_Producer 
		guardBlock
			t_54 = Sender.state == 4,
			t_55 = Sender.i == Sender.n,
			t_56 = t_54 and t_55,
			t_57 = Producer.state == 2,
			t_58 = t_56 and t_57;

		guardCondition t_58;
		effect
			Sender.state = 6,
			Producer.result = 1,
			Producer.state = 3;

	process Sender_Producer 
		guardBlock
			t_59 = Sender.state == 5,
			t_60 = Sender.i < Sender.n,
			t_61 = t_59 and t_60,
			t_62 = Producer.state == 2,
			t_63 = t_61 and t_62;

		guardCondition t_63;
		effect
			Sender.state = 6,
			Producer.result = 2,
			Producer.state = 3;

	process Sender_Producer 
		guardBlock
			t_64 = Sender.state == 5,
			t_65 = Sender.i == Sender.n,
			t_66 = t_64 and t_65,
			t_67 = Producer.state == 2,
			t_68 = t_66 and t_67;

		guardCondition t_68;
		effect
			Sender.state = 6,
			Producer.result = 3,
			Producer.state = 3;

	process K_Receiver 
		guardBlock
			t_69 = K.state == 1,
			t_70 = Receiver.state == 1,
			t_71 = t_69 and t_70;

		guardCondition t_71;
		effect
			K.state = 0,
			Receiver.value = K.value,
			Receiver.state = 4;

	process K_Receiver 
		guardBlock
			t_72 = K.state == 1,
			t_73 = Receiver.state == 0,
			t_74 = t_72 and t_73;

		guardCondition t_74;
		effect
			K.state = 0,
			Receiver.value = K.value,
			Receiver.state = 2;

	process Receiver_Consumer 
		guardBlock
			t_75 = Receiver.state == 2,
			t_76 = Receiver.value & 1,
			t_77 = t_76 == Receiver.exp_ab,
			t_78 = Receiver.value & 2,
			t_79 = t_78 == 2,
			t_80 = t_77 and t_79,
			t_81 = t_75 and t_80,
			t_82 = Consumer.state == 0,
			t_83 = t_81 and t_82;

		guardCondition t_83;
		effect
			Receiver.state = 3,
			Consumer.m = 1,
			Consumer.state = 1,
			t_84 = Consumer.n + 1,
			Consumer.n = t_84;

	process Receiver_Consumer 
		guardBlock
			t_85 = Receiver.state == 2,
			t_86 = Receiver.value & 1,
			t_87 = t_86 == Receiver.exp_ab,
			t_88 = Receiver.value & 2,
			t_89 = t_88 == 0,
			t_90 = t_87 and t_89,
			t_91 = Receiver.value & 4,
			t_92 = t_91 == 0,
			t_93 = t_90 and t_92,
			t_94 = t_85 and t_93,
			t_95 = Consumer.state == 0,
			t_96 = t_94 and t_95;

		guardCondition t_96;
		effect
			Receiver.state = 3,
			Consumer.m = 5,
			Consumer.state = 1,
			t_97 = Consumer.n + 1,
			Consumer.n = t_97;

	process Receiver_Consumer 
		guardBlock
			t_98 = Receiver.state == 2,
			t_99 = Receiver.value & 1,
			t_100 = t_99 == Receiver.exp_ab,
			t_101 = Receiver.value & 2,
			t_102 = t_101 == 0,
			t_103 = t_100 and t_102,
			t_104 = Receiver.value & 4,
			t_105 = t_104 == 4,
			t_106 = t_103 and t_105,
			t_107 = t_98 and t_106,
			t_108 = Consumer.state == 0,
			t_109 = t_107 and t_108;

		guardCondition t_109;
		effect
			Receiver.state = 3,
			Consumer.m = 4,
			Consumer.state = 1,
			t_110 = Consumer.n + 1,
			Consumer.n = t_110;

	process Receiver_Consumer 
		guardBlock
			t_111 = Receiver.state == 0,
			t_112 = Consumer.state == 0,
			t_113 = t_111 and t_112;

		guardCondition t_113;
		effect
			Receiver.state = 5,
			Consumer.m = 2,
			Consumer.state = 1,
			t_114 = Consumer.n + 1,
			Consumer.n = t_114;

	process Sender_K 
		guardBlock
			t_115 = Sender.state == 3,
			t_116 = Sender.i == 1,
			t_117 = Sender.i == Sender.n,
			t_118 = t_116 and t_117,
			t_119 = t_115 and t_118,
			t_120 = K.state == 0,
			t_121 = t_119 and t_120;

		guardCondition t_121;
		effect
			Sender.state = 2,
			t_122 = 6 + Sender.ab,
			K.value = t_122,
			K.state = 1;

	process Sender_K 
		guardBlock
			t_123 = Sender.state == 3,
			t_124 = Sender.i > 1,
			t_125 = Sender.i == Sender.n,
			t_126 = t_124 and t_125,
			t_127 = t_123 and t_126,
			t_128 = K.state == 0,
			t_129 = t_127 and t_128;

		guardCondition t_129;
		effect
			Sender.state = 2,
			t_130 = 2 + Sender.ab,
			K.value = t_130,
			K.state = 1;

	process Sender_K 
		guardBlock
			t_131 = Sender.state == 3,
			t_132 = Sender.i == 1,
			t_133 = Sender.i < Sender.n,
			t_134 = t_132 and t_133,
			t_135 = t_131 and t_134,
			t_136 = K.state == 0,
			t_137 = t_135 and t_136;

		guardCondition t_137;
		effect
			Sender.state = 2,
			t_138 = 4 + Sender.ab,
			K.value = t_138,
			K.state = 1;

	process Sender_K 
		guardBlock
			t_139 = Sender.state == 3,
			t_140 = Sender.i > 1,
			t_141 = Sender.i < Sender.n,
			t_142 = t_140 and t_141,
			t_143 = t_139 and t_142,
			t_144 = K.state == 0,
			t_145 = t_143 and t_144;

		guardCondition t_145;
		effect
			Sender.state = 2,
			K.value = Sender.ab,
			K.state = 1;

	process L_Sender 
		guardBlock
			t_146 = L.state == 1,
			t_147 = Sender.state == 2,
			t_148 = t_146 and t_147;

		guardCondition t_148;
		effect
			L.state = 0,
			Sender.state = 4,
			t_149 = 1 - Sender.ab,
			Sender.ab = t_149;

	process Producer_Sender 
		guardBlock
			t_150 = Producer.state == 1,
			t_151 = Sender.state == 0,
			t_152 = t_150 and t_151;

		guardCondition t_152;
		effect
			Producer.state = 2,
			Sender.n = prod_n,
			Sender.state = 1,
			Sender.i = 1;

	process K_Sender 
		guardBlock
			t_153 = K.state == 1,
			t_154 = Sender.state == 2,
			t_155 = Sender.counter == 5,
			t_156 = t_154 and t_155,
			t_157 = t_153 and t_156;

		guardCondition t_157;
		effect
			K.state = 0,
			Sender.state = 5;

	process K_Sender 
		guardBlock
			t_158 = K.state == 1,
			t_159 = Sender.state == 2,
			t_160 = Sender.counter < 5,
			t_161 = t_159 and t_160,
			t_162 = t_158 and t_161;

		guardCondition t_162;
		effect
			K.state = 0,
			Sender.state = 3,
			t_163 = Sender.counter + 1,
			Sender.counter = t_163;

	process L_Sender 
		guardBlock
			t_164 = L.state == 1,
			t_165 = Sender.state == 2,
			t_166 = Sender.counter == 5,
			t_167 = t_165 and t_166,
			t_168 = t_164 and t_167;

		guardCondition t_168;
		effect
			L.state = 0,
			Sender.state = 5;

	process L_Sender 
		guardBlock
			t_169 = L.state == 1,
			t_170 = Sender.state == 2,
			t_171 = Sender.counter < 5,
			t_172 = t_170 and t_171,
			t_173 = t_169 and t_172;

		guardCondition t_173;
		effect
			L.state = 0,
			Sender.state = 3,
			t_174 = Sender.counter + 1,
			Sender.counter = t_174;

	process Sender_Receiver 
		guardBlock
			t_175 = Sender.state == 6,
			t_176 = Receiver.state == 5,
			t_177 = t_175 and t_176;

		guardCondition t_177;
		effect
			Sender.state = 0,
			Receiver.state = 1;

	process Sender_Receiver 
		guardBlock
			t_178 = Sender.state == 6,
			t_179 = Receiver.state == 1,
			t_180 = t_178 and t_179;

		guardCondition t_180;
		effect
			Sender.state = 0,
			Receiver.state = 1;

	process Producer_Consumer 
		guardBlock
			t_181 = Producer.state == 3,
			t_182 = Producer.result == 1,
			t_183 = t_181 and t_182,
			t_184 = Consumer.state == 2,
			t_185 = Consumer.n == prod_n,
			t_186 = t_184 and t_185,
			t_187 = t_183 and t_186;

		guardCondition t_187;
		effect
			Producer.state = 0,
			Consumer.state = 0;

accepting conditions
	LTL_property.state == 1

system async property LTL_property;
