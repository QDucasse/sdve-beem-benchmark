byte prod_n = 0;
state {ready(0), start_send(1), wait_result(2), check(3)} Producer.state = 0;
byte Producer.result = 0;
byte Producer.n = 0;
state {ready(0), get_msg(1), check(2), st_error(3)} Consumer.state = 0;
byte Consumer.m = 0;
byte Consumer.n = 0;
state {idle(0), next_frame(1), wait_ack(2), send(3), success(4), q_error(5), ret(6)} Sender.state = 0;
byte Sender.ab = 0;
byte Sender.n = 0;
byte Sender.i = 0;
byte Sender.counter = 0;
state {idle(0), new_file(1), frame_received(2), frame_reported(3), first_safe(4), ret(5)} Receiver.state = 1;
byte Receiver.value = 0;
byte Receiver.exp_ab = 0;
state {ready(0), got_msg(1)} K.state = 0;
byte K.value = 0;
state {ready(0), got_msg(1)} L.state = 0;
state {q1(0), q2(1)} LTL_property.state = 0;
temp bool t_0 = false;
temp bool t_1 = false;
temp bool t_2 = false;
temp bool t_3 = false;
temp bool t_4 = false;
temp bool t_5 = false;
temp bool t_6 = false;
temp bool t_7 = false;
temp bool t_8 = false;
temp bool t_9 = false;
temp bool t_10 = false;
temp bool t_11 = false;
temp bool t_12 = false;
temp bool t_13 = false;
temp bool t_14 = false;
temp bool t_15 = false;
temp bool t_16 = false;
temp bool t_17 = false;
temp bool t_18 = false;
temp bool t_19 = false;
temp bool t_20 = false;
temp bool t_21 = false;
temp bool t_22 = false;
temp bool t_23 = false;
temp bool t_24 = false;
temp bool t_25 = false;
temp bool t_26 = false;
temp bool t_27 = false;
temp bool t_28 = false;
temp bool t_29 = false;
temp bool t_30 = false;
temp bool t_31 = false;
temp bool t_32 = false;
temp int t_33 = 0;
temp bool t_34 = false;
temp byte t_35 = 0;
temp bool t_36 = false;
temp byte t_37 = 0;
temp bool t_38 = false;
temp bool t_39 = false;
temp bool t_40 = false;
temp bool t_41 = false;
temp bool t_42 = false;
temp bool t_43 = false;
temp bool t_44 = false;
temp bool t_45 = false;
temp bool t_46 = false;
temp bool t_47 = false;
temp bool t_48 = false;
temp bool t_49 = false;
temp bool t_50 = false;
temp bool t_51 = false;
temp bool t_52 = false;
temp bool t_53 = false;
temp bool t_54 = false;
temp bool t_55 = false;
temp bool t_56 = false;
temp bool t_57 = false;
temp bool t_58 = false;
temp bool t_59 = false;
temp bool t_60 = false;
temp bool t_61 = false;
temp bool t_62 = false;
temp bool t_63 = false;
temp bool t_64 = false;
temp bool t_65 = false;
temp bool t_66 = false;
temp bool t_67 = false;
temp bool t_68 = false;
temp bool t_69 = false;
temp bool t_70 = false;
temp int t_71 = 0;
temp bool t_72 = false;
temp bool t_73 = false;
temp bool t_74 = false;
temp bool t_75 = false;
temp bool t_76 = false;
temp bool t_77 = false;
temp bool t_78 = false;
temp bool t_79 = false;
temp bool t_80 = false;
temp bool t_81 = false;
temp int t_82 = 0;
temp bool t_83 = false;
temp bool t_84 = false;
temp bool t_85 = false;
temp bool t_86 = false;
temp bool t_87 = false;
temp bool t_88 = false;
temp bool t_89 = false;
temp int t_90 = 0;
temp bool t_91 = false;
temp bool t_92 = false;
temp bool t_93 = false;
temp bool t_94 = false;
temp bool t_95 = false;
temp bool t_96 = false;
temp bool t_97 = false;
temp int t_98 = 0;
temp bool t_99 = false;
temp bool t_100 = false;
temp bool t_101 = false;
temp bool t_102 = false;
temp bool t_103 = false;
temp bool t_104 = false;
temp bool t_105 = false;
temp int t_106 = 0;
temp bool t_107 = false;
temp bool t_108 = false;
temp bool t_109 = false;
temp bool t_110 = false;
temp bool t_111 = false;
temp bool t_112 = false;
temp bool t_113 = false;
temp bool t_114 = false;
temp bool t_115 = false;
temp bool t_116 = false;
temp bool t_117 = false;
temp bool t_118 = false;
temp bool t_119 = false;
temp bool t_120 = false;
temp bool t_121 = false;
temp bool t_122 = false;
temp bool t_123 = false;
temp bool t_124 = false;
temp bool t_125 = false;
temp bool t_126 = false;
temp bool t_127 = false;
temp bool t_128 = false;
temp bool t_129 = false;
temp bool t_130 = false;
temp bool t_131 = false;
temp bool t_132 = false;
temp bool t_133 = false;
temp bool t_134 = false;
temp bool t_135 = false;
temp byte t_136 = 0;
temp bool t_137 = false;
temp bool t_138 = false;
temp bool t_139 = false;
temp bool t_140 = false;
temp bool t_141 = false;
temp bool t_142 = false;
temp bool t_143 = false;
temp int t_144 = 0;
temp bool t_145 = false;
temp bool t_146 = false;
temp bool t_147 = false;
temp bool t_148 = false;
temp bool t_149 = false;
temp bool t_150 = false;
temp bool t_151 = false;
temp bool t_152 = false;
temp bool t_153 = false;
temp int t_154 = 0;
temp bool t_155 = false;
temp byte t_156 = 0;
temp bool t_157 = false;
temp byte t_158 = 0;
temp bool t_159 = false;
temp bool t_160 = false;
temp bool t_161 = false;
temp bool t_162 = false;
temp bool t_163 = false;
temp int t_164 = 0;
temp bool t_165 = false;
temp byte t_166 = 0;
temp bool t_167 = false;
temp byte t_168 = 0;
temp bool t_169 = false;
temp bool t_170 = false;
temp byte t_171 = 0;
temp bool t_172 = false;
temp bool t_173 = false;
temp bool t_174 = false;
temp bool t_175 = false;
temp bool t_176 = false;
temp int t_177 = 0;
temp bool t_178 = false;
temp byte t_179 = 0;
temp bool t_180 = false;
temp byte t_181 = 0;
temp bool t_182 = false;
temp bool t_183 = false;
temp byte t_184 = 0;
temp bool t_185 = false;
temp bool t_186 = false;
temp bool t_187 = false;
temp bool t_188 = false;
temp bool t_189 = false;
temp int t_190 = 0;
temp bool t_191 = false;
temp bool t_192 = false;
temp bool t_193 = false;
temp int t_194 = 0;
	process Producer 
		guardBlock
			t_0 = Producer.state == 0;

		guardCondition t_0;
		effect
			Producer.state = 1,
			prod_n = 1;

	process Producer 
		guardBlock
			t_1 = Producer.state == 0;

		guardCondition t_1;
		effect
			Producer.state = 1,
			prod_n = 2;

	process Producer 
		guardBlock
			t_2 = Producer.state == 0;

		guardCondition t_2;
		effect
			Producer.state = 1,
			prod_n = 3;

	process Producer 
		guardBlock
			t_3 = Producer.state == 0;

		guardCondition t_3;
		effect
			Producer.state = 1,
			prod_n = 4;

	process Producer 
		guardBlock
			t_4 = Producer.state == 0;

		guardCondition t_4;
		effect
			Producer.state = 1,
			prod_n = 5;

	process Producer 
		guardBlock
			t_5 = Producer.state == 0;

		guardCondition t_5;
		effect
			Producer.state = 1,
			prod_n = 6;

	process Producer 
		guardBlock
			t_6 = Producer.state == 0;

		guardCondition t_6;
		effect
			Producer.state = 1,
			prod_n = 7;

	process Producer 
		guardBlock
			t_7 = Producer.state == 0;

		guardCondition t_7;
		effect
			Producer.state = 1,
			prod_n = 8;

	process Producer 
		guardBlock
			t_8 = Producer.state == 0;

		guardCondition t_8;
		effect
			Producer.state = 1,
			prod_n = 9;

	process Producer 
		guardBlock
			t_9 = Producer.state == 0;

		guardCondition t_9;
		effect
			Producer.state = 1,
			prod_n = 10;

	process Producer 
		guardBlock
			t_10 = Producer.state == 3,
			t_11 = Producer.result == 2,
			t_12 = Producer.result == 3,
			t_13 = t_11 or t_12,
			t_14 = t_10 and t_13;

		guardCondition t_14;
		effect
			Producer.state = 1;

	process Consumer 
		guardBlock
			t_15 = Consumer.state == 1,
			t_16 = Consumer.m == 4,
			t_17 = Consumer.m == 5,
			t_18 = t_16 or t_17,
			t_19 = t_15 and t_18;

		guardCondition t_19;
		effect
			Consumer.state = 0;

	process Consumer 
		guardBlock
			t_20 = Consumer.state == 1,
			t_21 = Consumer.m == 2,
			t_22 = t_20 and t_21;

		guardCondition t_22;
		effect
			Consumer.state = 0,
			Consumer.n = 0;

	process Consumer 
		guardBlock
			t_23 = Consumer.state == 1,
			t_24 = Consumer.m == 1,
			t_25 = t_23 and t_24;

		guardCondition t_25;
		effect
			Consumer.state = 2;

	process Consumer 
		guardBlock
			t_26 = Consumer.state == 2,
			t_27 = Consumer.n != prod_n,
			t_28 = t_26 and t_27;

		guardCondition t_28;
		effect
			Consumer.state = 3;

	process Sender 
		guardBlock
			t_29 = Sender.state == 1;

		guardCondition t_29;
		effect
			Sender.state = 3,
			Sender.counter = 0;

	process Sender 
		guardBlock
			t_30 = Sender.state == 4,
			t_31 = Sender.i < Sender.n,
			t_32 = t_30 and t_31;

		guardCondition t_32;
		effect
			Sender.state = 1,
			t_33 = Sender.i + 1,
			Sender.i = t_33;

	process Receiver 
		guardBlock
			t_34 = Receiver.state == 4;

		guardCondition t_34;
		effect
			Receiver.state = 2,
			t_35 = Receiver.value & 1,
			Receiver.exp_ab = t_35;

	process Receiver 
		guardBlock
			t_36 = Receiver.state == 0,
			t_37 = Receiver.value & 2,
			t_38 = t_37 == 2,
			t_39 = t_36 and t_38;

		guardCondition t_39;
		effect
			Receiver.state = 5;

	process LTL_property 
		guardBlock
			t_40 = LTL_property.state == 0;

		guardCondition t_40;
		effect
			LTL_property.state = 0;

	process LTL_property 
		guardBlock
			t_41 = LTL_property.state == 0,
			t_42 = Producer.state == 2,
			t_43 = Producer.state == 0,
			t_44 = not t_43,
			t_45 = t_42 and t_44,
			t_46 = t_41 and t_45;

		guardCondition t_46;
		effect
			LTL_property.state = 1;

	process LTL_property 
		guardBlock
			t_47 = LTL_property.state == 1,
			t_48 = Producer.state == 0,
			t_49 = not t_48,
			t_50 = t_47 and t_49;

		guardCondition t_50;
		effect
			LTL_property.state = 1;

	process Producer_Consumer 
		guardBlock
			t_51 = Producer.state == 3,
			t_52 = Producer.result == 1,
			t_53 = t_51 and t_52,
			t_54 = Consumer.state == 2,
			t_55 = Consumer.n == prod_n,
			t_56 = t_54 and t_55,
			t_57 = t_53 and t_56;

		guardCondition t_57;
		effect
			Producer.state = 0,
			Consumer.state = 0;

	process Producer_Sender 
		guardBlock
			t_58 = Producer.state == 1,
			t_59 = Sender.state == 0,
			t_60 = t_58 and t_59;

		guardCondition t_60;
		effect
			Producer.state = 2,
			Sender.n = prod_n,
			Sender.state = 1,
			Sender.i = 1;

	process K_Sender 
		guardBlock
			t_61 = K.state == 1,
			t_62 = Sender.state == 2,
			t_63 = Sender.counter == 10,
			t_64 = t_62 and t_63,
			t_65 = t_61 and t_64;

		guardCondition t_65;
		effect
			K.state = 0,
			Sender.state = 5;

	process K_Sender 
		guardBlock
			t_66 = K.state == 1,
			t_67 = Sender.state == 2,
			t_68 = Sender.counter < 10,
			t_69 = t_67 and t_68,
			t_70 = t_66 and t_69;

		guardCondition t_70;
		effect
			K.state = 0,
			Sender.state = 3,
			t_71 = Sender.counter + 1,
			Sender.counter = t_71;

	process L_Sender 
		guardBlock
			t_72 = L.state == 1,
			t_73 = Sender.state == 2,
			t_74 = Sender.counter == 10,
			t_75 = t_73 and t_74,
			t_76 = t_72 and t_75;

		guardCondition t_76;
		effect
			L.state = 0,
			Sender.state = 5;

	process L_Sender 
		guardBlock
			t_77 = L.state == 1,
			t_78 = Sender.state == 2,
			t_79 = Sender.counter < 10,
			t_80 = t_78 and t_79,
			t_81 = t_77 and t_80;

		guardCondition t_81;
		effect
			L.state = 0,
			Sender.state = 3,
			t_82 = Sender.counter + 1,
			Sender.counter = t_82;

	process Sender_K 
		guardBlock
			t_83 = Sender.state == 3,
			t_84 = Sender.i == 1,
			t_85 = Sender.i == Sender.n,
			t_86 = t_84 and t_85,
			t_87 = t_83 and t_86,
			t_88 = K.state == 0,
			t_89 = t_87 and t_88;

		guardCondition t_89;
		effect
			Sender.state = 2,
			t_90 = 6 + Sender.ab,
			K.value = t_90,
			K.state = 1;

	process Sender_K 
		guardBlock
			t_91 = Sender.state == 3,
			t_92 = Sender.i > 1,
			t_93 = Sender.i == Sender.n,
			t_94 = t_92 and t_93,
			t_95 = t_91 and t_94,
			t_96 = K.state == 0,
			t_97 = t_95 and t_96;

		guardCondition t_97;
		effect
			Sender.state = 2,
			t_98 = 2 + Sender.ab,
			K.value = t_98,
			K.state = 1;

	process Sender_K 
		guardBlock
			t_99 = Sender.state == 3,
			t_100 = Sender.i == 1,
			t_101 = Sender.i < Sender.n,
			t_102 = t_100 and t_101,
			t_103 = t_99 and t_102,
			t_104 = K.state == 0,
			t_105 = t_103 and t_104;

		guardCondition t_105;
		effect
			Sender.state = 2,
			t_106 = 4 + Sender.ab,
			K.value = t_106,
			K.state = 1;

	process Sender_K 
		guardBlock
			t_107 = Sender.state == 3,
			t_108 = Sender.i > 1,
			t_109 = Sender.i < Sender.n,
			t_110 = t_108 and t_109,
			t_111 = t_107 and t_110,
			t_112 = K.state == 0,
			t_113 = t_111 and t_112;

		guardCondition t_113;
		effect
			Sender.state = 2,
			K.value = Sender.ab,
			K.state = 1;

	process K_Receiver 
		guardBlock
			t_114 = K.state == 1,
			t_115 = Receiver.state == 1,
			t_116 = t_114 and t_115;

		guardCondition t_116;
		effect
			K.state = 0,
			Receiver.value = K.value,
			Receiver.state = 4;

	process K_Receiver 
		guardBlock
			t_117 = K.state == 1,
			t_118 = Receiver.state == 0,
			t_119 = t_117 and t_118;

		guardCondition t_119;
		effect
			K.state = 0,
			Receiver.value = K.value,
			Receiver.state = 2;

	process Sender_Producer 
		guardBlock
			t_120 = Sender.state == 4,
			t_121 = Sender.i == Sender.n,
			t_122 = t_120 and t_121,
			t_123 = Producer.state == 2,
			t_124 = t_122 and t_123;

		guardCondition t_124;
		effect
			Sender.state = 6,
			Producer.result = 1,
			Producer.state = 3;

	process Sender_Producer 
		guardBlock
			t_125 = Sender.state == 5,
			t_126 = Sender.i < Sender.n,
			t_127 = t_125 and t_126,
			t_128 = Producer.state == 2,
			t_129 = t_127 and t_128;

		guardCondition t_129;
		effect
			Sender.state = 6,
			Producer.result = 2,
			Producer.state = 3;

	process Sender_Producer 
		guardBlock
			t_130 = Sender.state == 5,
			t_131 = Sender.i == Sender.n,
			t_132 = t_130 and t_131,
			t_133 = Producer.state == 2,
			t_134 = t_132 and t_133;

		guardCondition t_134;
		effect
			Sender.state = 6,
			Producer.result = 3,
			Producer.state = 3;

	process Receiver_L 
		guardBlock
			t_135 = Receiver.state == 2,
			t_136 = Receiver.value & 1,
			t_137 = Receiver.exp_ab != t_136,
			t_138 = t_135 and t_137,
			t_139 = L.state == 0,
			t_140 = t_138 and t_139;

		guardCondition t_140;
		effect
			Receiver.state = 0,
			L.state = 1;

	process Receiver_L 
		guardBlock
			t_141 = Receiver.state == 3,
			t_142 = L.state == 0,
			t_143 = t_141 and t_142;

		guardCondition t_143;
		effect
			Receiver.state = 0,
			t_144 = 1 - Receiver.exp_ab,
			Receiver.exp_ab = t_144,
			L.state = 1;

	process Sender_Receiver 
		guardBlock
			t_145 = Sender.state == 6,
			t_146 = Receiver.state == 5,
			t_147 = t_145 and t_146;

		guardCondition t_147;
		effect
			Sender.state = 0,
			Receiver.state = 1;

	process Sender_Receiver 
		guardBlock
			t_148 = Sender.state == 6,
			t_149 = Receiver.state == 1,
			t_150 = t_148 and t_149;

		guardCondition t_150;
		effect
			Sender.state = 0,
			Receiver.state = 1;

	process L_Sender 
		guardBlock
			t_151 = L.state == 1,
			t_152 = Sender.state == 2,
			t_153 = t_151 and t_152;

		guardCondition t_153;
		effect
			L.state = 0,
			Sender.state = 4,
			t_154 = 1 - Sender.ab,
			Sender.ab = t_154;

	process Receiver_Consumer 
		guardBlock
			t_155 = Receiver.state == 2,
			t_156 = Receiver.value & 1,
			t_157 = t_156 == Receiver.exp_ab,
			t_158 = Receiver.value & 2,
			t_159 = t_158 == 2,
			t_160 = t_157 and t_159,
			t_161 = t_155 and t_160,
			t_162 = Consumer.state == 0,
			t_163 = t_161 and t_162;

		guardCondition t_163;
		effect
			Receiver.state = 3,
			Consumer.m = 1,
			Consumer.state = 1,
			t_164 = Consumer.n + 1,
			Consumer.n = t_164;

	process Receiver_Consumer 
		guardBlock
			t_165 = Receiver.state == 2,
			t_166 = Receiver.value & 1,
			t_167 = t_166 == Receiver.exp_ab,
			t_168 = Receiver.value & 2,
			t_169 = t_168 == 0,
			t_170 = t_167 and t_169,
			t_171 = Receiver.value & 4,
			t_172 = t_171 == 0,
			t_173 = t_170 and t_172,
			t_174 = t_165 and t_173,
			t_175 = Consumer.state == 0,
			t_176 = t_174 and t_175;

		guardCondition t_176;
		effect
			Receiver.state = 3,
			Consumer.m = 5,
			Consumer.state = 1,
			t_177 = Consumer.n + 1,
			Consumer.n = t_177;

	process Receiver_Consumer 
		guardBlock
			t_178 = Receiver.state == 2,
			t_179 = Receiver.value & 1,
			t_180 = t_179 == Receiver.exp_ab,
			t_181 = Receiver.value & 2,
			t_182 = t_181 == 0,
			t_183 = t_180 and t_182,
			t_184 = Receiver.value & 4,
			t_185 = t_184 == 4,
			t_186 = t_183 and t_185,
			t_187 = t_178 and t_186,
			t_188 = Consumer.state == 0,
			t_189 = t_187 and t_188;

		guardCondition t_189;
		effect
			Receiver.state = 3,
			Consumer.m = 4,
			Consumer.state = 1,
			t_190 = Consumer.n + 1,
			Consumer.n = t_190;

	process Receiver_Consumer 
		guardBlock
			t_191 = Receiver.state == 0,
			t_192 = Consumer.state == 0,
			t_193 = t_191 and t_192;

		guardCondition t_193;
		effect
			Receiver.state = 5,
			Consumer.m = 2,
			Consumer.state = 1,
			t_194 = Consumer.n + 1,
			Consumer.n = t_194;

accepting conditions
	LTL_property.state == 1

system async property LTL_property;
