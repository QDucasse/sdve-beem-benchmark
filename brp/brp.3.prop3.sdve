state {ready(0), start_send(1), wait_result(2), check(3)} Producer.state = 0;
state {ready(0), get_msg(1), check(2), st_error(3)} Consumer.state = 0;
state {idle(0), next_frame(1), wait_ack(2), send(3), success(4), q_error(5), ret(6)} Sender.state = 0;
state {idle(0), new_file(1), frame_received(2), frame_reported(3), first_safe(4), ret(5)} Receiver.state = 1;
state {ready(0), got_msg(1)} K.state = 0;
state {ready(0), got_msg(1)} L.state = 0;
state {q1(0), q2(1)} LTL_property.state = 0;
byte prod_n = 0;
byte Producer.result = 0;
byte Producer.n = 0;
byte Consumer.m = 0;
byte Consumer.n = 0;
byte Sender.ab = 0;
byte Sender.n = 0;
byte Sender.i = 0;
byte Sender.counter = 0;
byte Receiver.value = 0;
byte Receiver.exp_ab = 0;
byte K.value = 0;

  process Producer 
    guardBlock
      temp bool t_0 = Producer.state == 0;

    guardCondition t_0;
    effect
      Producer.state = 1,
      prod_n = 1;

  process Producer 
    guardBlock
      temp bool t_1 = Producer.state == 0;

    guardCondition t_1;
    effect
      Producer.state = 1,
      prod_n = 2;

  process Producer 
    guardBlock
      temp bool t_2 = Producer.state == 0;

    guardCondition t_2;
    effect
      Producer.state = 1,
      prod_n = 3;

  process Producer 
    guardBlock
      temp bool t_3 = Producer.state == 0;

    guardCondition t_3;
    effect
      Producer.state = 1,
      prod_n = 4;

  process Producer 
    guardBlock
      temp bool t_4 = Producer.state == 0;

    guardCondition t_4;
    effect
      Producer.state = 1,
      prod_n = 5;

  process Producer 
    guardBlock
      temp bool t_5 = Producer.state == 0;

    guardCondition t_5;
    effect
      Producer.state = 1,
      prod_n = 6;

  process Producer 
    guardBlock
      temp bool t_6 = Producer.state == 0;

    guardCondition t_6;
    effect
      Producer.state = 1,
      prod_n = 7;

  process Producer 
    guardBlock
      temp bool t_7 = Producer.state == 0;

    guardCondition t_7;
    effect
      Producer.state = 1,
      prod_n = 8;

  process Producer 
    guardBlock
      temp bool t_8 = Producer.state == 0;

    guardCondition t_8;
    effect
      Producer.state = 1,
      prod_n = 9;

  process Producer 
    guardBlock
      temp bool t_9 = Producer.state == 0;

    guardCondition t_9;
    effect
      Producer.state = 1,
      prod_n = 10;

  process Producer 
    guardBlock
      temp bool t_10 = Producer.state == 3,
      temp bool t_11 = Producer.result == 2,
      temp bool t_12 = Producer.result == 3,
      temp bool t_13 = t_11 or t_12,
      temp bool t_14 = t_10 and t_13;

    guardCondition t_14;
    effect
      Producer.state = 1;

  process Consumer 
    guardBlock
      temp bool t_15 = Consumer.state == 1,
      temp bool t_16 = Consumer.m == 4,
      temp bool t_17 = Consumer.m == 5,
      temp bool t_18 = t_16 or t_17,
      temp bool t_19 = t_15 and t_18;

    guardCondition t_19;
    effect
      Consumer.state = 0;

  process Consumer 
    guardBlock
      temp bool t_20 = Consumer.state == 1,
      temp bool t_21 = Consumer.m == 2,
      temp bool t_22 = t_20 and t_21;

    guardCondition t_22;
    effect
      Consumer.state = 0,
      Consumer.n = 0;

  process Consumer 
    guardBlock
      temp bool t_23 = Consumer.state == 1,
      temp bool t_24 = Consumer.m == 1,
      temp bool t_25 = t_23 and t_24;

    guardCondition t_25;
    effect
      Consumer.state = 2;

  process Consumer 
    guardBlock
      temp bool t_26 = Consumer.state == 2,
      temp bool t_27 = Consumer.n != prod_n,
      temp bool t_28 = t_26 and t_27;

    guardCondition t_28;
    effect
      Consumer.state = 3;

  process Sender 
    guardBlock
      temp bool t_29 = Sender.state == 1;

    guardCondition t_29;
    effect
      Sender.state = 3,
      Sender.counter = 0;

  process Sender 
    guardBlock
      temp bool t_30 = Sender.state == 4,
      temp bool t_31 = Sender.i < Sender.n,
      temp bool t_32 = t_30 and t_31;

    guardCondition t_32;
    effect
      Sender.state = 1,
      temp byte t_33 = Sender.i + 1,
      Sender.i = t_33;

  process Receiver 
    guardBlock
      temp bool t_34 = Receiver.state == 4;

    guardCondition t_34;
    effect
      Receiver.state = 2,
      temp byte t_35 = Receiver.value & 1,
      Receiver.exp_ab = t_35;

  process Receiver 
    guardBlock
      temp bool t_36 = Receiver.state == 0,
      temp byte t_37 = Receiver.value & 2,
      temp bool t_38 = t_37 == 2,
      temp bool t_39 = t_36 and t_38;

    guardCondition t_39;
    effect
      Receiver.state = 5;

  process LTL_property 
    guardBlock
      temp bool t_40 = LTL_property.state == 0;

    guardCondition t_40;
    effect
      LTL_property.state = 0;

  process LTL_property 
    guardBlock
      temp bool t_41 = LTL_property.state == 0,
      temp bool t_42 = Producer.state == 2,
      temp bool t_43 = Producer.state == 0,
      temp bool t_44 = not t_43,
      temp bool t_45 = t_42 and t_44,
      temp bool t_46 = t_41 and t_45;

    guardCondition t_46;
    effect
      LTL_property.state = 1;

  process LTL_property 
    guardBlock
      temp bool t_47 = LTL_property.state == 1,
      temp bool t_48 = Producer.state == 0,
      temp bool t_49 = not t_48,
      temp bool t_50 = t_47 and t_49;

    guardCondition t_50;
    effect
      LTL_property.state = 1;

  process K_Sender 
    guardBlock
      temp bool t_51 = K.state == 1,
      temp bool t_52 = Sender.state == 2,
      temp bool t_53 = Sender.counter == 10,
      temp bool t_54 = t_52 and t_53,
      temp bool t_55 = t_51 and t_54;

    guardCondition t_55;
    effect
      K.state = 0,
      Sender.state = 5;

  process K_Sender 
    guardBlock
      temp bool t_56 = K.state == 1,
      temp bool t_57 = Sender.state == 2,
      temp bool t_58 = Sender.counter < 10,
      temp bool t_59 = t_57 and t_58,
      temp bool t_60 = t_56 and t_59;

    guardCondition t_60;
    effect
      K.state = 0,
      Sender.state = 3,
      temp byte t_61 = Sender.counter + 1,
      Sender.counter = t_61;

  process L_Sender 
    guardBlock
      temp bool t_62 = L.state == 1,
      temp bool t_63 = Sender.state == 2,
      temp bool t_64 = Sender.counter == 10,
      temp bool t_65 = t_63 and t_64,
      temp bool t_66 = t_62 and t_65;

    guardCondition t_66;
    effect
      L.state = 0,
      Sender.state = 5;

  process L_Sender 
    guardBlock
      temp bool t_67 = L.state == 1,
      temp bool t_68 = Sender.state == 2,
      temp bool t_69 = Sender.counter < 10,
      temp bool t_70 = t_68 and t_69,
      temp bool t_71 = t_67 and t_70;

    guardCondition t_71;
    effect
      L.state = 0,
      Sender.state = 3,
      temp byte t_72 = Sender.counter + 1,
      Sender.counter = t_72;

  process Sender_Producer 
    guardBlock
      temp bool t_73 = Sender.state == 4,
      temp bool t_74 = Sender.i == Sender.n,
      temp bool t_75 = t_73 and t_74,
      temp bool t_76 = Producer.state == 2,
      temp bool t_77 = t_75 and t_76;

    guardCondition t_77;
    effect
      Sender.state = 6,
      Producer.result = 1,
      Producer.state = 3;

  process Sender_Producer 
    guardBlock
      temp bool t_78 = Sender.state == 5,
      temp bool t_79 = Sender.i < Sender.n,
      temp bool t_80 = t_78 and t_79,
      temp bool t_81 = Producer.state == 2,
      temp bool t_82 = t_80 and t_81;

    guardCondition t_82;
    effect
      Sender.state = 6,
      Producer.result = 2,
      Producer.state = 3;

  process Sender_Producer 
    guardBlock
      temp bool t_83 = Sender.state == 5,
      temp bool t_84 = Sender.i == Sender.n,
      temp bool t_85 = t_83 and t_84,
      temp bool t_86 = Producer.state == 2,
      temp bool t_87 = t_85 and t_86;

    guardCondition t_87;
    effect
      Sender.state = 6,
      Producer.result = 3,
      Producer.state = 3;

  process L_Sender 
    guardBlock
      temp bool t_88 = L.state == 1,
      temp bool t_89 = Sender.state == 2,
      temp bool t_90 = t_88 and t_89;

    guardCondition t_90;
    effect
      L.state = 0,
      Sender.state = 4,
      temp byte t_91 = 1 - Sender.ab,
      Sender.ab = t_91;

  process Sender_K 
    guardBlock
      temp bool t_92 = Sender.state == 3,
      temp bool t_93 = Sender.i == 1,
      temp bool t_94 = Sender.i == Sender.n,
      temp bool t_95 = t_93 and t_94,
      temp bool t_96 = t_92 and t_95,
      temp bool t_97 = K.state == 0,
      temp bool t_98 = t_96 and t_97;

    guardCondition t_98;
    effect
      Sender.state = 2,
      temp byte t_99 = 6 + Sender.ab,
      K.value = t_99,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_100 = Sender.state == 3,
      temp bool t_101 = Sender.i > 1,
      temp bool t_102 = Sender.i == Sender.n,
      temp bool t_103 = t_101 and t_102,
      temp bool t_104 = t_100 and t_103,
      temp bool t_105 = K.state == 0,
      temp bool t_106 = t_104 and t_105;

    guardCondition t_106;
    effect
      Sender.state = 2,
      temp byte t_107 = 2 + Sender.ab,
      K.value = t_107,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_108 = Sender.state == 3,
      temp bool t_109 = Sender.i == 1,
      temp bool t_110 = Sender.i < Sender.n,
      temp bool t_111 = t_109 and t_110,
      temp bool t_112 = t_108 and t_111,
      temp bool t_113 = K.state == 0,
      temp bool t_114 = t_112 and t_113;

    guardCondition t_114;
    effect
      Sender.state = 2,
      temp byte t_115 = 4 + Sender.ab,
      K.value = t_115,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_116 = Sender.state == 3,
      temp bool t_117 = Sender.i > 1,
      temp bool t_118 = Sender.i < Sender.n,
      temp bool t_119 = t_117 and t_118,
      temp bool t_120 = t_116 and t_119,
      temp bool t_121 = K.state == 0,
      temp bool t_122 = t_120 and t_121;

    guardCondition t_122;
    effect
      Sender.state = 2,
      K.value = Sender.ab,
      K.state = 1;

  process Receiver_Consumer 
    guardBlock
      temp bool t_123 = Receiver.state == 2,
      temp byte t_124 = Receiver.value & 1,
      temp bool t_125 = t_124 == Receiver.exp_ab,
      temp byte t_126 = Receiver.value & 2,
      temp bool t_127 = t_126 == 2,
      temp bool t_128 = t_125 and t_127,
      temp bool t_129 = t_123 and t_128,
      temp bool t_130 = Consumer.state == 0,
      temp bool t_131 = t_129 and t_130;

    guardCondition t_131;
    effect
      Receiver.state = 3,
      Consumer.m = 1,
      Consumer.state = 1,
      temp byte t_132 = Consumer.n + 1,
      Consumer.n = t_132;

  process Receiver_Consumer 
    guardBlock
      temp bool t_133 = Receiver.state == 2,
      temp byte t_134 = Receiver.value & 1,
      temp bool t_135 = t_134 == Receiver.exp_ab,
      temp byte t_136 = Receiver.value & 2,
      temp bool t_137 = t_136 == 0,
      temp bool t_138 = t_135 and t_137,
      temp byte t_139 = Receiver.value & 4,
      temp bool t_140 = t_139 == 0,
      temp bool t_141 = t_138 and t_140,
      temp bool t_142 = t_133 and t_141,
      temp bool t_143 = Consumer.state == 0,
      temp bool t_144 = t_142 and t_143;

    guardCondition t_144;
    effect
      Receiver.state = 3,
      Consumer.m = 5,
      Consumer.state = 1,
      temp byte t_145 = Consumer.n + 1,
      Consumer.n = t_145;

  process Receiver_Consumer 
    guardBlock
      temp bool t_146 = Receiver.state == 2,
      temp byte t_147 = Receiver.value & 1,
      temp bool t_148 = t_147 == Receiver.exp_ab,
      temp byte t_149 = Receiver.value & 2,
      temp bool t_150 = t_149 == 0,
      temp bool t_151 = t_148 and t_150,
      temp byte t_152 = Receiver.value & 4,
      temp bool t_153 = t_152 == 4,
      temp bool t_154 = t_151 and t_153,
      temp bool t_155 = t_146 and t_154,
      temp bool t_156 = Consumer.state == 0,
      temp bool t_157 = t_155 and t_156;

    guardCondition t_157;
    effect
      Receiver.state = 3,
      Consumer.m = 4,
      Consumer.state = 1,
      temp byte t_158 = Consumer.n + 1,
      Consumer.n = t_158;

  process Receiver_Consumer 
    guardBlock
      temp bool t_159 = Receiver.state == 0,
      temp bool t_160 = Consumer.state == 0,
      temp bool t_161 = t_159 and t_160;

    guardCondition t_161;
    effect
      Receiver.state = 5,
      Consumer.m = 2,
      Consumer.state = 1,
      temp byte t_162 = Consumer.n + 1,
      Consumer.n = t_162;

  process Sender_Receiver 
    guardBlock
      temp bool t_163 = Sender.state == 6,
      temp bool t_164 = Receiver.state == 5,
      temp bool t_165 = t_163 and t_164;

    guardCondition t_165;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Sender_Receiver 
    guardBlock
      temp bool t_166 = Sender.state == 6,
      temp bool t_167 = Receiver.state == 1,
      temp bool t_168 = t_166 and t_167;

    guardCondition t_168;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process K_Receiver 
    guardBlock
      temp bool t_169 = K.state == 1,
      temp bool t_170 = Receiver.state == 1,
      temp bool t_171 = t_169 and t_170;

    guardCondition t_171;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 4;

  process K_Receiver 
    guardBlock
      temp bool t_172 = K.state == 1,
      temp bool t_173 = Receiver.state == 0,
      temp bool t_174 = t_172 and t_173;

    guardCondition t_174;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 2;

  process Producer_Sender 
    guardBlock
      temp bool t_175 = Producer.state == 1,
      temp bool t_176 = Sender.state == 0,
      temp bool t_177 = t_175 and t_176;

    guardCondition t_177;
    effect
      Producer.state = 2,
      Sender.n = prod_n,
      Sender.state = 1,
      Sender.i = 1;

  process Producer_Consumer 
    guardBlock
      temp bool t_178 = Producer.state == 3,
      temp bool t_179 = Producer.result == 1,
      temp bool t_180 = t_178 and t_179,
      temp bool t_181 = Consumer.state == 2,
      temp bool t_182 = Consumer.n == prod_n,
      temp bool t_183 = t_181 and t_182,
      temp bool t_184 = t_180 and t_183;

    guardCondition t_184;
    effect
      Producer.state = 0,
      Consumer.state = 0;

  process Receiver_L 
    guardBlock
      temp bool t_185 = Receiver.state == 2,
      temp byte t_186 = Receiver.value & 1,
      temp bool t_187 = Receiver.exp_ab != t_186,
      temp bool t_188 = t_185 and t_187,
      temp bool t_189 = L.state == 0,
      temp bool t_190 = t_188 and t_189;

    guardCondition t_190;
    effect
      Receiver.state = 0,
      L.state = 1;

  process Receiver_L 
    guardBlock
      temp bool t_191 = Receiver.state == 3,
      temp bool t_192 = L.state == 0,
      temp bool t_193 = t_191 and t_192;

    guardCondition t_193;
    effect
      Receiver.state = 0,
      temp byte t_194 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_194,
      L.state = 1;

accepting conditions
  LTL_property.state == 1

