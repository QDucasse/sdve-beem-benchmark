state {ready(0), start_send(1), wait_result(2), check(3)} Producer.state = 0;
state {ready(0), get_msg(1), check(2), st_error(3)} Consumer.state = 0;
state {idle(0), next_frame(1), wait_ack(2), send(3), success(4), q_error(5), ret(6)} Sender.state = 0;
state {idle(0), new_file(1), frame_received(2), frame_reported(3), first_safe(4), ret(5)} Receiver.state = 1;
state {ready(0), got_msg(1)} K.state = 0;
state {ready(0), got_msg(1)} L.state = 0;
state {q1(0), q2(1)} LTL_property.state = 0;
byte prod_n = 0;
byte Producer.result = 0;
byte Producer.n = 0;
byte Consumer.m = 0;
byte Consumer.n = 0;
byte Sender.ab = 0;
byte Sender.n = 0;
byte Sender.i = 0;
byte Sender.counter = 0;
byte Receiver.value = 0;
byte Receiver.exp_ab = 0;
byte K.value = 0;

  process Producer 
    guardBlock
      temp bool t_0 = Producer.state == 0;

    guardCondition t_0;
    effect
      Producer.state = 1,
      prod_n = 1;

  process Producer 
    guardBlock
      temp bool t_1 = Producer.state == 0;

    guardCondition t_1;
    effect
      Producer.state = 1,
      prod_n = 2;

  process Producer 
    guardBlock
      temp bool t_2 = Producer.state == 0;

    guardCondition t_2;
    effect
      Producer.state = 1,
      prod_n = 3;

  process Producer 
    guardBlock
      temp bool t_3 = Producer.state == 0;

    guardCondition t_3;
    effect
      Producer.state = 1,
      prod_n = 4;

  process Producer 
    guardBlock
      temp bool t_4 = Producer.state == 0;

    guardCondition t_4;
    effect
      Producer.state = 1,
      prod_n = 5;

  process Producer 
    guardBlock
      temp bool t_5 = Producer.state == 0;

    guardCondition t_5;
    effect
      Producer.state = 1,
      prod_n = 6;

  process Producer 
    guardBlock
      temp bool t_6 = Producer.state == 0;

    guardCondition t_6;
    effect
      Producer.state = 1,
      prod_n = 7;

  process Producer 
    guardBlock
      temp bool t_7 = Producer.state == 0;

    guardCondition t_7;
    effect
      Producer.state = 1,
      prod_n = 8;

  process Producer 
    guardBlock
      temp bool t_8 = Producer.state == 0;

    guardCondition t_8;
    effect
      Producer.state = 1,
      prod_n = 9;

  process Producer 
    guardBlock
      temp bool t_9 = Producer.state == 0;

    guardCondition t_9;
    effect
      Producer.state = 1,
      prod_n = 10;

  process Producer 
    guardBlock
      temp bool t_10 = Producer.state == 0;

    guardCondition t_10;
    effect
      Producer.state = 1,
      prod_n = 11;

  process Producer 
    guardBlock
      temp bool t_11 = Producer.state == 0;

    guardCondition t_11;
    effect
      Producer.state = 1,
      prod_n = 12;

  process Producer 
    guardBlock
      temp bool t_12 = Producer.state == 0;

    guardCondition t_12;
    effect
      Producer.state = 1,
      prod_n = 13;

  process Producer 
    guardBlock
      temp bool t_13 = Producer.state == 0;

    guardCondition t_13;
    effect
      Producer.state = 1,
      prod_n = 14;

  process Producer 
    guardBlock
      temp bool t_14 = Producer.state == 0;

    guardCondition t_14;
    effect
      Producer.state = 1,
      prod_n = 15;

  process Producer 
    guardBlock
      temp bool t_15 = Producer.state == 0;

    guardCondition t_15;
    effect
      Producer.state = 1,
      prod_n = 16;

  process Producer 
    guardBlock
      temp bool t_16 = Producer.state == 0;

    guardCondition t_16;
    effect
      Producer.state = 1,
      prod_n = 17;

  process Producer 
    guardBlock
      temp bool t_17 = Producer.state == 0;

    guardCondition t_17;
    effect
      Producer.state = 1,
      prod_n = 18;

  process Producer 
    guardBlock
      temp bool t_18 = Producer.state == 0;

    guardCondition t_18;
    effect
      Producer.state = 1,
      prod_n = 19;

  process Producer 
    guardBlock
      temp bool t_19 = Producer.state == 0;

    guardCondition t_19;
    effect
      Producer.state = 1,
      prod_n = 20;

  process Producer 
    guardBlock
      temp bool t_20 = Producer.state == 3,
      temp bool t_21 = Producer.result == 2,
      temp bool t_22 = Producer.result == 3,
      temp bool t_23 = t_21 or t_22,
      temp bool t_24 = t_20 and t_23;

    guardCondition t_24;
    effect
      Producer.state = 1;

  process Consumer 
    guardBlock
      temp bool t_25 = Consumer.state == 1,
      temp bool t_26 = Consumer.m == 4,
      temp bool t_27 = Consumer.m == 5,
      temp bool t_28 = t_26 or t_27,
      temp bool t_29 = t_25 and t_28;

    guardCondition t_29;
    effect
      Consumer.state = 0;

  process Consumer 
    guardBlock
      temp bool t_30 = Consumer.state == 1,
      temp bool t_31 = Consumer.m == 2,
      temp bool t_32 = t_30 and t_31;

    guardCondition t_32;
    effect
      Consumer.state = 0,
      Consumer.n = 0;

  process Consumer 
    guardBlock
      temp bool t_33 = Consumer.state == 1,
      temp bool t_34 = Consumer.m == 1,
      temp bool t_35 = t_33 and t_34;

    guardCondition t_35;
    effect
      Consumer.state = 2;

  process Consumer 
    guardBlock
      temp bool t_36 = Consumer.state == 2,
      temp bool t_37 = Consumer.n != prod_n,
      temp bool t_38 = t_36 and t_37;

    guardCondition t_38;
    effect
      Consumer.state = 3;

  process Sender 
    guardBlock
      temp bool t_39 = Sender.state == 1;

    guardCondition t_39;
    effect
      Sender.state = 3,
      Sender.counter = 0;

  process Sender 
    guardBlock
      temp bool t_40 = Sender.state == 4,
      temp bool t_41 = Sender.i < Sender.n,
      temp bool t_42 = t_40 and t_41;

    guardCondition t_42;
    effect
      Sender.state = 1,
      temp byte t_43 = Sender.i + 1,
      Sender.i = t_43;

  process Receiver 
    guardBlock
      temp bool t_44 = Receiver.state == 4;

    guardCondition t_44;
    effect
      Receiver.state = 2,
      temp byte t_45 = Receiver.value & 1,
      Receiver.exp_ab = t_45;

  process Receiver 
    guardBlock
      temp bool t_46 = Receiver.state == 0,
      temp byte t_47 = Receiver.value & 2,
      temp bool t_48 = t_47 == 2,
      temp bool t_49 = t_46 and t_48;

    guardCondition t_49;
    effect
      Receiver.state = 5;

  process LTL_property 
    guardBlock
      temp bool t_50 = LTL_property.state == 0;

    guardCondition t_50;
    effect
      LTL_property.state = 0;

  process LTL_property 
    guardBlock
      temp bool t_51 = LTL_property.state == 0,
      temp bool t_52 = Producer.state == 2,
      temp bool t_53 = Producer.state == 3,
      temp bool t_54 = not t_53,
      temp bool t_55 = t_52 and t_54,
      temp bool t_56 = t_51 and t_55;

    guardCondition t_56;
    effect
      LTL_property.state = 1;

  process LTL_property 
    guardBlock
      temp bool t_57 = LTL_property.state == 1,
      temp bool t_58 = Producer.state == 3,
      temp bool t_59 = not t_58,
      temp bool t_60 = t_57 and t_59;

    guardCondition t_60;
    effect
      LTL_property.state = 1;

  process Receiver_Consumer 
    guardBlock
      temp bool t_61 = Receiver.state == 2,
      temp byte t_62 = Receiver.value & 1,
      temp bool t_63 = t_62 == Receiver.exp_ab,
      temp byte t_64 = Receiver.value & 2,
      temp bool t_65 = t_64 == 2,
      temp bool t_66 = t_63 and t_65,
      temp bool t_67 = t_61 and t_66,
      temp bool t_68 = Consumer.state == 0,
      temp bool t_69 = t_67 and t_68;

    guardCondition t_69;
    effect
      Receiver.state = 3,
      Consumer.m = 1,
      Consumer.state = 1,
      temp byte t_70 = Consumer.n + 1,
      Consumer.n = t_70;

  process Receiver_Consumer 
    guardBlock
      temp bool t_71 = Receiver.state == 2,
      temp byte t_72 = Receiver.value & 1,
      temp bool t_73 = t_72 == Receiver.exp_ab,
      temp byte t_74 = Receiver.value & 2,
      temp bool t_75 = t_74 == 0,
      temp bool t_76 = t_73 and t_75,
      temp byte t_77 = Receiver.value & 4,
      temp bool t_78 = t_77 == 0,
      temp bool t_79 = t_76 and t_78,
      temp bool t_80 = t_71 and t_79,
      temp bool t_81 = Consumer.state == 0,
      temp bool t_82 = t_80 and t_81;

    guardCondition t_82;
    effect
      Receiver.state = 3,
      Consumer.m = 5,
      Consumer.state = 1,
      temp byte t_83 = Consumer.n + 1,
      Consumer.n = t_83;

  process Receiver_Consumer 
    guardBlock
      temp bool t_84 = Receiver.state == 2,
      temp byte t_85 = Receiver.value & 1,
      temp bool t_86 = t_85 == Receiver.exp_ab,
      temp byte t_87 = Receiver.value & 2,
      temp bool t_88 = t_87 == 0,
      temp bool t_89 = t_86 and t_88,
      temp byte t_90 = Receiver.value & 4,
      temp bool t_91 = t_90 == 4,
      temp bool t_92 = t_89 and t_91,
      temp bool t_93 = t_84 and t_92,
      temp bool t_94 = Consumer.state == 0,
      temp bool t_95 = t_93 and t_94;

    guardCondition t_95;
    effect
      Receiver.state = 3,
      Consumer.m = 4,
      Consumer.state = 1,
      temp byte t_96 = Consumer.n + 1,
      Consumer.n = t_96;

  process Receiver_Consumer 
    guardBlock
      temp bool t_97 = Receiver.state == 0,
      temp bool t_98 = Consumer.state == 0,
      temp bool t_99 = t_97 and t_98;

    guardCondition t_99;
    effect
      Receiver.state = 5,
      Consumer.m = 2,
      Consumer.state = 1,
      temp byte t_100 = Consumer.n + 1,
      Consumer.n = t_100;

  process K_Sender 
    guardBlock
      temp bool t_101 = K.state == 1,
      temp bool t_102 = Sender.state == 2,
      temp bool t_103 = Sender.counter == 20,
      temp bool t_104 = t_102 and t_103,
      temp bool t_105 = t_101 and t_104;

    guardCondition t_105;
    effect
      K.state = 0,
      Sender.state = 5;

  process K_Sender 
    guardBlock
      temp bool t_106 = K.state == 1,
      temp bool t_107 = Sender.state == 2,
      temp bool t_108 = Sender.counter < 20,
      temp bool t_109 = t_107 and t_108,
      temp bool t_110 = t_106 and t_109;

    guardCondition t_110;
    effect
      K.state = 0,
      Sender.state = 3,
      temp byte t_111 = Sender.counter + 1,
      Sender.counter = t_111;

  process L_Sender 
    guardBlock
      temp bool t_112 = L.state == 1,
      temp bool t_113 = Sender.state == 2,
      temp bool t_114 = Sender.counter == 20,
      temp bool t_115 = t_113 and t_114,
      temp bool t_116 = t_112 and t_115;

    guardCondition t_116;
    effect
      L.state = 0,
      Sender.state = 5;

  process L_Sender 
    guardBlock
      temp bool t_117 = L.state == 1,
      temp bool t_118 = Sender.state == 2,
      temp bool t_119 = Sender.counter < 20,
      temp bool t_120 = t_118 and t_119,
      temp bool t_121 = t_117 and t_120;

    guardCondition t_121;
    effect
      L.state = 0,
      Sender.state = 3,
      temp byte t_122 = Sender.counter + 1,
      Sender.counter = t_122;

  process Producer_Sender 
    guardBlock
      temp bool t_123 = Producer.state == 1,
      temp bool t_124 = Sender.state == 0,
      temp bool t_125 = t_123 and t_124;

    guardCondition t_125;
    effect
      Producer.state = 2,
      Sender.n = prod_n,
      Sender.state = 1,
      Sender.i = 1;

  process Producer_Consumer 
    guardBlock
      temp bool t_126 = Producer.state == 3,
      temp bool t_127 = Producer.result == 1,
      temp bool t_128 = t_126 and t_127,
      temp bool t_129 = Consumer.state == 2,
      temp bool t_130 = Consumer.n == prod_n,
      temp bool t_131 = t_129 and t_130,
      temp bool t_132 = t_128 and t_131;

    guardCondition t_132;
    effect
      Producer.state = 0,
      Consumer.state = 0;

  process Sender_K 
    guardBlock
      temp bool t_133 = Sender.state == 3,
      temp bool t_134 = Sender.i == 1,
      temp bool t_135 = Sender.i == Sender.n,
      temp bool t_136 = t_134 and t_135,
      temp bool t_137 = t_133 and t_136,
      temp bool t_138 = K.state == 0,
      temp bool t_139 = t_137 and t_138;

    guardCondition t_139;
    effect
      Sender.state = 2,
      temp byte t_140 = 6 + Sender.ab,
      K.value = t_140,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_141 = Sender.state == 3,
      temp bool t_142 = Sender.i > 1,
      temp bool t_143 = Sender.i == Sender.n,
      temp bool t_144 = t_142 and t_143,
      temp bool t_145 = t_141 and t_144,
      temp bool t_146 = K.state == 0,
      temp bool t_147 = t_145 and t_146;

    guardCondition t_147;
    effect
      Sender.state = 2,
      temp byte t_148 = 2 + Sender.ab,
      K.value = t_148,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_149 = Sender.state == 3,
      temp bool t_150 = Sender.i == 1,
      temp bool t_151 = Sender.i < Sender.n,
      temp bool t_152 = t_150 and t_151,
      temp bool t_153 = t_149 and t_152,
      temp bool t_154 = K.state == 0,
      temp bool t_155 = t_153 and t_154;

    guardCondition t_155;
    effect
      Sender.state = 2,
      temp byte t_156 = 4 + Sender.ab,
      K.value = t_156,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_157 = Sender.state == 3,
      temp bool t_158 = Sender.i > 1,
      temp bool t_159 = Sender.i < Sender.n,
      temp bool t_160 = t_158 and t_159,
      temp bool t_161 = t_157 and t_160,
      temp bool t_162 = K.state == 0,
      temp bool t_163 = t_161 and t_162;

    guardCondition t_163;
    effect
      Sender.state = 2,
      K.value = Sender.ab,
      K.state = 1;

  process Sender_Receiver 
    guardBlock
      temp bool t_164 = Sender.state == 6,
      temp bool t_165 = Receiver.state == 5,
      temp bool t_166 = t_164 and t_165;

    guardCondition t_166;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Sender_Receiver 
    guardBlock
      temp bool t_167 = Sender.state == 6,
      temp bool t_168 = Receiver.state == 1,
      temp bool t_169 = t_167 and t_168;

    guardCondition t_169;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process K_Receiver 
    guardBlock
      temp bool t_170 = K.state == 1,
      temp bool t_171 = Receiver.state == 1,
      temp bool t_172 = t_170 and t_171;

    guardCondition t_172;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 4;

  process K_Receiver 
    guardBlock
      temp bool t_173 = K.state == 1,
      temp bool t_174 = Receiver.state == 0,
      temp bool t_175 = t_173 and t_174;

    guardCondition t_175;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 2;

  process Receiver_L 
    guardBlock
      temp bool t_176 = Receiver.state == 2,
      temp byte t_177 = Receiver.value & 1,
      temp bool t_178 = Receiver.exp_ab != t_177,
      temp bool t_179 = t_176 and t_178,
      temp bool t_180 = L.state == 0,
      temp bool t_181 = t_179 and t_180;

    guardCondition t_181;
    effect
      Receiver.state = 0,
      L.state = 1;

  process Receiver_L 
    guardBlock
      temp bool t_182 = Receiver.state == 3,
      temp bool t_183 = L.state == 0,
      temp bool t_184 = t_182 and t_183;

    guardCondition t_184;
    effect
      Receiver.state = 0,
      temp byte t_185 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_185,
      L.state = 1;

  process Sender_Producer 
    guardBlock
      temp bool t_186 = Sender.state == 4,
      temp bool t_187 = Sender.i == Sender.n,
      temp bool t_188 = t_186 and t_187,
      temp bool t_189 = Producer.state == 2,
      temp bool t_190 = t_188 and t_189;

    guardCondition t_190;
    effect
      Sender.state = 6,
      Producer.result = 1,
      Producer.state = 3;

  process Sender_Producer 
    guardBlock
      temp bool t_191 = Sender.state == 5,
      temp bool t_192 = Sender.i < Sender.n,
      temp bool t_193 = t_191 and t_192,
      temp bool t_194 = Producer.state == 2,
      temp bool t_195 = t_193 and t_194;

    guardCondition t_195;
    effect
      Sender.state = 6,
      Producer.result = 2,
      Producer.state = 3;

  process Sender_Producer 
    guardBlock
      temp bool t_196 = Sender.state == 5,
      temp bool t_197 = Sender.i == Sender.n,
      temp bool t_198 = t_196 and t_197,
      temp bool t_199 = Producer.state == 2,
      temp bool t_200 = t_198 and t_199;

    guardCondition t_200;
    effect
      Sender.state = 6,
      Producer.result = 3,
      Producer.state = 3;

  process L_Sender 
    guardBlock
      temp bool t_201 = L.state == 1,
      temp bool t_202 = Sender.state == 2,
      temp bool t_203 = t_201 and t_202;

    guardCondition t_203;
    effect
      L.state = 0,
      Sender.state = 4,
      temp byte t_204 = 1 - Sender.ab,
      Sender.ab = t_204;

accepting conditions
  LTL_property.state == 1

