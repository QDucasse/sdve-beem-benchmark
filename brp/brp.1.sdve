byte prod_n = 0;
state {ready(0), start_send(1), wait_result(2), check(3)} Producer.state = 0;
byte Producer.result = 0;
byte Producer.n = 0;
state {ready(0), get_msg(1), check(2), st_error(3)} Consumer.state = 0;
byte Consumer.m = 0;
byte Consumer.n = 0;
state {idle(0), next_frame(1), wait_ack(2), send(3), success(4), q_error(5), ret(6)} Sender.state = 0;
byte Sender.ab = 0;
byte Sender.n = 0;
byte Sender.i = 0;
byte Sender.counter = 0;
state {idle(0), new_file(1), frame_received(2), frame_reported(3), first_safe(4), ret(5)} Receiver.state = 1;
byte Receiver.value = 0;
byte Receiver.exp_ab = 0;
state {ready(0), got_msg(1)} K.state = 0;
byte K.value = 0;
state {ready(0), got_msg(1)} L.state = 0;

  process Producer
    guardBlock
      temp bool t_0 = Producer.state == 0;
    guardCondition t_0;
    effect
      Producer.state = 1,
      prod_n = 1;

  process Producer
    guardBlock
      temp bool t_1 = Producer.state == 0;
    guardCondition t_1;
    effect
      Producer.state = 1,
      prod_n = 2;

  process Producer
    guardBlock
      temp bool t_2 = Producer.state == 0;
    guardCondition t_2;
    effect
      Producer.state = 1,
      prod_n = 3;

  process Producer
    guardBlock
      temp bool t_3 = Producer.state == 0;
    guardCondition t_3;
    effect
      Producer.state = 1,
      prod_n = 4;

  process Producer
    guardBlock
      temp bool t_4 = Producer.state == 0;
    guardCondition t_4;
    effect
      Producer.state = 1,
      prod_n = 5;

  process Producer
    guardBlock
      temp bool t_5 = Producer.state == 3,
      temp bool t_6 = Producer.result == 2,
      temp bool t_7 = Producer.result == 3,
      temp bool t_8 = t_6 or t_7,
      temp bool t_9 = t_5 and t_8;
    guardCondition t_9;
    effect
      Producer.state = 1;

  process Consumer
    guardBlock
      temp bool t_10 = Consumer.state == 1,
      temp bool t_11 = Consumer.m == 4,
      temp bool t_12 = Consumer.m == 5,
      temp bool t_13 = t_11 or t_12,
      temp bool t_14 = t_10 and t_13;
    guardCondition t_14;
    effect
      Consumer.state = 0;

  process Consumer
    guardBlock
      temp bool t_15 = Consumer.state == 1,
      temp bool t_16 = Consumer.m == 2,
      temp bool t_17 = t_15 and t_16;
    guardCondition t_17;
    effect
      Consumer.state = 0,
      Consumer.n = 0;

  process Consumer
    guardBlock
      temp bool t_18 = Consumer.state == 1,
      temp bool t_19 = Consumer.m == 1,
      temp bool t_20 = t_18 and t_19;
    guardCondition t_20;
    effect
      Consumer.state = 2;

  process Consumer
    guardBlock
      temp bool t_21 = Consumer.state == 2,
      temp bool t_22 = Consumer.n != prod_n,
      temp bool t_23 = t_21 and t_22;
    guardCondition t_23;
    effect
      Consumer.state = 3;

  process Sender
    guardBlock
      temp bool t_24 = Sender.state == 1;
    guardCondition t_24;
    effect
      Sender.state = 3,
      Sender.counter = 0;

  process Sender
    guardBlock
      temp bool t_25 = Sender.state == 4,
      temp bool t_26 = Sender.i < Sender.n,
      temp bool t_27 = t_25 and t_26;
    guardCondition t_27;
    effect
      Sender.state = 1,
      temp int t_28 = Sender.i + 1,
      Sender.i = t_28;

  process Receiver
    guardBlock
      temp bool t_29 = Receiver.state == 4;
    guardCondition t_29;
    effect
      Receiver.state = 2,
      temp byte t_30 = Receiver.value and 1,
      Receiver.exp_ab = t_30;

  process Receiver
    guardBlock
      temp bool t_31 = Receiver.state == 0,
      temp byte t_32 = Receiver.value and 2,
      temp bool t_33 = t_32 == 2,
      temp bool t_34 = t_31 and t_33;
    guardCondition t_34;
    effect
      Receiver.state = 5;

  process K_Receiver
    guardBlock
      temp bool t_35 = K.state == 1,
      temp bool t_36 = Receiver.state == 1,
      temp bool t_37 = t_35 and t_36;
    guardCondition t_37;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 4;

  process K_Receiver
    guardBlock
      temp bool t_38 = K.state == 1,
      temp bool t_39 = Receiver.state == 0,
      temp bool t_40 = t_38 and t_39;
    guardCondition t_40;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 2;

  process Sender_Producer
    guardBlock
      temp bool t_41 = Sender.state == 4,
      temp bool t_42 = Sender.i == Sender.n,
      temp bool t_43 = t_41 and t_42,
      temp bool t_44 = Producer.state == 2,
      temp bool t_45 = t_43 and t_44;
    guardCondition t_45;
    effect
      Sender.state = 6,
      Producer.result = 1,
      Producer.state = 3;

  process Sender_Producer
    guardBlock
      temp bool t_46 = Sender.state == 5,
      temp bool t_47 = Sender.i < Sender.n,
      temp bool t_48 = t_46 and t_47,
      temp bool t_49 = Producer.state == 2,
      temp bool t_50 = t_48 and t_49;
    guardCondition t_50;
    effect
      Sender.state = 6,
      Producer.result = 2,
      Producer.state = 3;

  process Sender_Producer
    guardBlock
      temp bool t_51 = Sender.state == 5,
      temp bool t_52 = Sender.i == Sender.n,
      temp bool t_53 = t_51 and t_52,
      temp bool t_54 = Producer.state == 2,
      temp bool t_55 = t_53 and t_54;
    guardCondition t_55;
    effect
      Sender.state = 6,
      Producer.result = 3,
      Producer.state = 3;

  process Producer_Consumer
    guardBlock
      temp bool t_56 = Producer.state == 3,
      temp bool t_57 = Producer.result == 1,
      temp bool t_58 = t_56 and t_57,
      temp bool t_59 = Consumer.state == 2,
      temp bool t_60 = Consumer.n == prod_n,
      temp bool t_61 = t_59 and t_60,
      temp bool t_62 = t_58 and t_61;
    guardCondition t_62;
    effect
      Producer.state = 0,
      Consumer.state = 0,
      Consumer.n = 0;

  process Receiver_Consumer
    guardBlock
      temp bool t_63 = Receiver.state == 2,
      temp byte t_64 = Receiver.value and 1,
      temp bool t_65 = t_64 == Receiver.exp_ab,
      temp byte t_66 = Receiver.value and 2,
      temp bool t_67 = t_66 == 2,
      temp bool t_68 = t_65 and t_67,
      temp bool t_69 = t_63 and t_68,
      temp bool t_70 = Consumer.state == 0,
      temp bool t_71 = t_69 and t_70;
    guardCondition t_71;
    effect
      Receiver.state = 3,
      Consumer.m = 1,
      Consumer.state = 1,
      temp int t_72 = Consumer.n + 1,
      Consumer.n = t_72;

  process Receiver_Consumer
    guardBlock
      temp bool t_73 = Receiver.state == 2,
      temp byte t_74 = Receiver.value and 1,
      temp bool t_75 = t_74 == Receiver.exp_ab,
      temp byte t_76 = Receiver.value and 2,
      temp bool t_77 = t_76 == 0,
      temp bool t_78 = t_75 and t_77,
      temp byte t_79 = Receiver.value and 4,
      temp bool t_80 = t_79 == 0,
      temp bool t_81 = t_78 and t_80,
      temp bool t_82 = t_73 and t_81,
      temp bool t_83 = Consumer.state == 0,
      temp bool t_84 = t_82 and t_83;
    guardCondition t_84;
    effect
      Receiver.state = 3,
      Consumer.m = 5,
      Consumer.state = 1,
      temp int t_85 = Consumer.n + 1,
      Consumer.n = t_85;

  process Receiver_Consumer
    guardBlock
      temp bool t_86 = Receiver.state == 2,
      temp byte t_87 = Receiver.value and 1,
      temp bool t_88 = t_87 == Receiver.exp_ab,
      temp byte t_89 = Receiver.value and 2,
      temp bool t_90 = t_89 == 0,
      temp bool t_91 = t_88 and t_90,
      temp byte t_92 = Receiver.value and 4,
      temp bool t_93 = t_92 == 4,
      temp bool t_94 = t_91 and t_93,
      temp bool t_95 = t_86 and t_94,
      temp bool t_96 = Consumer.state == 0,
      temp bool t_97 = t_95 and t_96;
    guardCondition t_97;
    effect
      Receiver.state = 3,
      Consumer.m = 4,
      Consumer.state = 1,
      temp int t_98 = Consumer.n + 1,
      Consumer.n = t_98;

  process Receiver_Consumer
    guardBlock
      temp bool t_99 = Receiver.state == 0,
      temp bool t_100 = Consumer.state == 0,
      temp bool t_101 = t_99 and t_100;
    guardCondition t_101;
    effect
      Receiver.state = 5,
      Consumer.m = 2,
      Consumer.state = 1,
      temp int t_102 = Consumer.n + 1,
      Consumer.n = t_102;

  process Sender_K
    guardBlock
      temp bool t_103 = Sender.state == 3,
      temp bool t_104 = Sender.i == 1,
      temp bool t_105 = Sender.i == Sender.n,
      temp bool t_106 = t_104 and t_105,
      temp bool t_107 = t_103 and t_106,
      temp bool t_108 = K.state == 0,
      temp bool t_109 = t_107 and t_108;
    guardCondition t_109;
    effect
      Sender.state = 2,
      temp int t_110 = 6 + Sender.ab,
      K.value = t_110,
      K.state = 1;

  process Sender_K
    guardBlock
      temp bool t_111 = Sender.state == 3,
      temp bool t_112 = Sender.i > 1,
      temp bool t_113 = Sender.i == Sender.n,
      temp bool t_114 = t_112 and t_113,
      temp bool t_115 = t_111 and t_114,
      temp bool t_116 = K.state == 0,
      temp bool t_117 = t_115 and t_116;
    guardCondition t_117;
    effect
      Sender.state = 2,
      temp int t_118 = 2 + Sender.ab,
      K.value = t_118,
      K.state = 1;

  process Sender_K
    guardBlock
      temp bool t_119 = Sender.state == 3,
      temp bool t_120 = Sender.i == 1,
      temp bool t_121 = Sender.i < Sender.n,
      temp bool t_122 = t_120 and t_121,
      temp bool t_123 = t_119 and t_122,
      temp bool t_124 = K.state == 0,
      temp bool t_125 = t_123 and t_124;
    guardCondition t_125;
    effect
      Sender.state = 2,
      temp int t_126 = 4 + Sender.ab,
      K.value = t_126,
      K.state = 1;

  process Sender_K
    guardBlock
      temp bool t_127 = Sender.state == 3,
      temp bool t_128 = Sender.i > 1,
      temp bool t_129 = Sender.i < Sender.n,
      temp bool t_130 = t_128 and t_129,
      temp bool t_131 = t_127 and t_130,
      temp bool t_132 = K.state == 0,
      temp bool t_133 = t_131 and t_132;
    guardCondition t_133;
    effect
      Sender.state = 2,
      K.value = Sender.ab,
      K.state = 1;

  process Producer_Sender
    guardBlock
      temp bool t_134 = Producer.state == 1,
      temp bool t_135 = Sender.state == 0,
      temp bool t_136 = t_134 and t_135;
    guardCondition t_136;
    effect
      Producer.state = 2,
      Sender.n = prod_n,
      Sender.state = 1,
      Sender.i = 1;

  process Receiver_L
    guardBlock
      temp bool t_137 = Receiver.state == 2,
      temp byte t_138 = Receiver.value and 1,
      temp bool t_139 = Receiver.exp_ab != t_138,
      temp bool t_140 = t_137 and t_139,
      temp bool t_141 = L.state == 0,
      temp bool t_142 = t_140 and t_141;
    guardCondition t_142;
    effect
      Receiver.state = 0,
      L.state = 1;

  process Receiver_L
    guardBlock
      temp bool t_143 = Receiver.state == 3,
      temp bool t_144 = L.state == 0,
      temp bool t_145 = t_143 and t_144;
    guardCondition t_145;
    effect
      Receiver.state = 0,
      temp int t_146 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_146,
      L.state = 1;

  process K_Sender
    guardBlock
      temp bool t_147 = K.state == 1,
      temp bool t_148 = Sender.state == 2,
      temp bool t_149 = Sender.counter == 3,
      temp bool t_150 = t_148 and t_149,
      temp bool t_151 = t_147 and t_150;
    guardCondition t_151;
    effect
      K.state = 0,
      Sender.state = 5;

  process K_Sender
    guardBlock
      temp bool t_152 = K.state == 1,
      temp bool t_153 = Sender.state == 2,
      temp bool t_154 = Sender.counter < 3,
      temp bool t_155 = t_153 and t_154,
      temp bool t_156 = t_152 and t_155;
    guardCondition t_156;
    effect
      K.state = 0,
      Sender.state = 3,
      temp int t_157 = Sender.counter + 1,
      Sender.counter = t_157;

  process L_Sender
    guardBlock
      temp bool t_158 = L.state == 1,
      temp bool t_159 = Sender.state == 2,
      temp bool t_160 = Sender.counter == 3,
      temp bool t_161 = t_159 and t_160,
      temp bool t_162 = t_158 and t_161;
    guardCondition t_162;
    effect
      L.state = 0,
      Sender.state = 5;

  process L_Sender
    guardBlock
      temp bool t_163 = L.state == 1,
      temp bool t_164 = Sender.state == 2,
      temp bool t_165 = Sender.counter < 3,
      temp bool t_166 = t_164 and t_165,
      temp bool t_167 = t_163 and t_166;
    guardCondition t_167;
    effect
      L.state = 0,
      Sender.state = 3,
      temp int t_168 = Sender.counter + 1,
      Sender.counter = t_168;

  process Sender_Receiver
    guardBlock
      temp bool t_169 = Sender.state == 6,
      temp bool t_170 = Receiver.state == 5,
      temp bool t_171 = t_169 and t_170;
    guardCondition t_171;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Sender_Receiver
    guardBlock
      temp bool t_172 = Sender.state == 6,
      temp bool t_173 = Receiver.state == 1,
      temp bool t_174 = t_172 and t_173;
    guardCondition t_174;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process L_Sender
    guardBlock
      temp bool t_175 = L.state == 1,
      temp bool t_176 = Sender.state == 2,
      temp bool t_177 = t_175 and t_176;
    guardCondition t_177;
    effect
      L.state = 0,
      Sender.state = 4,
      temp int t_178 = 1 - Sender.ab,
      Sender.ab = t_178;
