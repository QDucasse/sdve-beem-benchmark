state {ready(0), start_send(1), wait_result(2), check(3)} Producer.state = 0;
state {ready(0), get_msg(1), check(2), st_error(3)} Consumer.state = 0;
state {idle(0), next_frame(1), wait_ack(2), send(3), success(4), q_error(5), ret(6)} Sender.state = 0;
state {idle(0), new_file(1), frame_received(2), frame_reported(3), first_safe(4), ret(5)} Receiver.state = 1;
state {ready(0), got_msg(1)} K.state = 0;
state {ready(0), got_msg(1)} L.state = 0;
byte prod_n = 0;
byte Producer.result = 0;
byte Producer.n = 0;
byte Consumer.m = 0;
byte Consumer.n = 0;
byte Sender.ab = 0;
byte Sender.n = 0;
byte Sender.i = 0;
byte Sender.counter = 0;
byte Receiver.value = 0;
byte Receiver.exp_ab = 0;
byte K.value = 0;

  process Producer 
    guardBlock
      temp bool t_0 = Producer.state == 0;

    guardCondition t_0;
    effect
      Producer.state = 1,
      prod_n = 1;

  process Producer 
    guardBlock
      temp bool t_1 = Producer.state == 0;

    guardCondition t_1;
    effect
      Producer.state = 1,
      prod_n = 2;

  process Producer 
    guardBlock
      temp bool t_2 = Producer.state == 0;

    guardCondition t_2;
    effect
      Producer.state = 1,
      prod_n = 3;

  process Producer 
    guardBlock
      temp bool t_3 = Producer.state == 0;

    guardCondition t_3;
    effect
      Producer.state = 1,
      prod_n = 4;

  process Producer 
    guardBlock
      temp bool t_4 = Producer.state == 0;

    guardCondition t_4;
    effect
      Producer.state = 1,
      prod_n = 5;

  process Producer 
    guardBlock
      temp bool t_5 = Producer.state == 3,
      temp bool t_6 = Producer.result == 2,
      temp bool t_7 = Producer.result == 3,
      temp bool t_8 = t_6 or t_7,
      temp bool t_9 = t_5 and t_8;

    guardCondition t_9;
    effect
      Producer.state = 1;

  process Consumer 
    guardBlock
      temp bool t_10 = Consumer.state == 1,
      temp bool t_11 = Consumer.m == 4,
      temp bool t_12 = Consumer.m == 5,
      temp bool t_13 = t_11 or t_12,
      temp bool t_14 = t_10 and t_13;

    guardCondition t_14;
    effect
      Consumer.state = 0;

  process Consumer 
    guardBlock
      temp bool t_15 = Consumer.state == 1,
      temp bool t_16 = Consumer.m == 2,
      temp bool t_17 = t_15 and t_16;

    guardCondition t_17;
    effect
      Consumer.state = 0,
      Consumer.n = 0;

  process Consumer 
    guardBlock
      temp bool t_18 = Consumer.state == 1,
      temp bool t_19 = Consumer.m == 1,
      temp bool t_20 = t_18 and t_19;

    guardCondition t_20;
    effect
      Consumer.state = 2;

  process Consumer 
    guardBlock
      temp bool t_21 = Consumer.state == 2,
      temp bool t_22 = Consumer.n != prod_n,
      temp bool t_23 = t_21 and t_22;

    guardCondition t_23;
    effect
      Consumer.state = 3;

  process Sender 
    guardBlock
      temp bool t_24 = Sender.state == 1;

    guardCondition t_24;
    effect
      Sender.state = 3,
      Sender.counter = 0;

  process Sender 
    guardBlock
      temp bool t_25 = Sender.state == 4,
      temp bool t_26 = Sender.i < Sender.n,
      temp bool t_27 = t_25 and t_26;

    guardCondition t_27;
    effect
      Sender.state = 1,
      temp byte t_28 = Sender.i + 1,
      Sender.i = t_28;

  process Receiver 
    guardBlock
      temp bool t_29 = Receiver.state == 4;

    guardCondition t_29;
    effect
      Receiver.state = 2,
      temp byte t_30 = Receiver.value & 1,
      Receiver.exp_ab = t_30;

  process Receiver 
    guardBlock
      temp bool t_31 = Receiver.state == 0,
      temp byte t_32 = Receiver.value & 2,
      temp bool t_33 = t_32 == 2,
      temp bool t_34 = t_31 and t_33;

    guardCondition t_34;
    effect
      Receiver.state = 5;

  process Producer_Consumer 
    guardBlock
      temp bool t_35 = Producer.state == 3,
      temp bool t_36 = Producer.result == 1,
      temp bool t_37 = t_35 and t_36,
      temp bool t_38 = Consumer.state == 2,
      temp bool t_39 = Consumer.n == prod_n,
      temp bool t_40 = t_38 and t_39,
      temp bool t_41 = t_37 and t_40;

    guardCondition t_41;
    effect
      Producer.state = 0,
      Consumer.state = 0,
      Consumer.n = 0;

  process L_Sender 
    guardBlock
      temp bool t_42 = L.state == 1,
      temp bool t_43 = Sender.state == 2,
      temp bool t_44 = t_42 and t_43;

    guardCondition t_44;
    effect
      L.state = 0,
      Sender.state = 4,
      temp byte t_45 = 1 - Sender.ab,
      Sender.ab = t_45;

  process Receiver_Consumer 
    guardBlock
      temp bool t_46 = Receiver.state == 2,
      temp byte t_47 = Receiver.value & 1,
      temp bool t_48 = t_47 == Receiver.exp_ab,
      temp byte t_49 = Receiver.value & 2,
      temp bool t_50 = t_49 == 2,
      temp bool t_51 = t_48 and t_50,
      temp bool t_52 = t_46 and t_51,
      temp bool t_53 = Consumer.state == 0,
      temp bool t_54 = t_52 and t_53;

    guardCondition t_54;
    effect
      Receiver.state = 3,
      Consumer.m = 1,
      Consumer.state = 1,
      temp byte t_55 = Consumer.n + 1,
      Consumer.n = t_55;

  process Receiver_Consumer 
    guardBlock
      temp bool t_56 = Receiver.state == 2,
      temp byte t_57 = Receiver.value & 1,
      temp bool t_58 = t_57 == Receiver.exp_ab,
      temp byte t_59 = Receiver.value & 2,
      temp bool t_60 = t_59 == 0,
      temp bool t_61 = t_58 and t_60,
      temp byte t_62 = Receiver.value & 4,
      temp bool t_63 = t_62 == 0,
      temp bool t_64 = t_61 and t_63,
      temp bool t_65 = t_56 and t_64,
      temp bool t_66 = Consumer.state == 0,
      temp bool t_67 = t_65 and t_66;

    guardCondition t_67;
    effect
      Receiver.state = 3,
      Consumer.m = 5,
      Consumer.state = 1,
      temp byte t_68 = Consumer.n + 1,
      Consumer.n = t_68;

  process Receiver_Consumer 
    guardBlock
      temp bool t_69 = Receiver.state == 2,
      temp byte t_70 = Receiver.value & 1,
      temp bool t_71 = t_70 == Receiver.exp_ab,
      temp byte t_72 = Receiver.value & 2,
      temp bool t_73 = t_72 == 0,
      temp bool t_74 = t_71 and t_73,
      temp byte t_75 = Receiver.value & 4,
      temp bool t_76 = t_75 == 4,
      temp bool t_77 = t_74 and t_76,
      temp bool t_78 = t_69 and t_77,
      temp bool t_79 = Consumer.state == 0,
      temp bool t_80 = t_78 and t_79;

    guardCondition t_80;
    effect
      Receiver.state = 3,
      Consumer.m = 4,
      Consumer.state = 1,
      temp byte t_81 = Consumer.n + 1,
      Consumer.n = t_81;

  process Receiver_Consumer 
    guardBlock
      temp bool t_82 = Receiver.state == 0,
      temp bool t_83 = Consumer.state == 0,
      temp bool t_84 = t_82 and t_83;

    guardCondition t_84;
    effect
      Receiver.state = 5,
      Consumer.m = 2,
      Consumer.state = 1,
      temp byte t_85 = Consumer.n + 1,
      Consumer.n = t_85;

  process Sender_K 
    guardBlock
      temp bool t_86 = Sender.state == 3,
      temp bool t_87 = Sender.i == 1,
      temp bool t_88 = Sender.i == Sender.n,
      temp bool t_89 = t_87 and t_88,
      temp bool t_90 = t_86 and t_89,
      temp bool t_91 = K.state == 0,
      temp bool t_92 = t_90 and t_91;

    guardCondition t_92;
    effect
      Sender.state = 2,
      temp byte t_93 = 6 + Sender.ab,
      K.value = t_93,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_94 = Sender.state == 3,
      temp bool t_95 = Sender.i > 1,
      temp bool t_96 = Sender.i == Sender.n,
      temp bool t_97 = t_95 and t_96,
      temp bool t_98 = t_94 and t_97,
      temp bool t_99 = K.state == 0,
      temp bool t_100 = t_98 and t_99;

    guardCondition t_100;
    effect
      Sender.state = 2,
      temp byte t_101 = 2 + Sender.ab,
      K.value = t_101,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_102 = Sender.state == 3,
      temp bool t_103 = Sender.i == 1,
      temp bool t_104 = Sender.i < Sender.n,
      temp bool t_105 = t_103 and t_104,
      temp bool t_106 = t_102 and t_105,
      temp bool t_107 = K.state == 0,
      temp bool t_108 = t_106 and t_107;

    guardCondition t_108;
    effect
      Sender.state = 2,
      temp byte t_109 = 4 + Sender.ab,
      K.value = t_109,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_110 = Sender.state == 3,
      temp bool t_111 = Sender.i > 1,
      temp bool t_112 = Sender.i < Sender.n,
      temp bool t_113 = t_111 and t_112,
      temp bool t_114 = t_110 and t_113,
      temp bool t_115 = K.state == 0,
      temp bool t_116 = t_114 and t_115;

    guardCondition t_116;
    effect
      Sender.state = 2,
      K.value = Sender.ab,
      K.state = 1;

  process Sender_Receiver 
    guardBlock
      temp bool t_117 = Sender.state == 6,
      temp bool t_118 = Receiver.state == 5,
      temp bool t_119 = t_117 and t_118;

    guardCondition t_119;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Sender_Receiver 
    guardBlock
      temp bool t_120 = Sender.state == 6,
      temp bool t_121 = Receiver.state == 1,
      temp bool t_122 = t_120 and t_121;

    guardCondition t_122;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Receiver_L 
    guardBlock
      temp bool t_123 = Receiver.state == 2,
      temp byte t_124 = Receiver.value & 1,
      temp bool t_125 = Receiver.exp_ab != t_124,
      temp bool t_126 = t_123 and t_125,
      temp bool t_127 = L.state == 0,
      temp bool t_128 = t_126 and t_127;

    guardCondition t_128;
    effect
      Receiver.state = 0,
      L.state = 1;

  process Receiver_L 
    guardBlock
      temp bool t_129 = Receiver.state == 3,
      temp bool t_130 = L.state == 0,
      temp bool t_131 = t_129 and t_130;

    guardCondition t_131;
    effect
      Receiver.state = 0,
      temp byte t_132 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_132,
      L.state = 1;

  process Producer_Sender 
    guardBlock
      temp bool t_133 = Producer.state == 1,
      temp bool t_134 = Sender.state == 0,
      temp bool t_135 = t_133 and t_134;

    guardCondition t_135;
    effect
      Producer.state = 2,
      Sender.n = prod_n,
      Sender.state = 1,
      Sender.i = 1;

  process K_Sender 
    guardBlock
      temp bool t_136 = K.state == 1,
      temp bool t_137 = Sender.state == 2,
      temp bool t_138 = Sender.counter == 3,
      temp bool t_139 = t_137 and t_138,
      temp bool t_140 = t_136 and t_139;

    guardCondition t_140;
    effect
      K.state = 0,
      Sender.state = 5;

  process K_Sender 
    guardBlock
      temp bool t_141 = K.state == 1,
      temp bool t_142 = Sender.state == 2,
      temp bool t_143 = Sender.counter < 3,
      temp bool t_144 = t_142 and t_143,
      temp bool t_145 = t_141 and t_144;

    guardCondition t_145;
    effect
      K.state = 0,
      Sender.state = 3,
      temp byte t_146 = Sender.counter + 1,
      Sender.counter = t_146;

  process L_Sender 
    guardBlock
      temp bool t_147 = L.state == 1,
      temp bool t_148 = Sender.state == 2,
      temp bool t_149 = Sender.counter == 3,
      temp bool t_150 = t_148 and t_149,
      temp bool t_151 = t_147 and t_150;

    guardCondition t_151;
    effect
      L.state = 0,
      Sender.state = 5;

  process L_Sender 
    guardBlock
      temp bool t_152 = L.state == 1,
      temp bool t_153 = Sender.state == 2,
      temp bool t_154 = Sender.counter < 3,
      temp bool t_155 = t_153 and t_154,
      temp bool t_156 = t_152 and t_155;

    guardCondition t_156;
    effect
      L.state = 0,
      Sender.state = 3,
      temp byte t_157 = Sender.counter + 1,
      Sender.counter = t_157;

  process K_Receiver 
    guardBlock
      temp bool t_158 = K.state == 1,
      temp bool t_159 = Receiver.state == 1,
      temp bool t_160 = t_158 and t_159;

    guardCondition t_160;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 4;

  process K_Receiver 
    guardBlock
      temp bool t_161 = K.state == 1,
      temp bool t_162 = Receiver.state == 0,
      temp bool t_163 = t_161 and t_162;

    guardCondition t_163;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 2;

  process Sender_Producer 
    guardBlock
      temp bool t_164 = Sender.state == 4,
      temp bool t_165 = Sender.i == Sender.n,
      temp bool t_166 = t_164 and t_165,
      temp bool t_167 = Producer.state == 2,
      temp bool t_168 = t_166 and t_167;

    guardCondition t_168;
    effect
      Sender.state = 6,
      Producer.result = 1,
      Producer.state = 3;

  process Sender_Producer 
    guardBlock
      temp bool t_169 = Sender.state == 5,
      temp bool t_170 = Sender.i < Sender.n,
      temp bool t_171 = t_169 and t_170,
      temp bool t_172 = Producer.state == 2,
      temp bool t_173 = t_171 and t_172;

    guardCondition t_173;
    effect
      Sender.state = 6,
      Producer.result = 2,
      Producer.state = 3;

  process Sender_Producer 
    guardBlock
      temp bool t_174 = Sender.state == 5,
      temp bool t_175 = Sender.i == Sender.n,
      temp bool t_176 = t_174 and t_175,
      temp bool t_177 = Producer.state == 2,
      temp bool t_178 = t_176 and t_177;

    guardCondition t_178;
    effect
      Sender.state = 6,
      Producer.result = 3,
      Producer.state = 3;


