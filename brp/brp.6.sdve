state {ready(0), start_send(1), wait_result(2), check(3)} Producer.state = 0;
state {ready(0), get_msg(1), check(2), st_error(3)} Consumer.state = 0;
state {idle(0), next_frame(1), wait_ack(2), send(3), success(4), q_error(5), ret(6)} Sender.state = 0;
state {idle(0), new_file(1), frame_received(2), frame_reported(3), first_safe(4), ret(5)} Receiver.state = 1;
state {ready(0), got_msg(1)} K.state = 0;
state {ready(0), got_msg(1)} L.state = 0;
byte prod_n = 0;
byte Producer.result = 0;
byte Producer.n = 0;
byte Consumer.m = 0;
byte Consumer.n = 0;
byte Sender.ab = 0;
byte Sender.n = 0;
byte Sender.i = 0;
byte Sender.counter = 0;
byte Receiver.value = 0;
byte Receiver.exp_ab = 0;
byte K.value = 0;

  process Producer 
    guardBlock
      temp bool t_0 = Producer.state == 0;

    guardCondition t_0;
    effect
      Producer.state = 1,
      prod_n = 1;

  process Producer 
    guardBlock
      temp bool t_1 = Producer.state == 0;

    guardCondition t_1;
    effect
      Producer.state = 1,
      prod_n = 2;

  process Producer 
    guardBlock
      temp bool t_2 = Producer.state == 0;

    guardCondition t_2;
    effect
      Producer.state = 1,
      prod_n = 3;

  process Producer 
    guardBlock
      temp bool t_3 = Producer.state == 0;

    guardCondition t_3;
    effect
      Producer.state = 1,
      prod_n = 4;

  process Producer 
    guardBlock
      temp bool t_4 = Producer.state == 0;

    guardCondition t_4;
    effect
      Producer.state = 1,
      prod_n = 5;

  process Producer 
    guardBlock
      temp bool t_5 = Producer.state == 0;

    guardCondition t_5;
    effect
      Producer.state = 1,
      prod_n = 6;

  process Producer 
    guardBlock
      temp bool t_6 = Producer.state == 0;

    guardCondition t_6;
    effect
      Producer.state = 1,
      prod_n = 7;

  process Producer 
    guardBlock
      temp bool t_7 = Producer.state == 0;

    guardCondition t_7;
    effect
      Producer.state = 1,
      prod_n = 8;

  process Producer 
    guardBlock
      temp bool t_8 = Producer.state == 0;

    guardCondition t_8;
    effect
      Producer.state = 1,
      prod_n = 9;

  process Producer 
    guardBlock
      temp bool t_9 = Producer.state == 0;

    guardCondition t_9;
    effect
      Producer.state = 1,
      prod_n = 10;

  process Producer 
    guardBlock
      temp bool t_10 = Producer.state == 0;

    guardCondition t_10;
    effect
      Producer.state = 1,
      prod_n = 11;

  process Producer 
    guardBlock
      temp bool t_11 = Producer.state == 0;

    guardCondition t_11;
    effect
      Producer.state = 1,
      prod_n = 12;

  process Producer 
    guardBlock
      temp bool t_12 = Producer.state == 0;

    guardCondition t_12;
    effect
      Producer.state = 1,
      prod_n = 13;

  process Producer 
    guardBlock
      temp bool t_13 = Producer.state == 0;

    guardCondition t_13;
    effect
      Producer.state = 1,
      prod_n = 14;

  process Producer 
    guardBlock
      temp bool t_14 = Producer.state == 0;

    guardCondition t_14;
    effect
      Producer.state = 1,
      prod_n = 15;

  process Producer 
    guardBlock
      temp bool t_15 = Producer.state == 0;

    guardCondition t_15;
    effect
      Producer.state = 1,
      prod_n = 16;

  process Producer 
    guardBlock
      temp bool t_16 = Producer.state == 0;

    guardCondition t_16;
    effect
      Producer.state = 1,
      prod_n = 17;

  process Producer 
    guardBlock
      temp bool t_17 = Producer.state == 0;

    guardCondition t_17;
    effect
      Producer.state = 1,
      prod_n = 18;

  process Producer 
    guardBlock
      temp bool t_18 = Producer.state == 0;

    guardCondition t_18;
    effect
      Producer.state = 1,
      prod_n = 19;

  process Producer 
    guardBlock
      temp bool t_19 = Producer.state == 0;

    guardCondition t_19;
    effect
      Producer.state = 1,
      prod_n = 20;

  process Producer 
    guardBlock
      temp bool t_20 = Producer.state == 0;

    guardCondition t_20;
    effect
      Producer.state = 1,
      prod_n = 21;

  process Producer 
    guardBlock
      temp bool t_21 = Producer.state == 0;

    guardCondition t_21;
    effect
      Producer.state = 1,
      prod_n = 22;

  process Producer 
    guardBlock
      temp bool t_22 = Producer.state == 0;

    guardCondition t_22;
    effect
      Producer.state = 1,
      prod_n = 23;

  process Producer 
    guardBlock
      temp bool t_23 = Producer.state == 0;

    guardCondition t_23;
    effect
      Producer.state = 1,
      prod_n = 24;

  process Producer 
    guardBlock
      temp bool t_24 = Producer.state == 0;

    guardCondition t_24;
    effect
      Producer.state = 1,
      prod_n = 25;

  process Producer 
    guardBlock
      temp bool t_25 = Producer.state == 0;

    guardCondition t_25;
    effect
      Producer.state = 1,
      prod_n = 26;

  process Producer 
    guardBlock
      temp bool t_26 = Producer.state == 0;

    guardCondition t_26;
    effect
      Producer.state = 1,
      prod_n = 27;

  process Producer 
    guardBlock
      temp bool t_27 = Producer.state == 0;

    guardCondition t_27;
    effect
      Producer.state = 1,
      prod_n = 28;

  process Producer 
    guardBlock
      temp bool t_28 = Producer.state == 0;

    guardCondition t_28;
    effect
      Producer.state = 1,
      prod_n = 29;

  process Producer 
    guardBlock
      temp bool t_29 = Producer.state == 0;

    guardCondition t_29;
    effect
      Producer.state = 1,
      prod_n = 30;

  process Producer 
    guardBlock
      temp bool t_30 = Producer.state == 3,
      temp bool t_31 = Producer.result == 2,
      temp bool t_32 = Producer.result == 3,
      temp bool t_33 = t_31 or t_32,
      temp bool t_34 = t_30 and t_33;

    guardCondition t_34;
    effect
      Producer.state = 1;

  process Consumer 
    guardBlock
      temp bool t_35 = Consumer.state == 1,
      temp bool t_36 = Consumer.m == 4,
      temp bool t_37 = Consumer.m == 5,
      temp bool t_38 = t_36 or t_37,
      temp bool t_39 = t_35 and t_38;

    guardCondition t_39;
    effect
      Consumer.state = 0;

  process Consumer 
    guardBlock
      temp bool t_40 = Consumer.state == 1,
      temp bool t_41 = Consumer.m == 2,
      temp bool t_42 = t_40 and t_41;

    guardCondition t_42;
    effect
      Consumer.state = 0,
      Consumer.n = 0;

  process Consumer 
    guardBlock
      temp bool t_43 = Consumer.state == 1,
      temp bool t_44 = Consumer.m == 1,
      temp bool t_45 = t_43 and t_44;

    guardCondition t_45;
    effect
      Consumer.state = 2;

  process Consumer 
    guardBlock
      temp bool t_46 = Consumer.state == 2,
      temp bool t_47 = Consumer.n != prod_n,
      temp bool t_48 = t_46 and t_47;

    guardCondition t_48;
    effect
      Consumer.state = 3;

  process Sender 
    guardBlock
      temp bool t_49 = Sender.state == 1;

    guardCondition t_49;
    effect
      Sender.state = 3,
      Sender.counter = 0;

  process Sender 
    guardBlock
      temp bool t_50 = Sender.state == 4,
      temp bool t_51 = Sender.i < Sender.n,
      temp bool t_52 = t_50 and t_51;

    guardCondition t_52;
    effect
      Sender.state = 1,
      temp byte t_53 = Sender.i + 1,
      Sender.i = t_53;

  process Receiver 
    guardBlock
      temp bool t_54 = Receiver.state == 4;

    guardCondition t_54;
    effect
      Receiver.state = 2,
      temp byte t_55 = Receiver.value and 1,
      Receiver.exp_ab = t_55;

  process Receiver 
    guardBlock
      temp bool t_56 = Receiver.state == 0,
      temp byte t_57 = Receiver.value and 2,
      temp bool t_58 = t_57 == 2,
      temp bool t_59 = t_56 and t_58;

    guardCondition t_59;
    effect
      Receiver.state = 5;

  process Receiver_Consumer 
    guardBlock
      temp bool t_60 = Receiver.state == 2,
      temp byte t_61 = Receiver.value and 1,
      temp bool t_62 = t_61 == Receiver.exp_ab,
      temp byte t_63 = Receiver.value and 2,
      temp bool t_64 = t_63 == 2,
      temp bool t_65 = t_62 and t_64,
      temp bool t_66 = t_60 and t_65,
      temp bool t_67 = Consumer.state == 0,
      temp bool t_68 = t_66 and t_67;

    guardCondition t_68;
    effect
      Receiver.state = 3,
      Consumer.m = 1,
      Consumer.state = 1,
      temp byte t_69 = Consumer.n + 1,
      Consumer.n = t_69;

  process Receiver_Consumer 
    guardBlock
      temp bool t_70 = Receiver.state == 2,
      temp byte t_71 = Receiver.value and 1,
      temp bool t_72 = t_71 == Receiver.exp_ab,
      temp byte t_73 = Receiver.value and 2,
      temp bool t_74 = t_73 == 0,
      temp bool t_75 = t_72 and t_74,
      temp byte t_76 = Receiver.value and 4,
      temp bool t_77 = t_76 == 0,
      temp bool t_78 = t_75 and t_77,
      temp bool t_79 = t_70 and t_78,
      temp bool t_80 = Consumer.state == 0,
      temp bool t_81 = t_79 and t_80;

    guardCondition t_81;
    effect
      Receiver.state = 3,
      Consumer.m = 5,
      Consumer.state = 1,
      temp byte t_82 = Consumer.n + 1,
      Consumer.n = t_82;

  process Receiver_Consumer 
    guardBlock
      temp bool t_83 = Receiver.state == 2,
      temp byte t_84 = Receiver.value and 1,
      temp bool t_85 = t_84 == Receiver.exp_ab,
      temp byte t_86 = Receiver.value and 2,
      temp bool t_87 = t_86 == 0,
      temp bool t_88 = t_85 and t_87,
      temp byte t_89 = Receiver.value and 4,
      temp bool t_90 = t_89 == 4,
      temp bool t_91 = t_88 and t_90,
      temp bool t_92 = t_83 and t_91,
      temp bool t_93 = Consumer.state == 0,
      temp bool t_94 = t_92 and t_93;

    guardCondition t_94;
    effect
      Receiver.state = 3,
      Consumer.m = 4,
      Consumer.state = 1,
      temp byte t_95 = Consumer.n + 1,
      Consumer.n = t_95;

  process Receiver_Consumer 
    guardBlock
      temp bool t_96 = Receiver.state == 0,
      temp bool t_97 = Consumer.state == 0,
      temp bool t_98 = t_96 and t_97;

    guardCondition t_98;
    effect
      Receiver.state = 5,
      Consumer.m = 2,
      Consumer.state = 1,
      temp byte t_99 = Consumer.n + 1,
      Consumer.n = t_99;

  process K_Receiver 
    guardBlock
      temp bool t_100 = K.state == 1,
      temp bool t_101 = Receiver.state == 1,
      temp bool t_102 = t_100 and t_101;

    guardCondition t_102;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 4;

  process K_Receiver 
    guardBlock
      temp bool t_103 = K.state == 1,
      temp bool t_104 = Receiver.state == 0,
      temp bool t_105 = t_103 and t_104;

    guardCondition t_105;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 2;

  process Producer_Sender 
    guardBlock
      temp bool t_106 = Producer.state == 1,
      temp bool t_107 = Sender.state == 0,
      temp bool t_108 = t_106 and t_107;

    guardCondition t_108;
    effect
      Producer.state = 2,
      Sender.n = prod_n,
      Sender.state = 1,
      Sender.i = 1;

  process Sender_Receiver 
    guardBlock
      temp bool t_109 = Sender.state == 6,
      temp bool t_110 = Receiver.state == 5,
      temp bool t_111 = t_109 and t_110;

    guardCondition t_111;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Sender_Receiver 
    guardBlock
      temp bool t_112 = Sender.state == 6,
      temp bool t_113 = Receiver.state == 1,
      temp bool t_114 = t_112 and t_113;

    guardCondition t_114;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Receiver_L 
    guardBlock
      temp bool t_115 = Receiver.state == 2,
      temp byte t_116 = Receiver.value and 1,
      temp bool t_117 = Receiver.exp_ab != t_116,
      temp bool t_118 = t_115 and t_117,
      temp bool t_119 = L.state == 0,
      temp bool t_120 = t_118 and t_119;

    guardCondition t_120;
    effect
      Receiver.state = 0,
      L.state = 1;

  process Receiver_L 
    guardBlock
      temp bool t_121 = Receiver.state == 3,
      temp bool t_122 = L.state == 0,
      temp bool t_123 = t_121 and t_122;

    guardCondition t_123;
    effect
      Receiver.state = 0,
      temp byte t_124 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_124,
      L.state = 1;

  process Producer_Consumer 
    guardBlock
      temp bool t_125 = Producer.state == 3,
      temp bool t_126 = Producer.result == 1,
      temp bool t_127 = t_125 and t_126,
      temp bool t_128 = Consumer.state == 2,
      temp bool t_129 = Consumer.n == prod_n,
      temp bool t_130 = t_128 and t_129,
      temp bool t_131 = t_127 and t_130;

    guardCondition t_131;
    effect
      Producer.state = 0,
      Consumer.state = 0;

  process K_Sender 
    guardBlock
      temp bool t_132 = K.state == 1,
      temp bool t_133 = Sender.state == 2,
      temp bool t_134 = Sender.counter == 23,
      temp bool t_135 = t_133 and t_134,
      temp bool t_136 = t_132 and t_135;

    guardCondition t_136;
    effect
      K.state = 0,
      Sender.state = 5;

  process K_Sender 
    guardBlock
      temp bool t_137 = K.state == 1,
      temp bool t_138 = Sender.state == 2,
      temp bool t_139 = Sender.counter < 23,
      temp bool t_140 = t_138 and t_139,
      temp bool t_141 = t_137 and t_140;

    guardCondition t_141;
    effect
      K.state = 0,
      Sender.state = 3,
      temp byte t_142 = Sender.counter + 1,
      Sender.counter = t_142;

  process L_Sender 
    guardBlock
      temp bool t_143 = L.state == 1,
      temp bool t_144 = Sender.state == 2,
      temp bool t_145 = Sender.counter == 23,
      temp bool t_146 = t_144 and t_145,
      temp bool t_147 = t_143 and t_146;

    guardCondition t_147;
    effect
      L.state = 0,
      Sender.state = 5;

  process L_Sender 
    guardBlock
      temp bool t_148 = L.state == 1,
      temp bool t_149 = Sender.state == 2,
      temp bool t_150 = Sender.counter < 23,
      temp bool t_151 = t_149 and t_150,
      temp bool t_152 = t_148 and t_151;

    guardCondition t_152;
    effect
      L.state = 0,
      Sender.state = 3,
      temp byte t_153 = Sender.counter + 1,
      Sender.counter = t_153;

  process L_Sender 
    guardBlock
      temp bool t_154 = L.state == 1,
      temp bool t_155 = Sender.state == 2,
      temp bool t_156 = t_154 and t_155;

    guardCondition t_156;
    effect
      L.state = 0,
      Sender.state = 4,
      temp byte t_157 = 1 - Sender.ab,
      Sender.ab = t_157;

  process Sender_Producer 
    guardBlock
      temp bool t_158 = Sender.state == 4,
      temp bool t_159 = Sender.i == Sender.n,
      temp bool t_160 = t_158 and t_159,
      temp bool t_161 = Producer.state == 2,
      temp bool t_162 = t_160 and t_161;

    guardCondition t_162;
    effect
      Sender.state = 6,
      Producer.result = 1,
      Producer.state = 3;

  process Sender_Producer 
    guardBlock
      temp bool t_163 = Sender.state == 5,
      temp bool t_164 = Sender.i < Sender.n,
      temp bool t_165 = t_163 and t_164,
      temp bool t_166 = Producer.state == 2,
      temp bool t_167 = t_165 and t_166;

    guardCondition t_167;
    effect
      Sender.state = 6,
      Producer.result = 2,
      Producer.state = 3;

  process Sender_Producer 
    guardBlock
      temp bool t_168 = Sender.state == 5,
      temp bool t_169 = Sender.i == Sender.n,
      temp bool t_170 = t_168 and t_169,
      temp bool t_171 = Producer.state == 2,
      temp bool t_172 = t_170 and t_171;

    guardCondition t_172;
    effect
      Sender.state = 6,
      Producer.result = 3,
      Producer.state = 3;

  process Sender_K 
    guardBlock
      temp bool t_173 = Sender.state == 3,
      temp bool t_174 = Sender.i == 1,
      temp bool t_175 = Sender.i == Sender.n,
      temp bool t_176 = t_174 and t_175,
      temp bool t_177 = t_173 and t_176,
      temp bool t_178 = K.state == 0,
      temp bool t_179 = t_177 and t_178;

    guardCondition t_179;
    effect
      Sender.state = 2,
      temp byte t_180 = 6 + Sender.ab,
      K.value = t_180,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_181 = Sender.state == 3,
      temp bool t_182 = Sender.i > 1,
      temp bool t_183 = Sender.i == Sender.n,
      temp bool t_184 = t_182 and t_183,
      temp bool t_185 = t_181 and t_184,
      temp bool t_186 = K.state == 0,
      temp bool t_187 = t_185 and t_186;

    guardCondition t_187;
    effect
      Sender.state = 2,
      temp byte t_188 = 2 + Sender.ab,
      K.value = t_188,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_189 = Sender.state == 3,
      temp bool t_190 = Sender.i == 1,
      temp bool t_191 = Sender.i < Sender.n,
      temp bool t_192 = t_190 and t_191,
      temp bool t_193 = t_189 and t_192,
      temp bool t_194 = K.state == 0,
      temp bool t_195 = t_193 and t_194;

    guardCondition t_195;
    effect
      Sender.state = 2,
      temp byte t_196 = 4 + Sender.ab,
      K.value = t_196,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_197 = Sender.state == 3,
      temp bool t_198 = Sender.i > 1,
      temp bool t_199 = Sender.i < Sender.n,
      temp bool t_200 = t_198 and t_199,
      temp bool t_201 = t_197 and t_200,
      temp bool t_202 = K.state == 0,
      temp bool t_203 = t_201 and t_202;

    guardCondition t_203;
    effect
      Sender.state = 2,
      K.value = Sender.ab,
      K.state = 1;


