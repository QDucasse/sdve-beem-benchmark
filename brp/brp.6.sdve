state {ready(0), start_send(1), wait_result(2), check(3)} Producer.state = 0;
state {ready(0), get_msg(1), check(2), st_error(3)} Consumer.state = 0;
state {idle(0), next_frame(1), wait_ack(2), send(3), success(4), q_error(5), ret(6)} Sender.state = 0;
state {idle(0), new_file(1), frame_received(2), frame_reported(3), first_safe(4), ret(5)} Receiver.state = 1;
state {ready(0), got_msg(1)} K.state = 0;
state {ready(0), got_msg(1)} L.state = 0;
byte prod_n = 0;
byte Producer.result = 0;
byte Producer.n = 0;
byte Consumer.m = 0;
byte Consumer.n = 0;
byte Sender.ab = 0;
byte Sender.n = 0;
byte Sender.i = 0;
byte Sender.counter = 0;
byte Receiver.value = 0;
byte Receiver.exp_ab = 0;
byte K.value = 0;

  process Producer
    guardBlock
      temp bool t_0 = Producer.state == 0;
    guardCondition t_0;
    effect
      Producer.state = 1,
      prod_n = 1;

  process Producer
    guardBlock
      temp bool t_1 = Producer.state == 0;
    guardCondition t_1;
    effect
      Producer.state = 1,
      prod_n = 2;

  process Producer
    guardBlock
      temp bool t_2 = Producer.state == 0;
    guardCondition t_2;
    effect
      Producer.state = 1,
      prod_n = 3;

  process Producer
    guardBlock
      temp bool t_3 = Producer.state == 0;
    guardCondition t_3;
    effect
      Producer.state = 1,
      prod_n = 4;

  process Producer
    guardBlock
      temp bool t_4 = Producer.state == 0;
    guardCondition t_4;
    effect
      Producer.state = 1,
      prod_n = 5;

  process Producer
    guardBlock
      temp bool t_5 = Producer.state == 0;
    guardCondition t_5;
    effect
      Producer.state = 1,
      prod_n = 6;

  process Producer
    guardBlock
      temp bool t_6 = Producer.state == 0;
    guardCondition t_6;
    effect
      Producer.state = 1,
      prod_n = 7;

  process Producer
    guardBlock
      temp bool t_7 = Producer.state == 0;
    guardCondition t_7;
    effect
      Producer.state = 1,
      prod_n = 8;

  process Producer
    guardBlock
      temp bool t_8 = Producer.state == 0;
    guardCondition t_8;
    effect
      Producer.state = 1,
      prod_n = 9;

  process Producer
    guardBlock
      temp bool t_9 = Producer.state == 0;
    guardCondition t_9;
    effect
      Producer.state = 1,
      prod_n = 10;

  process Producer
    guardBlock
      temp bool t_10 = Producer.state == 0;
    guardCondition t_10;
    effect
      Producer.state = 1,
      prod_n = 11;

  process Producer
    guardBlock
      temp bool t_11 = Producer.state == 0;
    guardCondition t_11;
    effect
      Producer.state = 1,
      prod_n = 12;

  process Producer
    guardBlock
      temp bool t_12 = Producer.state == 0;
    guardCondition t_12;
    effect
      Producer.state = 1,
      prod_n = 13;

  process Producer
    guardBlock
      temp bool t_13 = Producer.state == 0;
    guardCondition t_13;
    effect
      Producer.state = 1,
      prod_n = 14;

  process Producer
    guardBlock
      temp bool t_14 = Producer.state == 0;
    guardCondition t_14;
    effect
      Producer.state = 1,
      prod_n = 15;

  process Producer
    guardBlock
      temp bool t_15 = Producer.state == 0;
    guardCondition t_15;
    effect
      Producer.state = 1,
      prod_n = 16;

  process Producer
    guardBlock
      temp bool t_16 = Producer.state == 0;
    guardCondition t_16;
    effect
      Producer.state = 1,
      prod_n = 17;

  process Producer
    guardBlock
      temp bool t_17 = Producer.state == 0;
    guardCondition t_17;
    effect
      Producer.state = 1,
      prod_n = 18;

  process Producer
    guardBlock
      temp bool t_18 = Producer.state == 0;
    guardCondition t_18;
    effect
      Producer.state = 1,
      prod_n = 19;

  process Producer
    guardBlock
      temp bool t_19 = Producer.state == 0;
    guardCondition t_19;
    effect
      Producer.state = 1,
      prod_n = 20;

  process Producer
    guardBlock
      temp bool t_20 = Producer.state == 0;
    guardCondition t_20;
    effect
      Producer.state = 1,
      prod_n = 21;

  process Producer
    guardBlock
      temp bool t_21 = Producer.state == 0;
    guardCondition t_21;
    effect
      Producer.state = 1,
      prod_n = 22;

  process Producer
    guardBlock
      temp bool t_22 = Producer.state == 0;
    guardCondition t_22;
    effect
      Producer.state = 1,
      prod_n = 23;

  process Producer
    guardBlock
      temp bool t_23 = Producer.state == 0;
    guardCondition t_23;
    effect
      Producer.state = 1,
      prod_n = 24;

  process Producer
    guardBlock
      temp bool t_24 = Producer.state == 0;
    guardCondition t_24;
    effect
      Producer.state = 1,
      prod_n = 25;

  process Producer
    guardBlock
      temp bool t_25 = Producer.state == 0;
    guardCondition t_25;
    effect
      Producer.state = 1,
      prod_n = 26;

  process Producer
    guardBlock
      temp bool t_26 = Producer.state == 0;
    guardCondition t_26;
    effect
      Producer.state = 1,
      prod_n = 27;

  process Producer
    guardBlock
      temp bool t_27 = Producer.state == 0;
    guardCondition t_27;
    effect
      Producer.state = 1,
      prod_n = 28;

  process Producer
    guardBlock
      temp bool t_28 = Producer.state == 0;
    guardCondition t_28;
    effect
      Producer.state = 1,
      prod_n = 29;

  process Producer
    guardBlock
      temp bool t_29 = Producer.state == 0;
    guardCondition t_29;
    effect
      Producer.state = 1,
      prod_n = 30;

  process Producer
    guardBlock
      temp bool t_30 = Producer.state == 3,
      temp bool t_31 = Producer.result == 2,
      temp bool t_32 = Producer.result == 3,
      temp bool t_33 = t_31 or t_32,
      temp bool t_34 = t_30 and t_33;
    guardCondition t_34;
    effect
      Producer.state = 1;

  process Consumer
    guardBlock
      temp bool t_35 = Consumer.state == 1,
      temp bool t_36 = Consumer.m == 4,
      temp bool t_37 = Consumer.m == 5,
      temp bool t_38 = t_36 or t_37,
      temp bool t_39 = t_35 and t_38;
    guardCondition t_39;
    effect
      Consumer.state = 0;

  process Consumer
    guardBlock
      temp bool t_40 = Consumer.state == 1,
      temp bool t_41 = Consumer.m == 2,
      temp bool t_42 = t_40 and t_41;
    guardCondition t_42;
    effect
      Consumer.state = 0,
      Consumer.n = 0;

  process Consumer
    guardBlock
      temp bool t_43 = Consumer.state == 1,
      temp bool t_44 = Consumer.m == 1,
      temp bool t_45 = t_43 and t_44;
    guardCondition t_45;
    effect
      Consumer.state = 2;

  process Consumer
    guardBlock
      temp bool t_46 = Consumer.state == 2,
      temp bool t_47 = Consumer.n != prod_n,
      temp bool t_48 = t_46 and t_47;
    guardCondition t_48;
    effect
      Consumer.state = 3;

  process Sender
    guardBlock
      temp bool t_49 = Sender.state == 1;
    guardCondition t_49;
    effect
      Sender.state = 3,
      Sender.counter = 0;

  process Sender
    guardBlock
      temp bool t_50 = Sender.state == 4,
      temp bool t_51 = Sender.i < Sender.n,
      temp bool t_52 = t_50 and t_51;
    guardCondition t_52;
    effect
      Sender.state = 1,
      temp int t_53 = Sender.i + 1,
      Sender.i = t_53;

  process Receiver
    guardBlock
      temp bool t_54 = Receiver.state == 4;
    guardCondition t_54;
    effect
      Receiver.state = 2,
      temp byte t_55 = Receiver.value and 1,
      Receiver.exp_ab = t_55;

  process Receiver
    guardBlock
      temp bool t_56 = Receiver.state == 0,
      temp byte t_57 = Receiver.value and 2,
      temp bool t_58 = t_57 == 2,
      temp bool t_59 = t_56 and t_58;
    guardCondition t_59;
    effect
      Receiver.state = 5;

  process Sender_K
    guardBlock
      temp bool t_60 = Sender.state == 3,
      temp bool t_61 = Sender.i == 1,
      temp bool t_62 = Sender.i == Sender.n,
      temp bool t_63 = t_61 and t_62,
      temp bool t_64 = t_60 and t_63,
      temp bool t_65 = K.state == 0,
      temp bool t_66 = t_64 and t_65;
    guardCondition t_66;
    effect
      Sender.state = 2,
      temp int t_67 = 6 + Sender.ab,
      K.value = t_67,
      K.state = 1;

  process Sender_K
    guardBlock
      temp bool t_68 = Sender.state == 3,
      temp bool t_69 = Sender.i > 1,
      temp bool t_70 = Sender.i == Sender.n,
      temp bool t_71 = t_69 and t_70,
      temp bool t_72 = t_68 and t_71,
      temp bool t_73 = K.state == 0,
      temp bool t_74 = t_72 and t_73;
    guardCondition t_74;
    effect
      Sender.state = 2,
      temp int t_75 = 2 + Sender.ab,
      K.value = t_75,
      K.state = 1;

  process Sender_K
    guardBlock
      temp bool t_76 = Sender.state == 3,
      temp bool t_77 = Sender.i == 1,
      temp bool t_78 = Sender.i < Sender.n,
      temp bool t_79 = t_77 and t_78,
      temp bool t_80 = t_76 and t_79,
      temp bool t_81 = K.state == 0,
      temp bool t_82 = t_80 and t_81;
    guardCondition t_82;
    effect
      Sender.state = 2,
      temp int t_83 = 4 + Sender.ab,
      K.value = t_83,
      K.state = 1;

  process Sender_K
    guardBlock
      temp bool t_84 = Sender.state == 3,
      temp bool t_85 = Sender.i > 1,
      temp bool t_86 = Sender.i < Sender.n,
      temp bool t_87 = t_85 and t_86,
      temp bool t_88 = t_84 and t_87,
      temp bool t_89 = K.state == 0,
      temp bool t_90 = t_88 and t_89;
    guardCondition t_90;
    effect
      Sender.state = 2,
      K.value = Sender.ab,
      K.state = 1;

  process L_Sender
    guardBlock
      temp bool t_91 = L.state == 1,
      temp bool t_92 = Sender.state == 2,
      temp bool t_93 = t_91 and t_92;
    guardCondition t_93;
    effect
      L.state = 0,
      Sender.state = 4,
      temp int t_94 = 1 - Sender.ab,
      Sender.ab = t_94;

  process K_Sender
    guardBlock
      temp bool t_95 = K.state == 1,
      temp bool t_96 = Sender.state == 2,
      temp bool t_97 = Sender.counter == 23,
      temp bool t_98 = t_96 and t_97,
      temp bool t_99 = t_95 and t_98;
    guardCondition t_99;
    effect
      K.state = 0,
      Sender.state = 5;

  process K_Sender
    guardBlock
      temp bool t_100 = K.state == 1,
      temp bool t_101 = Sender.state == 2,
      temp bool t_102 = Sender.counter < 23,
      temp bool t_103 = t_101 and t_102,
      temp bool t_104 = t_100 and t_103;
    guardCondition t_104;
    effect
      K.state = 0,
      Sender.state = 3,
      temp int t_105 = Sender.counter + 1,
      Sender.counter = t_105;

  process L_Sender
    guardBlock
      temp bool t_106 = L.state == 1,
      temp bool t_107 = Sender.state == 2,
      temp bool t_108 = Sender.counter == 23,
      temp bool t_109 = t_107 and t_108,
      temp bool t_110 = t_106 and t_109;
    guardCondition t_110;
    effect
      L.state = 0,
      Sender.state = 5;

  process L_Sender
    guardBlock
      temp bool t_111 = L.state == 1,
      temp bool t_112 = Sender.state == 2,
      temp bool t_113 = Sender.counter < 23,
      temp bool t_114 = t_112 and t_113,
      temp bool t_115 = t_111 and t_114;
    guardCondition t_115;
    effect
      L.state = 0,
      Sender.state = 3,
      temp int t_116 = Sender.counter + 1,
      Sender.counter = t_116;

  process Receiver_Consumer
    guardBlock
      temp bool t_117 = Receiver.state == 2,
      temp byte t_118 = Receiver.value and 1,
      temp bool t_119 = t_118 == Receiver.exp_ab,
      temp byte t_120 = Receiver.value and 2,
      temp bool t_121 = t_120 == 2,
      temp bool t_122 = t_119 and t_121,
      temp bool t_123 = t_117 and t_122,
      temp bool t_124 = Consumer.state == 0,
      temp bool t_125 = t_123 and t_124;
    guardCondition t_125;
    effect
      Receiver.state = 3,
      Consumer.m = 1,
      Consumer.state = 1,
      temp int t_126 = Consumer.n + 1,
      Consumer.n = t_126;

  process Receiver_Consumer
    guardBlock
      temp bool t_127 = Receiver.state == 2,
      temp byte t_128 = Receiver.value and 1,
      temp bool t_129 = t_128 == Receiver.exp_ab,
      temp byte t_130 = Receiver.value and 2,
      temp bool t_131 = t_130 == 0,
      temp bool t_132 = t_129 and t_131,
      temp byte t_133 = Receiver.value and 4,
      temp bool t_134 = t_133 == 0,
      temp bool t_135 = t_132 and t_134,
      temp bool t_136 = t_127 and t_135,
      temp bool t_137 = Consumer.state == 0,
      temp bool t_138 = t_136 and t_137;
    guardCondition t_138;
    effect
      Receiver.state = 3,
      Consumer.m = 5,
      Consumer.state = 1,
      temp int t_139 = Consumer.n + 1,
      Consumer.n = t_139;

  process Receiver_Consumer
    guardBlock
      temp bool t_140 = Receiver.state == 2,
      temp byte t_141 = Receiver.value and 1,
      temp bool t_142 = t_141 == Receiver.exp_ab,
      temp byte t_143 = Receiver.value and 2,
      temp bool t_144 = t_143 == 0,
      temp bool t_145 = t_142 and t_144,
      temp byte t_146 = Receiver.value and 4,
      temp bool t_147 = t_146 == 4,
      temp bool t_148 = t_145 and t_147,
      temp bool t_149 = t_140 and t_148,
      temp bool t_150 = Consumer.state == 0,
      temp bool t_151 = t_149 and t_150;
    guardCondition t_151;
    effect
      Receiver.state = 3,
      Consumer.m = 4,
      Consumer.state = 1,
      temp int t_152 = Consumer.n + 1,
      Consumer.n = t_152;

  process Receiver_Consumer
    guardBlock
      temp bool t_153 = Receiver.state == 0,
      temp bool t_154 = Consumer.state == 0,
      temp bool t_155 = t_153 and t_154;
    guardCondition t_155;
    effect
      Receiver.state = 5,
      Consumer.m = 2,
      Consumer.state = 1,
      temp int t_156 = Consumer.n + 1,
      Consumer.n = t_156;

  process Sender_Producer
    guardBlock
      temp bool t_157 = Sender.state == 4,
      temp bool t_158 = Sender.i == Sender.n,
      temp bool t_159 = t_157 and t_158,
      temp bool t_160 = Producer.state == 2,
      temp bool t_161 = t_159 and t_160;
    guardCondition t_161;
    effect
      Sender.state = 6,
      Producer.result = 1,
      Producer.state = 3;

  process Sender_Producer
    guardBlock
      temp bool t_162 = Sender.state == 5,
      temp bool t_163 = Sender.i < Sender.n,
      temp bool t_164 = t_162 and t_163,
      temp bool t_165 = Producer.state == 2,
      temp bool t_166 = t_164 and t_165;
    guardCondition t_166;
    effect
      Sender.state = 6,
      Producer.result = 2,
      Producer.state = 3;

  process Sender_Producer
    guardBlock
      temp bool t_167 = Sender.state == 5,
      temp bool t_168 = Sender.i == Sender.n,
      temp bool t_169 = t_167 and t_168,
      temp bool t_170 = Producer.state == 2,
      temp bool t_171 = t_169 and t_170;
    guardCondition t_171;
    effect
      Sender.state = 6,
      Producer.result = 3,
      Producer.state = 3;

  process Sender_Receiver
    guardBlock
      temp bool t_172 = Sender.state == 6,
      temp bool t_173 = Receiver.state == 5,
      temp bool t_174 = t_172 and t_173;
    guardCondition t_174;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Sender_Receiver
    guardBlock
      temp bool t_175 = Sender.state == 6,
      temp bool t_176 = Receiver.state == 1,
      temp bool t_177 = t_175 and t_176;
    guardCondition t_177;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Producer_Sender
    guardBlock
      temp bool t_178 = Producer.state == 1,
      temp bool t_179 = Sender.state == 0,
      temp bool t_180 = t_178 and t_179;
    guardCondition t_180;
    effect
      Producer.state = 2,
      Sender.n = prod_n,
      Sender.state = 1,
      Sender.i = 1;

  process K_Receiver
    guardBlock
      temp bool t_181 = K.state == 1,
      temp bool t_182 = Receiver.state == 1,
      temp bool t_183 = t_181 and t_182;
    guardCondition t_183;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 4;

  process K_Receiver
    guardBlock
      temp bool t_184 = K.state == 1,
      temp bool t_185 = Receiver.state == 0,
      temp bool t_186 = t_184 and t_185;
    guardCondition t_186;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 2;

  process Producer_Consumer
    guardBlock
      temp bool t_187 = Producer.state == 3,
      temp bool t_188 = Producer.result == 1,
      temp bool t_189 = t_187 and t_188,
      temp bool t_190 = Consumer.state == 2,
      temp bool t_191 = Consumer.n == prod_n,
      temp bool t_192 = t_190 and t_191,
      temp bool t_193 = t_189 and t_192;
    guardCondition t_193;
    effect
      Producer.state = 0,
      Consumer.state = 0;

  process Receiver_L
    guardBlock
      temp bool t_194 = Receiver.state == 2,
      temp byte t_195 = Receiver.value and 1,
      temp bool t_196 = Receiver.exp_ab != t_195,
      temp bool t_197 = t_194 and t_196,
      temp bool t_198 = L.state == 0,
      temp bool t_199 = t_197 and t_198;
    guardCondition t_199;
    effect
      Receiver.state = 0,
      L.state = 1;

  process Receiver_L
    guardBlock
      temp bool t_200 = Receiver.state == 3,
      temp bool t_201 = L.state == 0,
      temp bool t_202 = t_200 and t_201;
    guardCondition t_202;
    effect
      Receiver.state = 0,
      temp int t_203 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_203,
      L.state = 1;
