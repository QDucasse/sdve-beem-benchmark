state {ready(0), start_send(1), wait_result(2), check(3)} Producer.state = 0;
state {ready(0), get_msg(1), check(2), st_error(3)} Consumer.state = 0;
state {idle(0), next_frame(1), wait_ack(2), send(3), success(4), q_error(5), ret(6)} Sender.state = 0;
state {idle(0), new_file(1), frame_received(2), frame_reported(3), first_safe(4), ret(5)} Receiver.state = 1;
state {ready(0), got_msg(1)} K.state = 0;
state {ready(0), got_msg(1)} L.state = 0;
byte prod_n = 0;
byte Producer.result = 0;
byte Producer.n = 0;
byte Consumer.m = 0;
byte Consumer.n = 0;
byte Sender.ab = 0;
byte Sender.n = 0;
byte Sender.i = 0;
byte Sender.counter = 0;
byte Receiver.value = 0;
byte Receiver.exp_ab = 0;
byte K.value = 0;

  process Producer 
    guardBlock
      temp bool t_0 = Producer.state == 0;

    guardCondition t_0;
    effect
      Producer.state = 1,
      prod_n = 1;

  process Producer 
    guardBlock
      temp bool t_1 = Producer.state == 0;

    guardCondition t_1;
    effect
      Producer.state = 1,
      prod_n = 2;

  process Producer 
    guardBlock
      temp bool t_2 = Producer.state == 0;

    guardCondition t_2;
    effect
      Producer.state = 1,
      prod_n = 3;

  process Producer 
    guardBlock
      temp bool t_3 = Producer.state == 0;

    guardCondition t_3;
    effect
      Producer.state = 1,
      prod_n = 4;

  process Producer 
    guardBlock
      temp bool t_4 = Producer.state == 0;

    guardCondition t_4;
    effect
      Producer.state = 1,
      prod_n = 5;

  process Producer 
    guardBlock
      temp bool t_5 = Producer.state == 0;

    guardCondition t_5;
    effect
      Producer.state = 1,
      prod_n = 6;

  process Producer 
    guardBlock
      temp bool t_6 = Producer.state == 0;

    guardCondition t_6;
    effect
      Producer.state = 1,
      prod_n = 7;

  process Producer 
    guardBlock
      temp bool t_7 = Producer.state == 0;

    guardCondition t_7;
    effect
      Producer.state = 1,
      prod_n = 8;

  process Producer 
    guardBlock
      temp bool t_8 = Producer.state == 0;

    guardCondition t_8;
    effect
      Producer.state = 1,
      prod_n = 9;

  process Producer 
    guardBlock
      temp bool t_9 = Producer.state == 0;

    guardCondition t_9;
    effect
      Producer.state = 1,
      prod_n = 10;

  process Producer 
    guardBlock
      temp bool t_10 = Producer.state == 0;

    guardCondition t_10;
    effect
      Producer.state = 1,
      prod_n = 11;

  process Producer 
    guardBlock
      temp bool t_11 = Producer.state == 0;

    guardCondition t_11;
    effect
      Producer.state = 1,
      prod_n = 12;

  process Producer 
    guardBlock
      temp bool t_12 = Producer.state == 0;

    guardCondition t_12;
    effect
      Producer.state = 1,
      prod_n = 13;

  process Producer 
    guardBlock
      temp bool t_13 = Producer.state == 0;

    guardCondition t_13;
    effect
      Producer.state = 1,
      prod_n = 14;

  process Producer 
    guardBlock
      temp bool t_14 = Producer.state == 0;

    guardCondition t_14;
    effect
      Producer.state = 1,
      prod_n = 15;

  process Producer 
    guardBlock
      temp bool t_15 = Producer.state == 0;

    guardCondition t_15;
    effect
      Producer.state = 1,
      prod_n = 16;

  process Producer 
    guardBlock
      temp bool t_16 = Producer.state == 0;

    guardCondition t_16;
    effect
      Producer.state = 1,
      prod_n = 17;

  process Producer 
    guardBlock
      temp bool t_17 = Producer.state == 0;

    guardCondition t_17;
    effect
      Producer.state = 1,
      prod_n = 18;

  process Producer 
    guardBlock
      temp bool t_18 = Producer.state == 0;

    guardCondition t_18;
    effect
      Producer.state = 1,
      prod_n = 19;

  process Producer 
    guardBlock
      temp bool t_19 = Producer.state == 0;

    guardCondition t_19;
    effect
      Producer.state = 1,
      prod_n = 20;

  process Producer 
    guardBlock
      temp bool t_20 = Producer.state == 3,
      temp bool t_21 = Producer.result == 2,
      temp bool t_22 = Producer.result == 3,
      temp bool t_23 = t_21 or t_22,
      temp bool t_24 = t_20 and t_23;

    guardCondition t_24;
    effect
      Producer.state = 1;

  process Consumer 
    guardBlock
      temp bool t_25 = Consumer.state == 1,
      temp bool t_26 = Consumer.m == 4,
      temp bool t_27 = Consumer.m == 5,
      temp bool t_28 = t_26 or t_27,
      temp bool t_29 = t_25 and t_28;

    guardCondition t_29;
    effect
      Consumer.state = 0;

  process Consumer 
    guardBlock
      temp bool t_30 = Consumer.state == 1,
      temp bool t_31 = Consumer.m == 2,
      temp bool t_32 = t_30 and t_31;

    guardCondition t_32;
    effect
      Consumer.state = 0,
      Consumer.n = 0;

  process Consumer 
    guardBlock
      temp bool t_33 = Consumer.state == 1,
      temp bool t_34 = Consumer.m == 1,
      temp bool t_35 = t_33 and t_34;

    guardCondition t_35;
    effect
      Consumer.state = 2;

  process Consumer 
    guardBlock
      temp bool t_36 = Consumer.state == 2,
      temp bool t_37 = Consumer.n != prod_n,
      temp bool t_38 = t_36 and t_37;

    guardCondition t_38;
    effect
      Consumer.state = 3;

  process Sender 
    guardBlock
      temp bool t_39 = Sender.state == 1;

    guardCondition t_39;
    effect
      Sender.state = 3,
      Sender.counter = 0;

  process Sender 
    guardBlock
      temp bool t_40 = Sender.state == 4,
      temp bool t_41 = Sender.i < Sender.n,
      temp bool t_42 = t_40 and t_41;

    guardCondition t_42;
    effect
      Sender.state = 1,
      temp byte t_43 = Sender.i + 1,
      Sender.i = t_43;

  process Receiver 
    guardBlock
      temp bool t_44 = Receiver.state == 4;

    guardCondition t_44;
    effect
      Receiver.state = 2,
      temp byte t_45 = Receiver.value and 1,
      Receiver.exp_ab = t_45;

  process Receiver 
    guardBlock
      temp bool t_46 = Receiver.state == 0,
      temp byte t_47 = Receiver.value and 2,
      temp bool t_48 = t_47 == 2,
      temp bool t_49 = t_46 and t_48;

    guardCondition t_49;
    effect
      Receiver.state = 5;

  process K_Receiver 
    guardBlock
      temp bool t_50 = K.state == 1,
      temp bool t_51 = Receiver.state == 1,
      temp bool t_52 = t_50 and t_51;

    guardCondition t_52;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 4;

  process K_Receiver 
    guardBlock
      temp bool t_53 = K.state == 1,
      temp bool t_54 = Receiver.state == 0,
      temp bool t_55 = t_53 and t_54;

    guardCondition t_55;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 2;

  process Producer_Sender 
    guardBlock
      temp bool t_56 = Producer.state == 1,
      temp bool t_57 = Sender.state == 0,
      temp bool t_58 = t_56 and t_57;

    guardCondition t_58;
    effect
      Producer.state = 2,
      Sender.n = prod_n,
      Sender.state = 1,
      Sender.i = 1;

  process L_Sender 
    guardBlock
      temp bool t_59 = L.state == 1,
      temp bool t_60 = Sender.state == 2,
      temp bool t_61 = t_59 and t_60;

    guardCondition t_61;
    effect
      L.state = 0,
      Sender.state = 4,
      temp byte t_62 = 1 - Sender.ab,
      Sender.ab = t_62;

  process K_Sender 
    guardBlock
      temp bool t_63 = K.state == 1,
      temp bool t_64 = Sender.state == 2,
      temp bool t_65 = Sender.counter == 30,
      temp bool t_66 = t_64 and t_65,
      temp bool t_67 = t_63 and t_66;

    guardCondition t_67;
    effect
      K.state = 0,
      Sender.state = 5;

  process K_Sender 
    guardBlock
      temp bool t_68 = K.state == 1,
      temp bool t_69 = Sender.state == 2,
      temp bool t_70 = Sender.counter < 30,
      temp bool t_71 = t_69 and t_70,
      temp bool t_72 = t_68 and t_71;

    guardCondition t_72;
    effect
      K.state = 0,
      Sender.state = 3,
      temp byte t_73 = Sender.counter + 1,
      Sender.counter = t_73;

  process L_Sender 
    guardBlock
      temp bool t_74 = L.state == 1,
      temp bool t_75 = Sender.state == 2,
      temp bool t_76 = Sender.counter == 30,
      temp bool t_77 = t_75 and t_76,
      temp bool t_78 = t_74 and t_77;

    guardCondition t_78;
    effect
      L.state = 0,
      Sender.state = 5;

  process L_Sender 
    guardBlock
      temp bool t_79 = L.state == 1,
      temp bool t_80 = Sender.state == 2,
      temp bool t_81 = Sender.counter < 30,
      temp bool t_82 = t_80 and t_81,
      temp bool t_83 = t_79 and t_82;

    guardCondition t_83;
    effect
      L.state = 0,
      Sender.state = 3,
      temp byte t_84 = Sender.counter + 1,
      Sender.counter = t_84;

  process Sender_K 
    guardBlock
      temp bool t_85 = Sender.state == 3,
      temp bool t_86 = Sender.i == 1,
      temp bool t_87 = Sender.i == Sender.n,
      temp bool t_88 = t_86 and t_87,
      temp bool t_89 = t_85 and t_88,
      temp bool t_90 = K.state == 0,
      temp bool t_91 = t_89 and t_90;

    guardCondition t_91;
    effect
      Sender.state = 2,
      temp byte t_92 = 6 + Sender.ab,
      K.value = t_92,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_93 = Sender.state == 3,
      temp bool t_94 = Sender.i > 1,
      temp bool t_95 = Sender.i == Sender.n,
      temp bool t_96 = t_94 and t_95,
      temp bool t_97 = t_93 and t_96,
      temp bool t_98 = K.state == 0,
      temp bool t_99 = t_97 and t_98;

    guardCondition t_99;
    effect
      Sender.state = 2,
      temp byte t_100 = 2 + Sender.ab,
      K.value = t_100,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_101 = Sender.state == 3,
      temp bool t_102 = Sender.i == 1,
      temp bool t_103 = Sender.i < Sender.n,
      temp bool t_104 = t_102 and t_103,
      temp bool t_105 = t_101 and t_104,
      temp bool t_106 = K.state == 0,
      temp bool t_107 = t_105 and t_106;

    guardCondition t_107;
    effect
      Sender.state = 2,
      temp byte t_108 = 4 + Sender.ab,
      K.value = t_108,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_109 = Sender.state == 3,
      temp bool t_110 = Sender.i > 1,
      temp bool t_111 = Sender.i < Sender.n,
      temp bool t_112 = t_110 and t_111,
      temp bool t_113 = t_109 and t_112,
      temp bool t_114 = K.state == 0,
      temp bool t_115 = t_113 and t_114;

    guardCondition t_115;
    effect
      Sender.state = 2,
      K.value = Sender.ab,
      K.state = 1;

  process Sender_Producer 
    guardBlock
      temp bool t_116 = Sender.state == 4,
      temp bool t_117 = Sender.i == Sender.n,
      temp bool t_118 = t_116 and t_117,
      temp bool t_119 = Producer.state == 2,
      temp bool t_120 = t_118 and t_119;

    guardCondition t_120;
    effect
      Sender.state = 6,
      Producer.result = 1,
      Producer.state = 3;

  process Sender_Producer 
    guardBlock
      temp bool t_121 = Sender.state == 5,
      temp bool t_122 = Sender.i < Sender.n,
      temp bool t_123 = t_121 and t_122,
      temp bool t_124 = Producer.state == 2,
      temp bool t_125 = t_123 and t_124;

    guardCondition t_125;
    effect
      Sender.state = 6,
      Producer.result = 2,
      Producer.state = 3;

  process Sender_Producer 
    guardBlock
      temp bool t_126 = Sender.state == 5,
      temp bool t_127 = Sender.i == Sender.n,
      temp bool t_128 = t_126 and t_127,
      temp bool t_129 = Producer.state == 2,
      temp bool t_130 = t_128 and t_129;

    guardCondition t_130;
    effect
      Sender.state = 6,
      Producer.result = 3,
      Producer.state = 3;

  process Sender_Receiver 
    guardBlock
      temp bool t_131 = Sender.state == 6,
      temp bool t_132 = Receiver.state == 5,
      temp bool t_133 = t_131 and t_132;

    guardCondition t_133;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Sender_Receiver 
    guardBlock
      temp bool t_134 = Sender.state == 6,
      temp bool t_135 = Receiver.state == 1,
      temp bool t_136 = t_134 and t_135;

    guardCondition t_136;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Producer_Consumer 
    guardBlock
      temp bool t_137 = Producer.state == 3,
      temp bool t_138 = Producer.result == 1,
      temp bool t_139 = t_137 and t_138,
      temp bool t_140 = Consumer.state == 2,
      temp bool t_141 = Consumer.n == prod_n,
      temp bool t_142 = t_140 and t_141,
      temp bool t_143 = t_139 and t_142;

    guardCondition t_143;
    effect
      Producer.state = 0,
      Consumer.state = 0;

  process Receiver_Consumer 
    guardBlock
      temp bool t_144 = Receiver.state == 2,
      temp byte t_145 = Receiver.value and 1,
      temp bool t_146 = t_145 == Receiver.exp_ab,
      temp byte t_147 = Receiver.value and 2,
      temp bool t_148 = t_147 == 2,
      temp bool t_149 = t_146 and t_148,
      temp bool t_150 = t_144 and t_149,
      temp bool t_151 = Consumer.state == 0,
      temp bool t_152 = t_150 and t_151;

    guardCondition t_152;
    effect
      Receiver.state = 3,
      Consumer.m = 1,
      Consumer.state = 1,
      temp byte t_153 = Consumer.n + 1,
      Consumer.n = t_153;

  process Receiver_Consumer 
    guardBlock
      temp bool t_154 = Receiver.state == 2,
      temp byte t_155 = Receiver.value and 1,
      temp bool t_156 = t_155 == Receiver.exp_ab,
      temp byte t_157 = Receiver.value and 2,
      temp bool t_158 = t_157 == 0,
      temp bool t_159 = t_156 and t_158,
      temp byte t_160 = Receiver.value and 4,
      temp bool t_161 = t_160 == 0,
      temp bool t_162 = t_159 and t_161,
      temp bool t_163 = t_154 and t_162,
      temp bool t_164 = Consumer.state == 0,
      temp bool t_165 = t_163 and t_164;

    guardCondition t_165;
    effect
      Receiver.state = 3,
      Consumer.m = 5,
      Consumer.state = 1,
      temp byte t_166 = Consumer.n + 1,
      Consumer.n = t_166;

  process Receiver_Consumer 
    guardBlock
      temp bool t_167 = Receiver.state == 2,
      temp byte t_168 = Receiver.value and 1,
      temp bool t_169 = t_168 == Receiver.exp_ab,
      temp byte t_170 = Receiver.value and 2,
      temp bool t_171 = t_170 == 0,
      temp bool t_172 = t_169 and t_171,
      temp byte t_173 = Receiver.value and 4,
      temp bool t_174 = t_173 == 4,
      temp bool t_175 = t_172 and t_174,
      temp bool t_176 = t_167 and t_175,
      temp bool t_177 = Consumer.state == 0,
      temp bool t_178 = t_176 and t_177;

    guardCondition t_178;
    effect
      Receiver.state = 3,
      Consumer.m = 4,
      Consumer.state = 1,
      temp byte t_179 = Consumer.n + 1,
      Consumer.n = t_179;

  process Receiver_Consumer 
    guardBlock
      temp bool t_180 = Receiver.state == 0,
      temp bool t_181 = Consumer.state == 0,
      temp bool t_182 = t_180 and t_181;

    guardCondition t_182;
    effect
      Receiver.state = 5,
      Consumer.m = 2,
      Consumer.state = 1,
      temp byte t_183 = Consumer.n + 1,
      Consumer.n = t_183;

  process Receiver_L 
    guardBlock
      temp bool t_184 = Receiver.state == 2,
      temp byte t_185 = Receiver.value and 1,
      temp bool t_186 = Receiver.exp_ab != t_185,
      temp bool t_187 = t_184 and t_186,
      temp bool t_188 = L.state == 0,
      temp bool t_189 = t_187 and t_188;

    guardCondition t_189;
    effect
      Receiver.state = 0,
      L.state = 1;

  process Receiver_L 
    guardBlock
      temp bool t_190 = Receiver.state == 3,
      temp bool t_191 = L.state == 0,
      temp bool t_192 = t_190 and t_191;

    guardCondition t_192;
    effect
      Receiver.state = 0,
      temp byte t_193 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_193,
      L.state = 1;


