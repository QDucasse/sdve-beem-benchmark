state {ready(0), start_send(1), wait_result(2), check(3)} Producer.state = 0;
state {ready(0), get_msg(1), check(2), st_error(3)} Consumer.state = 0;
state {idle(0), next_frame(1), wait_ack(2), send(3), success(4), q_error(5), ret(6)} Sender.state = 0;
state {idle(0), new_file(1), frame_received(2), frame_reported(3), first_safe(4), ret(5)} Receiver.state = 1;
state {ready(0), got_msg(1)} K.state = 0;
state {ready(0), got_msg(1)} L.state = 0;
state {q1(0), q2(1)} LTL_property.state = 0;
byte prod_n = 0;
byte Producer.result = 0;
byte Producer.n = 0;
byte Consumer.m = 0;
byte Consumer.n = 0;
byte Sender.ab = 0;
byte Sender.n = 0;
byte Sender.i = 0;
byte Sender.counter = 0;
byte Receiver.value = 0;
byte Receiver.exp_ab = 0;
byte K.value = 0;

  process Producer 
    guardBlock
      temp bool t_0 = Producer.state == 0;

    guardCondition t_0;
    effect
      Producer.state = 1,
      prod_n = 1;

  process Producer 
    guardBlock
      temp bool t_1 = Producer.state == 0;

    guardCondition t_1;
    effect
      Producer.state = 1,
      prod_n = 2;

  process Producer 
    guardBlock
      temp bool t_2 = Producer.state == 0;

    guardCondition t_2;
    effect
      Producer.state = 1,
      prod_n = 3;

  process Producer 
    guardBlock
      temp bool t_3 = Producer.state == 0;

    guardCondition t_3;
    effect
      Producer.state = 1,
      prod_n = 4;

  process Producer 
    guardBlock
      temp bool t_4 = Producer.state == 0;

    guardCondition t_4;
    effect
      Producer.state = 1,
      prod_n = 5;

  process Producer 
    guardBlock
      temp bool t_5 = Producer.state == 3,
      temp bool t_6 = Producer.result == 2,
      temp bool t_7 = Producer.result == 3,
      temp bool t_8 = t_6 or t_7,
      temp bool t_9 = t_5 and t_8;

    guardCondition t_9;
    effect
      Producer.state = 1;

  process Consumer 
    guardBlock
      temp bool t_10 = Consumer.state == 1,
      temp bool t_11 = Consumer.m == 4,
      temp bool t_12 = Consumer.m == 5,
      temp bool t_13 = t_11 or t_12,
      temp bool t_14 = t_10 and t_13;

    guardCondition t_14;
    effect
      Consumer.state = 0;

  process Consumer 
    guardBlock
      temp bool t_15 = Consumer.state == 1,
      temp bool t_16 = Consumer.m == 2,
      temp bool t_17 = t_15 and t_16;

    guardCondition t_17;
    effect
      Consumer.state = 0,
      Consumer.n = 0;

  process Consumer 
    guardBlock
      temp bool t_18 = Consumer.state == 1,
      temp bool t_19 = Consumer.m == 1,
      temp bool t_20 = t_18 and t_19;

    guardCondition t_20;
    effect
      Consumer.state = 2;

  process Consumer 
    guardBlock
      temp bool t_21 = Consumer.state == 2,
      temp bool t_22 = Consumer.n != prod_n,
      temp bool t_23 = t_21 and t_22;

    guardCondition t_23;
    effect
      Consumer.state = 3;

  process Sender 
    guardBlock
      temp bool t_24 = Sender.state == 1;

    guardCondition t_24;
    effect
      Sender.state = 3,
      Sender.counter = 0;

  process Sender 
    guardBlock
      temp bool t_25 = Sender.state == 4,
      temp bool t_26 = Sender.i < Sender.n,
      temp bool t_27 = t_25 and t_26;

    guardCondition t_27;
    effect
      Sender.state = 1,
      temp byte t_28 = Sender.i + 1,
      Sender.i = t_28;

  process Receiver 
    guardBlock
      temp bool t_29 = Receiver.state == 4;

    guardCondition t_29;
    effect
      Receiver.state = 2,
      temp byte t_30 = Receiver.value & 1,
      Receiver.exp_ab = t_30;

  process Receiver 
    guardBlock
      temp bool t_31 = Receiver.state == 0,
      temp byte t_32 = Receiver.value & 2,
      temp bool t_33 = t_32 == 2,
      temp bool t_34 = t_31 and t_33;

    guardCondition t_34;
    effect
      Receiver.state = 5;

  process LTL_property 
    guardBlock
      temp bool t_35 = LTL_property.state == 0;

    guardCondition t_35;
    effect
      LTL_property.state = 0;

  process LTL_property 
    guardBlock
      temp bool t_36 = LTL_property.state == 0,
      temp bool t_37 = Producer.state == 2,
      temp bool t_38 = Producer.state == 0,
      temp bool t_39 = not t_38,
      temp bool t_40 = t_37 and t_39,
      temp bool t_41 = t_36 and t_40;

    guardCondition t_41;
    effect
      LTL_property.state = 1;

  process LTL_property 
    guardBlock
      temp bool t_42 = LTL_property.state == 1,
      temp bool t_43 = Producer.state == 0,
      temp bool t_44 = not t_43,
      temp bool t_45 = t_42 and t_44;

    guardCondition t_45;
    effect
      LTL_property.state = 1;

  process Producer_Consumer 
    guardBlock
      temp bool t_46 = Producer.state == 3,
      temp bool t_47 = Producer.result == 1,
      temp bool t_48 = t_46 and t_47,
      temp bool t_49 = Consumer.state == 2,
      temp bool t_50 = Consumer.n == prod_n,
      temp bool t_51 = t_49 and t_50,
      temp bool t_52 = t_48 and t_51;

    guardCondition t_52;
    effect
      Producer.state = 0,
      Consumer.state = 0,
      Consumer.n = 0;

  process Receiver_Consumer 
    guardBlock
      temp bool t_53 = Receiver.state == 2,
      temp byte t_54 = Receiver.value & 1,
      temp bool t_55 = t_54 == Receiver.exp_ab,
      temp byte t_56 = Receiver.value & 2,
      temp bool t_57 = t_56 == 2,
      temp bool t_58 = t_55 and t_57,
      temp bool t_59 = t_53 and t_58,
      temp bool t_60 = Consumer.state == 0,
      temp bool t_61 = t_59 and t_60;

    guardCondition t_61;
    effect
      Receiver.state = 3,
      Consumer.m = 1,
      Consumer.state = 1,
      temp byte t_62 = Consumer.n + 1,
      Consumer.n = t_62;

  process Receiver_Consumer 
    guardBlock
      temp bool t_63 = Receiver.state == 2,
      temp byte t_64 = Receiver.value & 1,
      temp bool t_65 = t_64 == Receiver.exp_ab,
      temp byte t_66 = Receiver.value & 2,
      temp bool t_67 = t_66 == 0,
      temp bool t_68 = t_65 and t_67,
      temp byte t_69 = Receiver.value & 4,
      temp bool t_70 = t_69 == 0,
      temp bool t_71 = t_68 and t_70,
      temp bool t_72 = t_63 and t_71,
      temp bool t_73 = Consumer.state == 0,
      temp bool t_74 = t_72 and t_73;

    guardCondition t_74;
    effect
      Receiver.state = 3,
      Consumer.m = 5,
      Consumer.state = 1,
      temp byte t_75 = Consumer.n + 1,
      Consumer.n = t_75;

  process Receiver_Consumer 
    guardBlock
      temp bool t_76 = Receiver.state == 2,
      temp byte t_77 = Receiver.value & 1,
      temp bool t_78 = t_77 == Receiver.exp_ab,
      temp byte t_79 = Receiver.value & 2,
      temp bool t_80 = t_79 == 0,
      temp bool t_81 = t_78 and t_80,
      temp byte t_82 = Receiver.value & 4,
      temp bool t_83 = t_82 == 4,
      temp bool t_84 = t_81 and t_83,
      temp bool t_85 = t_76 and t_84,
      temp bool t_86 = Consumer.state == 0,
      temp bool t_87 = t_85 and t_86;

    guardCondition t_87;
    effect
      Receiver.state = 3,
      Consumer.m = 4,
      Consumer.state = 1,
      temp byte t_88 = Consumer.n + 1,
      Consumer.n = t_88;

  process Receiver_Consumer 
    guardBlock
      temp bool t_89 = Receiver.state == 0,
      temp bool t_90 = Consumer.state == 0,
      temp bool t_91 = t_89 and t_90;

    guardCondition t_91;
    effect
      Receiver.state = 5,
      Consumer.m = 2,
      Consumer.state = 1,
      temp byte t_92 = Consumer.n + 1,
      Consumer.n = t_92;

  process L_Sender 
    guardBlock
      temp bool t_93 = L.state == 1,
      temp bool t_94 = Sender.state == 2,
      temp bool t_95 = t_93 and t_94;

    guardCondition t_95;
    effect
      L.state = 0,
      Sender.state = 4,
      temp byte t_96 = 1 - Sender.ab,
      Sender.ab = t_96;

  process Producer_Sender 
    guardBlock
      temp bool t_97 = Producer.state == 1,
      temp bool t_98 = Sender.state == 0,
      temp bool t_99 = t_97 and t_98;

    guardCondition t_99;
    effect
      Producer.state = 2,
      Sender.n = prod_n,
      Sender.state = 1,
      Sender.i = 1;

  process Sender_Producer 
    guardBlock
      temp bool t_100 = Sender.state == 4,
      temp bool t_101 = Sender.i == Sender.n,
      temp bool t_102 = t_100 and t_101,
      temp bool t_103 = Producer.state == 2,
      temp bool t_104 = t_102 and t_103;

    guardCondition t_104;
    effect
      Sender.state = 6,
      Producer.result = 1,
      Producer.state = 3;

  process Sender_Producer 
    guardBlock
      temp bool t_105 = Sender.state == 5,
      temp bool t_106 = Sender.i < Sender.n,
      temp bool t_107 = t_105 and t_106,
      temp bool t_108 = Producer.state == 2,
      temp bool t_109 = t_107 and t_108;

    guardCondition t_109;
    effect
      Sender.state = 6,
      Producer.result = 2,
      Producer.state = 3;

  process Sender_Producer 
    guardBlock
      temp bool t_110 = Sender.state == 5,
      temp bool t_111 = Sender.i == Sender.n,
      temp bool t_112 = t_110 and t_111,
      temp bool t_113 = Producer.state == 2,
      temp bool t_114 = t_112 and t_113;

    guardCondition t_114;
    effect
      Sender.state = 6,
      Producer.result = 3,
      Producer.state = 3;

  process Sender_K 
    guardBlock
      temp bool t_115 = Sender.state == 3,
      temp bool t_116 = Sender.i == 1,
      temp bool t_117 = Sender.i == Sender.n,
      temp bool t_118 = t_116 and t_117,
      temp bool t_119 = t_115 and t_118,
      temp bool t_120 = K.state == 0,
      temp bool t_121 = t_119 and t_120;

    guardCondition t_121;
    effect
      Sender.state = 2,
      temp byte t_122 = 6 + Sender.ab,
      K.value = t_122,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_123 = Sender.state == 3,
      temp bool t_124 = Sender.i > 1,
      temp bool t_125 = Sender.i == Sender.n,
      temp bool t_126 = t_124 and t_125,
      temp bool t_127 = t_123 and t_126,
      temp bool t_128 = K.state == 0,
      temp bool t_129 = t_127 and t_128;

    guardCondition t_129;
    effect
      Sender.state = 2,
      temp byte t_130 = 2 + Sender.ab,
      K.value = t_130,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_131 = Sender.state == 3,
      temp bool t_132 = Sender.i == 1,
      temp bool t_133 = Sender.i < Sender.n,
      temp bool t_134 = t_132 and t_133,
      temp bool t_135 = t_131 and t_134,
      temp bool t_136 = K.state == 0,
      temp bool t_137 = t_135 and t_136;

    guardCondition t_137;
    effect
      Sender.state = 2,
      temp byte t_138 = 4 + Sender.ab,
      K.value = t_138,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_139 = Sender.state == 3,
      temp bool t_140 = Sender.i > 1,
      temp bool t_141 = Sender.i < Sender.n,
      temp bool t_142 = t_140 and t_141,
      temp bool t_143 = t_139 and t_142,
      temp bool t_144 = K.state == 0,
      temp bool t_145 = t_143 and t_144;

    guardCondition t_145;
    effect
      Sender.state = 2,
      K.value = Sender.ab,
      K.state = 1;

  process K_Receiver 
    guardBlock
      temp bool t_146 = K.state == 1,
      temp bool t_147 = Receiver.state == 1,
      temp bool t_148 = t_146 and t_147;

    guardCondition t_148;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 4;

  process K_Receiver 
    guardBlock
      temp bool t_149 = K.state == 1,
      temp bool t_150 = Receiver.state == 0,
      temp bool t_151 = t_149 and t_150;

    guardCondition t_151;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 2;

  process Receiver_L 
    guardBlock
      temp bool t_152 = Receiver.state == 2,
      temp byte t_153 = Receiver.value & 1,
      temp bool t_154 = Receiver.exp_ab != t_153,
      temp bool t_155 = t_152 and t_154,
      temp bool t_156 = L.state == 0,
      temp bool t_157 = t_155 and t_156;

    guardCondition t_157;
    effect
      Receiver.state = 0,
      L.state = 1;

  process Receiver_L 
    guardBlock
      temp bool t_158 = Receiver.state == 3,
      temp bool t_159 = L.state == 0,
      temp bool t_160 = t_158 and t_159;

    guardCondition t_160;
    effect
      Receiver.state = 0,
      temp byte t_161 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_161,
      L.state = 1;

  process K_Sender 
    guardBlock
      temp bool t_162 = K.state == 1,
      temp bool t_163 = Sender.state == 2,
      temp bool t_164 = Sender.counter == 3,
      temp bool t_165 = t_163 and t_164,
      temp bool t_166 = t_162 and t_165;

    guardCondition t_166;
    effect
      K.state = 0,
      Sender.state = 5;

  process K_Sender 
    guardBlock
      temp bool t_167 = K.state == 1,
      temp bool t_168 = Sender.state == 2,
      temp bool t_169 = Sender.counter < 3,
      temp bool t_170 = t_168 and t_169,
      temp bool t_171 = t_167 and t_170;

    guardCondition t_171;
    effect
      K.state = 0,
      Sender.state = 3,
      temp byte t_172 = Sender.counter + 1,
      Sender.counter = t_172;

  process L_Sender 
    guardBlock
      temp bool t_173 = L.state == 1,
      temp bool t_174 = Sender.state == 2,
      temp bool t_175 = Sender.counter == 3,
      temp bool t_176 = t_174 and t_175,
      temp bool t_177 = t_173 and t_176;

    guardCondition t_177;
    effect
      L.state = 0,
      Sender.state = 5;

  process L_Sender 
    guardBlock
      temp bool t_178 = L.state == 1,
      temp bool t_179 = Sender.state == 2,
      temp bool t_180 = Sender.counter < 3,
      temp bool t_181 = t_179 and t_180,
      temp bool t_182 = t_178 and t_181;

    guardCondition t_182;
    effect
      L.state = 0,
      Sender.state = 3,
      temp byte t_183 = Sender.counter + 1,
      Sender.counter = t_183;

  process Sender_Receiver 
    guardBlock
      temp bool t_184 = Sender.state == 6,
      temp bool t_185 = Receiver.state == 5,
      temp bool t_186 = t_184 and t_185;

    guardCondition t_186;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Sender_Receiver 
    guardBlock
      temp bool t_187 = Sender.state == 6,
      temp bool t_188 = Receiver.state == 1,
      temp bool t_189 = t_187 and t_188;

    guardCondition t_189;
    effect
      Sender.state = 0,
      Receiver.state = 1;

accepting conditions
  LTL_property.state == 1

