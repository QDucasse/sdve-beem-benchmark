state {ready(0), start_send(1), wait_result(2), check(3)} Producer.state = 0;
state {ready(0), get_msg(1), check(2), st_error(3)} Consumer.state = 0;
state {idle(0), next_frame(1), wait_ack(2), send(3), success(4), q_error(5), ret(6)} Sender.state = 0;
state {idle(0), new_file(1), frame_received(2), frame_reported(3), first_safe(4), ret(5)} Receiver.state = 1;
state {ready(0), got_msg(1)} K.state = 0;
state {ready(0), got_msg(1)} L.state = 0;
byte prod_n = 0;
byte Producer.result = 0;
byte Producer.n = 0;
byte Consumer.m = 0;
byte Consumer.n = 0;
byte Sender.ab = 0;
byte Sender.n = 0;
byte Sender.i = 0;
byte Sender.counter = 0;
byte Receiver.value = 0;
byte Receiver.exp_ab = 0;
byte K.value = 0;

  process Producer 
    guardBlock
      temp bool t_0 = Producer.state == 0;

    guardCondition t_0;
    effect
      Producer.state = 1,
      prod_n = 1;

  process Producer 
    guardBlock
      temp bool t_1 = Producer.state == 0;

    guardCondition t_1;
    effect
      Producer.state = 1,
      prod_n = 2;

  process Producer 
    guardBlock
      temp bool t_2 = Producer.state == 0;

    guardCondition t_2;
    effect
      Producer.state = 1,
      prod_n = 3;

  process Producer 
    guardBlock
      temp bool t_3 = Producer.state == 0;

    guardCondition t_3;
    effect
      Producer.state = 1,
      prod_n = 4;

  process Producer 
    guardBlock
      temp bool t_4 = Producer.state == 0;

    guardCondition t_4;
    effect
      Producer.state = 1,
      prod_n = 5;

  process Producer 
    guardBlock
      temp bool t_5 = Producer.state == 0;

    guardCondition t_5;
    effect
      Producer.state = 1,
      prod_n = 6;

  process Producer 
    guardBlock
      temp bool t_6 = Producer.state == 0;

    guardCondition t_6;
    effect
      Producer.state = 1,
      prod_n = 7;

  process Producer 
    guardBlock
      temp bool t_7 = Producer.state == 0;

    guardCondition t_7;
    effect
      Producer.state = 1,
      prod_n = 8;

  process Producer 
    guardBlock
      temp bool t_8 = Producer.state == 0;

    guardCondition t_8;
    effect
      Producer.state = 1,
      prod_n = 9;

  process Producer 
    guardBlock
      temp bool t_9 = Producer.state == 0;

    guardCondition t_9;
    effect
      Producer.state = 1,
      prod_n = 10;

  process Producer 
    guardBlock
      temp bool t_10 = Producer.state == 0;

    guardCondition t_10;
    effect
      Producer.state = 1,
      prod_n = 11;

  process Producer 
    guardBlock
      temp bool t_11 = Producer.state == 0;

    guardCondition t_11;
    effect
      Producer.state = 1,
      prod_n = 12;

  process Producer 
    guardBlock
      temp bool t_12 = Producer.state == 0;

    guardCondition t_12;
    effect
      Producer.state = 1,
      prod_n = 13;

  process Producer 
    guardBlock
      temp bool t_13 = Producer.state == 0;

    guardCondition t_13;
    effect
      Producer.state = 1,
      prod_n = 14;

  process Producer 
    guardBlock
      temp bool t_14 = Producer.state == 0;

    guardCondition t_14;
    effect
      Producer.state = 1,
      prod_n = 15;

  process Producer 
    guardBlock
      temp bool t_15 = Producer.state == 0;

    guardCondition t_15;
    effect
      Producer.state = 1,
      prod_n = 16;

  process Producer 
    guardBlock
      temp bool t_16 = Producer.state == 0;

    guardCondition t_16;
    effect
      Producer.state = 1,
      prod_n = 17;

  process Producer 
    guardBlock
      temp bool t_17 = Producer.state == 0;

    guardCondition t_17;
    effect
      Producer.state = 1,
      prod_n = 18;

  process Producer 
    guardBlock
      temp bool t_18 = Producer.state == 0;

    guardCondition t_18;
    effect
      Producer.state = 1,
      prod_n = 19;

  process Producer 
    guardBlock
      temp bool t_19 = Producer.state == 0;

    guardCondition t_19;
    effect
      Producer.state = 1,
      prod_n = 20;

  process Producer 
    guardBlock
      temp bool t_20 = Producer.state == 3,
      temp bool t_21 = Producer.result == 2,
      temp bool t_22 = Producer.result == 3,
      temp bool t_23 = t_21 or t_22,
      temp bool t_24 = t_20 and t_23;

    guardCondition t_24;
    effect
      Producer.state = 1;

  process Consumer 
    guardBlock
      temp bool t_25 = Consumer.state == 1,
      temp bool t_26 = Consumer.m == 4,
      temp bool t_27 = Consumer.m == 5,
      temp bool t_28 = t_26 or t_27,
      temp bool t_29 = t_25 and t_28;

    guardCondition t_29;
    effect
      Consumer.state = 0;

  process Consumer 
    guardBlock
      temp bool t_30 = Consumer.state == 1,
      temp bool t_31 = Consumer.m == 2,
      temp bool t_32 = t_30 and t_31;

    guardCondition t_32;
    effect
      Consumer.state = 0,
      Consumer.n = 0;

  process Consumer 
    guardBlock
      temp bool t_33 = Consumer.state == 1,
      temp bool t_34 = Consumer.m == 1,
      temp bool t_35 = t_33 and t_34;

    guardCondition t_35;
    effect
      Consumer.state = 2;

  process Consumer 
    guardBlock
      temp bool t_36 = Consumer.state == 2,
      temp bool t_37 = Consumer.n != prod_n,
      temp bool t_38 = t_36 and t_37;

    guardCondition t_38;
    effect
      Consumer.state = 3;

  process Sender 
    guardBlock
      temp bool t_39 = Sender.state == 1;

    guardCondition t_39;
    effect
      Sender.state = 3,
      Sender.counter = 0;

  process Sender 
    guardBlock
      temp bool t_40 = Sender.state == 4,
      temp bool t_41 = Sender.i < Sender.n,
      temp bool t_42 = t_40 and t_41;

    guardCondition t_42;
    effect
      Sender.state = 1,
      temp byte t_43 = Sender.i + 1,
      Sender.i = t_43;

  process Receiver 
    guardBlock
      temp bool t_44 = Receiver.state == 4;

    guardCondition t_44;
    effect
      Receiver.state = 2,
      temp byte t_45 = Receiver.value & 1,
      Receiver.exp_ab = t_45;

  process Receiver 
    guardBlock
      temp bool t_46 = Receiver.state == 0,
      temp byte t_47 = Receiver.value & 2,
      temp bool t_48 = t_47 == 2,
      temp bool t_49 = t_46 and t_48;

    guardCondition t_49;
    effect
      Receiver.state = 5;

  process Sender_Producer 
    guardBlock
      temp bool t_50 = Sender.state == 4,
      temp bool t_51 = Sender.i == Sender.n,
      temp bool t_52 = t_50 and t_51,
      temp bool t_53 = Producer.state == 2,
      temp bool t_54 = t_52 and t_53;

    guardCondition t_54;
    effect
      Sender.state = 6,
      Producer.result = 1,
      Producer.state = 3;

  process Sender_Producer 
    guardBlock
      temp bool t_55 = Sender.state == 5,
      temp bool t_56 = Sender.i < Sender.n,
      temp bool t_57 = t_55 and t_56,
      temp bool t_58 = Producer.state == 2,
      temp bool t_59 = t_57 and t_58;

    guardCondition t_59;
    effect
      Sender.state = 6,
      Producer.result = 2,
      Producer.state = 3;

  process Sender_Producer 
    guardBlock
      temp bool t_60 = Sender.state == 5,
      temp bool t_61 = Sender.i == Sender.n,
      temp bool t_62 = t_60 and t_61,
      temp bool t_63 = Producer.state == 2,
      temp bool t_64 = t_62 and t_63;

    guardCondition t_64;
    effect
      Sender.state = 6,
      Producer.result = 3,
      Producer.state = 3;

  process Producer_Sender 
    guardBlock
      temp bool t_65 = Producer.state == 1,
      temp bool t_66 = Sender.state == 0,
      temp bool t_67 = t_65 and t_66;

    guardCondition t_67;
    effect
      Producer.state = 2,
      Sender.n = prod_n,
      Sender.state = 1,
      Sender.i = 1;

  process Receiver_Consumer 
    guardBlock
      temp bool t_68 = Receiver.state == 2,
      temp byte t_69 = Receiver.value & 1,
      temp bool t_70 = t_69 == Receiver.exp_ab,
      temp byte t_71 = Receiver.value & 2,
      temp bool t_72 = t_71 == 2,
      temp bool t_73 = t_70 and t_72,
      temp bool t_74 = t_68 and t_73,
      temp bool t_75 = Consumer.state == 0,
      temp bool t_76 = t_74 and t_75;

    guardCondition t_76;
    effect
      Receiver.state = 3,
      Consumer.m = 1,
      Consumer.state = 1,
      temp byte t_77 = Consumer.n + 1,
      Consumer.n = t_77;

  process Receiver_Consumer 
    guardBlock
      temp bool t_78 = Receiver.state == 2,
      temp byte t_79 = Receiver.value & 1,
      temp bool t_80 = t_79 == Receiver.exp_ab,
      temp byte t_81 = Receiver.value & 2,
      temp bool t_82 = t_81 == 0,
      temp bool t_83 = t_80 and t_82,
      temp byte t_84 = Receiver.value & 4,
      temp bool t_85 = t_84 == 0,
      temp bool t_86 = t_83 and t_85,
      temp bool t_87 = t_78 and t_86,
      temp bool t_88 = Consumer.state == 0,
      temp bool t_89 = t_87 and t_88;

    guardCondition t_89;
    effect
      Receiver.state = 3,
      Consumer.m = 5,
      Consumer.state = 1,
      temp byte t_90 = Consumer.n + 1,
      Consumer.n = t_90;

  process Receiver_Consumer 
    guardBlock
      temp bool t_91 = Receiver.state == 2,
      temp byte t_92 = Receiver.value & 1,
      temp bool t_93 = t_92 == Receiver.exp_ab,
      temp byte t_94 = Receiver.value & 2,
      temp bool t_95 = t_94 == 0,
      temp bool t_96 = t_93 and t_95,
      temp byte t_97 = Receiver.value & 4,
      temp bool t_98 = t_97 == 4,
      temp bool t_99 = t_96 and t_98,
      temp bool t_100 = t_91 and t_99,
      temp bool t_101 = Consumer.state == 0,
      temp bool t_102 = t_100 and t_101;

    guardCondition t_102;
    effect
      Receiver.state = 3,
      Consumer.m = 4,
      Consumer.state = 1,
      temp byte t_103 = Consumer.n + 1,
      Consumer.n = t_103;

  process Receiver_Consumer 
    guardBlock
      temp bool t_104 = Receiver.state == 0,
      temp bool t_105 = Consumer.state == 0,
      temp bool t_106 = t_104 and t_105;

    guardCondition t_106;
    effect
      Receiver.state = 5,
      Consumer.m = 2,
      Consumer.state = 1,
      temp byte t_107 = Consumer.n + 1,
      Consumer.n = t_107;

  process Sender_Receiver 
    guardBlock
      temp bool t_108 = Sender.state == 6,
      temp bool t_109 = Receiver.state == 5,
      temp bool t_110 = t_108 and t_109;

    guardCondition t_110;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Sender_Receiver 
    guardBlock
      temp bool t_111 = Sender.state == 6,
      temp bool t_112 = Receiver.state == 1,
      temp bool t_113 = t_111 and t_112;

    guardCondition t_113;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process K_Sender 
    guardBlock
      temp bool t_114 = K.state == 1,
      temp bool t_115 = Sender.state == 2,
      temp bool t_116 = Sender.counter == 20,
      temp bool t_117 = t_115 and t_116,
      temp bool t_118 = t_114 and t_117;

    guardCondition t_118;
    effect
      K.state = 0,
      Sender.state = 5;

  process K_Sender 
    guardBlock
      temp bool t_119 = K.state == 1,
      temp bool t_120 = Sender.state == 2,
      temp bool t_121 = Sender.counter < 20,
      temp bool t_122 = t_120 and t_121,
      temp bool t_123 = t_119 and t_122;

    guardCondition t_123;
    effect
      K.state = 0,
      Sender.state = 3,
      temp byte t_124 = Sender.counter + 1,
      Sender.counter = t_124;

  process L_Sender 
    guardBlock
      temp bool t_125 = L.state == 1,
      temp bool t_126 = Sender.state == 2,
      temp bool t_127 = Sender.counter == 20,
      temp bool t_128 = t_126 and t_127,
      temp bool t_129 = t_125 and t_128;

    guardCondition t_129;
    effect
      L.state = 0,
      Sender.state = 5;

  process L_Sender 
    guardBlock
      temp bool t_130 = L.state == 1,
      temp bool t_131 = Sender.state == 2,
      temp bool t_132 = Sender.counter < 20,
      temp bool t_133 = t_131 and t_132,
      temp bool t_134 = t_130 and t_133;

    guardCondition t_134;
    effect
      L.state = 0,
      Sender.state = 3,
      temp byte t_135 = Sender.counter + 1,
      Sender.counter = t_135;

  process K_Receiver 
    guardBlock
      temp bool t_136 = K.state == 1,
      temp bool t_137 = Receiver.state == 1,
      temp bool t_138 = t_136 and t_137;

    guardCondition t_138;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 4;

  process K_Receiver 
    guardBlock
      temp bool t_139 = K.state == 1,
      temp bool t_140 = Receiver.state == 0,
      temp bool t_141 = t_139 and t_140;

    guardCondition t_141;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 2;

  process L_Sender 
    guardBlock
      temp bool t_142 = L.state == 1,
      temp bool t_143 = Sender.state == 2,
      temp bool t_144 = t_142 and t_143;

    guardCondition t_144;
    effect
      L.state = 0,
      Sender.state = 4,
      temp byte t_145 = 1 - Sender.ab,
      Sender.ab = t_145;

  process Sender_K 
    guardBlock
      temp bool t_146 = Sender.state == 3,
      temp bool t_147 = Sender.i == 1,
      temp bool t_148 = Sender.i == Sender.n,
      temp bool t_149 = t_147 and t_148,
      temp bool t_150 = t_146 and t_149,
      temp bool t_151 = K.state == 0,
      temp bool t_152 = t_150 and t_151;

    guardCondition t_152;
    effect
      Sender.state = 2,
      temp byte t_153 = 6 + Sender.ab,
      K.value = t_153,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_154 = Sender.state == 3,
      temp bool t_155 = Sender.i > 1,
      temp bool t_156 = Sender.i == Sender.n,
      temp bool t_157 = t_155 and t_156,
      temp bool t_158 = t_154 and t_157,
      temp bool t_159 = K.state == 0,
      temp bool t_160 = t_158 and t_159;

    guardCondition t_160;
    effect
      Sender.state = 2,
      temp byte t_161 = 2 + Sender.ab,
      K.value = t_161,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_162 = Sender.state == 3,
      temp bool t_163 = Sender.i == 1,
      temp bool t_164 = Sender.i < Sender.n,
      temp bool t_165 = t_163 and t_164,
      temp bool t_166 = t_162 and t_165,
      temp bool t_167 = K.state == 0,
      temp bool t_168 = t_166 and t_167;

    guardCondition t_168;
    effect
      Sender.state = 2,
      temp byte t_169 = 4 + Sender.ab,
      K.value = t_169,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_170 = Sender.state == 3,
      temp bool t_171 = Sender.i > 1,
      temp bool t_172 = Sender.i < Sender.n,
      temp bool t_173 = t_171 and t_172,
      temp bool t_174 = t_170 and t_173,
      temp bool t_175 = K.state == 0,
      temp bool t_176 = t_174 and t_175;

    guardCondition t_176;
    effect
      Sender.state = 2,
      K.value = Sender.ab,
      K.state = 1;

  process Receiver_L 
    guardBlock
      temp bool t_177 = Receiver.state == 2,
      temp byte t_178 = Receiver.value & 1,
      temp bool t_179 = Receiver.exp_ab != t_178,
      temp bool t_180 = t_177 and t_179,
      temp bool t_181 = L.state == 0,
      temp bool t_182 = t_180 and t_181;

    guardCondition t_182;
    effect
      Receiver.state = 0,
      L.state = 1;

  process Receiver_L 
    guardBlock
      temp bool t_183 = Receiver.state == 3,
      temp bool t_184 = L.state == 0,
      temp bool t_185 = t_183 and t_184;

    guardCondition t_185;
    effect
      Receiver.state = 0,
      temp byte t_186 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_186,
      L.state = 1;

  process Producer_Consumer 
    guardBlock
      temp bool t_187 = Producer.state == 3,
      temp bool t_188 = Producer.result == 1,
      temp bool t_189 = t_187 and t_188,
      temp bool t_190 = Consumer.state == 2,
      temp bool t_191 = Consumer.n == prod_n,
      temp bool t_192 = t_190 and t_191,
      temp bool t_193 = t_189 and t_192;

    guardCondition t_193;
    effect
      Producer.state = 0,
      Consumer.state = 0;


