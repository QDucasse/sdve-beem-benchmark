byte prod_n = 0;
state {ready(0), start_send(1), wait_result(2), check(3)} Producer.state = 0;
byte Producer.result = 0;
byte Producer.n = 0;
state {ready(0), get_msg(1), check(2), st_error(3)} Consumer.state = 0;
byte Consumer.m = 0;
byte Consumer.n = 0;
state {idle(0), next_frame(1), wait_ack(2), send(3), success(4), q_error(5), ret(6)} Sender.state = 0;
byte Sender.ab = 0;
byte Sender.n = 0;
byte Sender.i = 0;
byte Sender.counter = 0;
state {idle(0), new_file(1), frame_received(2), frame_reported(3), first_safe(4), ret(5)} Receiver.state = 1;
byte Receiver.value = 0;
byte Receiver.exp_ab = 0;
state {ready(0), got_msg(1)} K.state = 0;
byte K.value = 0;
state {ready(0), got_msg(1)} L.state = 0;
state {q1(0), q2(1)} LTL_property.state = 0;

  process Producer
    guardBlock
      temp bool t_0 = Producer.state == 0;
    guardCondition t_0;
    effect
      Producer.state = 1,
      prod_n = 1;

  process Producer
    guardBlock
      temp bool t_1 = Producer.state == 0;
    guardCondition t_1;
    effect
      Producer.state = 1,
      prod_n = 2;

  process Producer
    guardBlock
      temp bool t_2 = Producer.state == 0;
    guardCondition t_2;
    effect
      Producer.state = 1,
      prod_n = 3;

  process Producer
    guardBlock
      temp bool t_3 = Producer.state == 0;
    guardCondition t_3;
    effect
      Producer.state = 1,
      prod_n = 4;

  process Producer
    guardBlock
      temp bool t_4 = Producer.state == 0;
    guardCondition t_4;
    effect
      Producer.state = 1,
      prod_n = 5;

  process Producer
    guardBlock
      temp bool t_5 = Producer.state == 0;
    guardCondition t_5;
    effect
      Producer.state = 1,
      prod_n = 6;

  process Producer
    guardBlock
      temp bool t_6 = Producer.state == 0;
    guardCondition t_6;
    effect
      Producer.state = 1,
      prod_n = 7;

  process Producer
    guardBlock
      temp bool t_7 = Producer.state == 0;
    guardCondition t_7;
    effect
      Producer.state = 1,
      prod_n = 8;

  process Producer
    guardBlock
      temp bool t_8 = Producer.state == 0;
    guardCondition t_8;
    effect
      Producer.state = 1,
      prod_n = 9;

  process Producer
    guardBlock
      temp bool t_9 = Producer.state == 0;
    guardCondition t_9;
    effect
      Producer.state = 1,
      prod_n = 10;

  process Producer
    guardBlock
      temp bool t_10 = Producer.state == 0;
    guardCondition t_10;
    effect
      Producer.state = 1,
      prod_n = 11;

  process Producer
    guardBlock
      temp bool t_11 = Producer.state == 0;
    guardCondition t_11;
    effect
      Producer.state = 1,
      prod_n = 12;

  process Producer
    guardBlock
      temp bool t_12 = Producer.state == 0;
    guardCondition t_12;
    effect
      Producer.state = 1,
      prod_n = 13;

  process Producer
    guardBlock
      temp bool t_13 = Producer.state == 0;
    guardCondition t_13;
    effect
      Producer.state = 1,
      prod_n = 14;

  process Producer
    guardBlock
      temp bool t_14 = Producer.state == 0;
    guardCondition t_14;
    effect
      Producer.state = 1,
      prod_n = 15;

  process Producer
    guardBlock
      temp bool t_15 = Producer.state == 0;
    guardCondition t_15;
    effect
      Producer.state = 1,
      prod_n = 16;

  process Producer
    guardBlock
      temp bool t_16 = Producer.state == 0;
    guardCondition t_16;
    effect
      Producer.state = 1,
      prod_n = 17;

  process Producer
    guardBlock
      temp bool t_17 = Producer.state == 0;
    guardCondition t_17;
    effect
      Producer.state = 1,
      prod_n = 18;

  process Producer
    guardBlock
      temp bool t_18 = Producer.state == 0;
    guardCondition t_18;
    effect
      Producer.state = 1,
      prod_n = 19;

  process Producer
    guardBlock
      temp bool t_19 = Producer.state == 0;
    guardCondition t_19;
    effect
      Producer.state = 1,
      prod_n = 20;

  process Producer
    guardBlock
      temp bool t_20 = Producer.state == 0;
    guardCondition t_20;
    effect
      Producer.state = 1,
      prod_n = 21;

  process Producer
    guardBlock
      temp bool t_21 = Producer.state == 0;
    guardCondition t_21;
    effect
      Producer.state = 1,
      prod_n = 22;

  process Producer
    guardBlock
      temp bool t_22 = Producer.state == 0;
    guardCondition t_22;
    effect
      Producer.state = 1,
      prod_n = 23;

  process Producer
    guardBlock
      temp bool t_23 = Producer.state == 0;
    guardCondition t_23;
    effect
      Producer.state = 1,
      prod_n = 24;

  process Producer
    guardBlock
      temp bool t_24 = Producer.state == 0;
    guardCondition t_24;
    effect
      Producer.state = 1,
      prod_n = 25;

  process Producer
    guardBlock
      temp bool t_25 = Producer.state == 0;
    guardCondition t_25;
    effect
      Producer.state = 1,
      prod_n = 26;

  process Producer
    guardBlock
      temp bool t_26 = Producer.state == 0;
    guardCondition t_26;
    effect
      Producer.state = 1,
      prod_n = 27;

  process Producer
    guardBlock
      temp bool t_27 = Producer.state == 0;
    guardCondition t_27;
    effect
      Producer.state = 1,
      prod_n = 28;

  process Producer
    guardBlock
      temp bool t_28 = Producer.state == 0;
    guardCondition t_28;
    effect
      Producer.state = 1,
      prod_n = 29;

  process Producer
    guardBlock
      temp bool t_29 = Producer.state == 0;
    guardCondition t_29;
    effect
      Producer.state = 1,
      prod_n = 30;

  process Producer
    guardBlock
      temp bool t_30 = Producer.state == 3,
      temp bool t_31 = Producer.result == 2,
      temp bool t_32 = Producer.result == 3,
      temp bool t_33 = t_31 or t_32,
      temp bool t_34 = t_30 and t_33;
    guardCondition t_34;
    effect
      Producer.state = 1;

  process Consumer
    guardBlock
      temp bool t_35 = Consumer.state == 1,
      temp bool t_36 = Consumer.m == 4,
      temp bool t_37 = Consumer.m == 5,
      temp bool t_38 = t_36 or t_37,
      temp bool t_39 = t_35 and t_38;
    guardCondition t_39;
    effect
      Consumer.state = 0;

  process Consumer
    guardBlock
      temp bool t_40 = Consumer.state == 1,
      temp bool t_41 = Consumer.m == 2,
      temp bool t_42 = t_40 and t_41;
    guardCondition t_42;
    effect
      Consumer.state = 0,
      Consumer.n = 0;

  process Consumer
    guardBlock
      temp bool t_43 = Consumer.state == 1,
      temp bool t_44 = Consumer.m == 1,
      temp bool t_45 = t_43 and t_44;
    guardCondition t_45;
    effect
      Consumer.state = 2;

  process Consumer
    guardBlock
      temp bool t_46 = Consumer.state == 2,
      temp bool t_47 = Consumer.n != prod_n,
      temp bool t_48 = t_46 and t_47;
    guardCondition t_48;
    effect
      Consumer.state = 3;

  process Sender
    guardBlock
      temp bool t_49 = Sender.state == 1;
    guardCondition t_49;
    effect
      Sender.state = 3,
      Sender.counter = 0;

  process Sender
    guardBlock
      temp bool t_50 = Sender.state == 4,
      temp bool t_51 = Sender.i < Sender.n,
      temp bool t_52 = t_50 and t_51;
    guardCondition t_52;
    effect
      Sender.state = 1,
      temp int t_53 = Sender.i + 1,
      Sender.i = t_53;

  process Receiver
    guardBlock
      temp bool t_54 = Receiver.state == 4;
    guardCondition t_54;
    effect
      Receiver.state = 2,
      temp byte t_55 = Receiver.value & 1,
      Receiver.exp_ab = t_55;

  process Receiver
    guardBlock
      temp bool t_56 = Receiver.state == 0,
      temp byte t_57 = Receiver.value & 2,
      temp bool t_58 = t_57 == 2,
      temp bool t_59 = t_56 and t_58;
    guardCondition t_59;
    effect
      Receiver.state = 5;

  process LTL_property
    guardBlock
      temp bool t_60 = LTL_property.state == 0;
    guardCondition t_60;
    effect
      LTL_property.state = 0;

  process LTL_property
    guardBlock
      temp bool t_61 = LTL_property.state == 0,
      temp bool t_62 = Producer.state == 2,
      temp bool t_63 = Producer.state == 3,
      temp bool t_64 = not t_63,
      temp bool t_65 = t_62 and t_64,
      temp bool t_66 = t_61 and t_65;
    guardCondition t_66;
    effect
      LTL_property.state = 1;

  process LTL_property
    guardBlock
      temp bool t_67 = LTL_property.state == 1,
      temp bool t_68 = Producer.state == 3,
      temp bool t_69 = not t_68,
      temp bool t_70 = t_67 and t_69;
    guardCondition t_70;
    effect
      LTL_property.state = 1;

  process Receiver_Consumer
    guardBlock
      temp bool t_71 = Receiver.state == 2,
      temp byte t_72 = Receiver.value & 1,
      temp bool t_73 = t_72 == Receiver.exp_ab,
      temp byte t_74 = Receiver.value & 2,
      temp bool t_75 = t_74 == 2,
      temp bool t_76 = t_73 and t_75,
      temp bool t_77 = t_71 and t_76,
      temp bool t_78 = Consumer.state == 0,
      temp bool t_79 = t_77 and t_78;
    guardCondition t_79;
    effect
      Receiver.state = 3,
      Consumer.m = 1,
      Consumer.state = 1,
      temp int t_80 = Consumer.n + 1,
      Consumer.n = t_80;

  process Receiver_Consumer
    guardBlock
      temp bool t_81 = Receiver.state == 2,
      temp byte t_82 = Receiver.value & 1,
      temp bool t_83 = t_82 == Receiver.exp_ab,
      temp byte t_84 = Receiver.value & 2,
      temp bool t_85 = t_84 == 0,
      temp bool t_86 = t_83 and t_85,
      temp byte t_87 = Receiver.value & 4,
      temp bool t_88 = t_87 == 0,
      temp bool t_89 = t_86 and t_88,
      temp bool t_90 = t_81 and t_89,
      temp bool t_91 = Consumer.state == 0,
      temp bool t_92 = t_90 and t_91;
    guardCondition t_92;
    effect
      Receiver.state = 3,
      Consumer.m = 5,
      Consumer.state = 1,
      temp int t_93 = Consumer.n + 1,
      Consumer.n = t_93;

  process Receiver_Consumer
    guardBlock
      temp bool t_94 = Receiver.state == 2,
      temp byte t_95 = Receiver.value & 1,
      temp bool t_96 = t_95 == Receiver.exp_ab,
      temp byte t_97 = Receiver.value & 2,
      temp bool t_98 = t_97 == 0,
      temp bool t_99 = t_96 and t_98,
      temp byte t_100 = Receiver.value & 4,
      temp bool t_101 = t_100 == 4,
      temp bool t_102 = t_99 and t_101,
      temp bool t_103 = t_94 and t_102,
      temp bool t_104 = Consumer.state == 0,
      temp bool t_105 = t_103 and t_104;
    guardCondition t_105;
    effect
      Receiver.state = 3,
      Consumer.m = 4,
      Consumer.state = 1,
      temp int t_106 = Consumer.n + 1,
      Consumer.n = t_106;

  process Receiver_Consumer
    guardBlock
      temp bool t_107 = Receiver.state == 0,
      temp bool t_108 = Consumer.state == 0,
      temp bool t_109 = t_107 and t_108;
    guardCondition t_109;
    effect
      Receiver.state = 5,
      Consumer.m = 2,
      Consumer.state = 1,
      temp int t_110 = Consumer.n + 1,
      Consumer.n = t_110;

  process Sender_K
    guardBlock
      temp bool t_111 = Sender.state == 3,
      temp bool t_112 = Sender.i == 1,
      temp bool t_113 = Sender.i == Sender.n,
      temp bool t_114 = t_112 and t_113,
      temp bool t_115 = t_111 and t_114,
      temp bool t_116 = K.state == 0,
      temp bool t_117 = t_115 and t_116;
    guardCondition t_117;
    effect
      Sender.state = 2,
      temp int t_118 = 6 + Sender.ab,
      K.value = t_118,
      K.state = 1;

  process Sender_K
    guardBlock
      temp bool t_119 = Sender.state == 3,
      temp bool t_120 = Sender.i > 1,
      temp bool t_121 = Sender.i == Sender.n,
      temp bool t_122 = t_120 and t_121,
      temp bool t_123 = t_119 and t_122,
      temp bool t_124 = K.state == 0,
      temp bool t_125 = t_123 and t_124;
    guardCondition t_125;
    effect
      Sender.state = 2,
      temp int t_126 = 2 + Sender.ab,
      K.value = t_126,
      K.state = 1;

  process Sender_K
    guardBlock
      temp bool t_127 = Sender.state == 3,
      temp bool t_128 = Sender.i == 1,
      temp bool t_129 = Sender.i < Sender.n,
      temp bool t_130 = t_128 and t_129,
      temp bool t_131 = t_127 and t_130,
      temp bool t_132 = K.state == 0,
      temp bool t_133 = t_131 and t_132;
    guardCondition t_133;
    effect
      Sender.state = 2,
      temp int t_134 = 4 + Sender.ab,
      K.value = t_134,
      K.state = 1;

  process Sender_K
    guardBlock
      temp bool t_135 = Sender.state == 3,
      temp bool t_136 = Sender.i > 1,
      temp bool t_137 = Sender.i < Sender.n,
      temp bool t_138 = t_136 and t_137,
      temp bool t_139 = t_135 and t_138,
      temp bool t_140 = K.state == 0,
      temp bool t_141 = t_139 and t_140;
    guardCondition t_141;
    effect
      Sender.state = 2,
      K.value = Sender.ab,
      K.state = 1;

  process K_Sender
    guardBlock
      temp bool t_142 = K.state == 1,
      temp bool t_143 = Sender.state == 2,
      temp bool t_144 = Sender.counter == 23,
      temp bool t_145 = t_143 and t_144,
      temp bool t_146 = t_142 and t_145;
    guardCondition t_146;
    effect
      K.state = 0,
      Sender.state = 5;

  process K_Sender
    guardBlock
      temp bool t_147 = K.state == 1,
      temp bool t_148 = Sender.state == 2,
      temp bool t_149 = Sender.counter < 23,
      temp bool t_150 = t_148 and t_149,
      temp bool t_151 = t_147 and t_150;
    guardCondition t_151;
    effect
      K.state = 0,
      Sender.state = 3,
      temp int t_152 = Sender.counter + 1,
      Sender.counter = t_152;

  process L_Sender
    guardBlock
      temp bool t_153 = L.state == 1,
      temp bool t_154 = Sender.state == 2,
      temp bool t_155 = Sender.counter == 23,
      temp bool t_156 = t_154 and t_155,
      temp bool t_157 = t_153 and t_156;
    guardCondition t_157;
    effect
      L.state = 0,
      Sender.state = 5;

  process L_Sender
    guardBlock
      temp bool t_158 = L.state == 1,
      temp bool t_159 = Sender.state == 2,
      temp bool t_160 = Sender.counter < 23,
      temp bool t_161 = t_159 and t_160,
      temp bool t_162 = t_158 and t_161;
    guardCondition t_162;
    effect
      L.state = 0,
      Sender.state = 3,
      temp int t_163 = Sender.counter + 1,
      Sender.counter = t_163;

  process Producer_Consumer
    guardBlock
      temp bool t_164 = Producer.state == 3,
      temp bool t_165 = Producer.result == 1,
      temp bool t_166 = t_164 and t_165,
      temp bool t_167 = Consumer.state == 2,
      temp bool t_168 = Consumer.n == prod_n,
      temp bool t_169 = t_167 and t_168,
      temp bool t_170 = t_166 and t_169;
    guardCondition t_170;
    effect
      Producer.state = 0,
      Consumer.state = 0;

  process Sender_Receiver
    guardBlock
      temp bool t_171 = Sender.state == 6,
      temp bool t_172 = Receiver.state == 5,
      temp bool t_173 = t_171 and t_172;
    guardCondition t_173;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Sender_Receiver
    guardBlock
      temp bool t_174 = Sender.state == 6,
      temp bool t_175 = Receiver.state == 1,
      temp bool t_176 = t_174 and t_175;
    guardCondition t_176;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Sender_Producer
    guardBlock
      temp bool t_177 = Sender.state == 4,
      temp bool t_178 = Sender.i == Sender.n,
      temp bool t_179 = t_177 and t_178,
      temp bool t_180 = Producer.state == 2,
      temp bool t_181 = t_179 and t_180;
    guardCondition t_181;
    effect
      Sender.state = 6,
      Producer.result = 1,
      Producer.state = 3;

  process Sender_Producer
    guardBlock
      temp bool t_182 = Sender.state == 5,
      temp bool t_183 = Sender.i < Sender.n,
      temp bool t_184 = t_182 and t_183,
      temp bool t_185 = Producer.state == 2,
      temp bool t_186 = t_184 and t_185;
    guardCondition t_186;
    effect
      Sender.state = 6,
      Producer.result = 2,
      Producer.state = 3;

  process Sender_Producer
    guardBlock
      temp bool t_187 = Sender.state == 5,
      temp bool t_188 = Sender.i == Sender.n,
      temp bool t_189 = t_187 and t_188,
      temp bool t_190 = Producer.state == 2,
      temp bool t_191 = t_189 and t_190;
    guardCondition t_191;
    effect
      Sender.state = 6,
      Producer.result = 3,
      Producer.state = 3;

  process K_Receiver
    guardBlock
      temp bool t_192 = K.state == 1,
      temp bool t_193 = Receiver.state == 1,
      temp bool t_194 = t_192 and t_193;
    guardCondition t_194;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 4;

  process K_Receiver
    guardBlock
      temp bool t_195 = K.state == 1,
      temp bool t_196 = Receiver.state == 0,
      temp bool t_197 = t_195 and t_196;
    guardCondition t_197;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 2;

  process L_Sender
    guardBlock
      temp bool t_198 = L.state == 1,
      temp bool t_199 = Sender.state == 2,
      temp bool t_200 = t_198 and t_199;
    guardCondition t_200;
    effect
      L.state = 0,
      Sender.state = 4,
      temp int t_201 = 1 - Sender.ab,
      Sender.ab = t_201;

  process Producer_Sender
    guardBlock
      temp bool t_202 = Producer.state == 1,
      temp bool t_203 = Sender.state == 0,
      temp bool t_204 = t_202 and t_203;
    guardCondition t_204;
    effect
      Producer.state = 2,
      Sender.n = prod_n,
      Sender.state = 1,
      Sender.i = 1;

  process Receiver_L
    guardBlock
      temp bool t_205 = Receiver.state == 2,
      temp byte t_206 = Receiver.value & 1,
      temp bool t_207 = Receiver.exp_ab != t_206,
      temp bool t_208 = t_205 and t_207,
      temp bool t_209 = L.state == 0,
      temp bool t_210 = t_208 and t_209;
    guardCondition t_210;
    effect
      Receiver.state = 0,
      L.state = 1;

  process Receiver_L
    guardBlock
      temp bool t_211 = Receiver.state == 3,
      temp bool t_212 = L.state == 0,
      temp bool t_213 = t_211 and t_212;
    guardCondition t_213;
    effect
      Receiver.state = 0,
      temp int t_214 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_214,
      L.state = 1;
      accepting conditions
      LTL_property.state == 1
