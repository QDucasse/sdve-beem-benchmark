state {ready(0), start_send(1), wait_result(2), check(3)} Producer.state = 0;
state {ready(0), get_msg(1), check(2), st_error(3)} Consumer.state = 0;
state {idle(0), next_frame(1), wait_ack(2), send(3), success(4), q_error(5), ret(6)} Sender.state = 0;
state {idle(0), new_file(1), frame_received(2), frame_reported(3), first_safe(4), ret(5)} Receiver.state = 1;
state {ready(0), got_msg(1)} K.state = 0;
state {ready(0), got_msg(1)} L.state = 0;
state {q1(0), q2(1)} LTL_property.state = 0;
byte prod_n = 0;
byte Producer.result = 0;
byte Producer.n = 0;
byte Consumer.m = 0;
byte Consumer.n = 0;
byte Sender.ab = 0;
byte Sender.n = 0;
byte Sender.i = 0;
byte Sender.counter = 0;
byte Receiver.value = 0;
byte Receiver.exp_ab = 0;
byte K.value = 0;

  process Producer 
    guardBlock
      temp bool t_0 = Producer.state == 0;

    guardCondition t_0;
    effect
      Producer.state = 1,
      prod_n = 1;

  process Producer 
    guardBlock
      temp bool t_1 = Producer.state == 0;

    guardCondition t_1;
    effect
      Producer.state = 1,
      prod_n = 2;

  process Producer 
    guardBlock
      temp bool t_2 = Producer.state == 0;

    guardCondition t_2;
    effect
      Producer.state = 1,
      prod_n = 3;

  process Producer 
    guardBlock
      temp bool t_3 = Producer.state == 0;

    guardCondition t_3;
    effect
      Producer.state = 1,
      prod_n = 4;

  process Producer 
    guardBlock
      temp bool t_4 = Producer.state == 0;

    guardCondition t_4;
    effect
      Producer.state = 1,
      prod_n = 5;

  process Producer 
    guardBlock
      temp bool t_5 = Producer.state == 0;

    guardCondition t_5;
    effect
      Producer.state = 1,
      prod_n = 6;

  process Producer 
    guardBlock
      temp bool t_6 = Producer.state == 0;

    guardCondition t_6;
    effect
      Producer.state = 1,
      prod_n = 7;

  process Producer 
    guardBlock
      temp bool t_7 = Producer.state == 0;

    guardCondition t_7;
    effect
      Producer.state = 1,
      prod_n = 8;

  process Producer 
    guardBlock
      temp bool t_8 = Producer.state == 0;

    guardCondition t_8;
    effect
      Producer.state = 1,
      prod_n = 9;

  process Producer 
    guardBlock
      temp bool t_9 = Producer.state == 0;

    guardCondition t_9;
    effect
      Producer.state = 1,
      prod_n = 10;

  process Producer 
    guardBlock
      temp bool t_10 = Producer.state == 0;

    guardCondition t_10;
    effect
      Producer.state = 1,
      prod_n = 11;

  process Producer 
    guardBlock
      temp bool t_11 = Producer.state == 0;

    guardCondition t_11;
    effect
      Producer.state = 1,
      prod_n = 12;

  process Producer 
    guardBlock
      temp bool t_12 = Producer.state == 0;

    guardCondition t_12;
    effect
      Producer.state = 1,
      prod_n = 13;

  process Producer 
    guardBlock
      temp bool t_13 = Producer.state == 0;

    guardCondition t_13;
    effect
      Producer.state = 1,
      prod_n = 14;

  process Producer 
    guardBlock
      temp bool t_14 = Producer.state == 0;

    guardCondition t_14;
    effect
      Producer.state = 1,
      prod_n = 15;

  process Producer 
    guardBlock
      temp bool t_15 = Producer.state == 0;

    guardCondition t_15;
    effect
      Producer.state = 1,
      prod_n = 16;

  process Producer 
    guardBlock
      temp bool t_16 = Producer.state == 0;

    guardCondition t_16;
    effect
      Producer.state = 1,
      prod_n = 17;

  process Producer 
    guardBlock
      temp bool t_17 = Producer.state == 0;

    guardCondition t_17;
    effect
      Producer.state = 1,
      prod_n = 18;

  process Producer 
    guardBlock
      temp bool t_18 = Producer.state == 0;

    guardCondition t_18;
    effect
      Producer.state = 1,
      prod_n = 19;

  process Producer 
    guardBlock
      temp bool t_19 = Producer.state == 0;

    guardCondition t_19;
    effect
      Producer.state = 1,
      prod_n = 20;

  process Producer 
    guardBlock
      temp bool t_20 = Producer.state == 0;

    guardCondition t_20;
    effect
      Producer.state = 1,
      prod_n = 21;

  process Producer 
    guardBlock
      temp bool t_21 = Producer.state == 0;

    guardCondition t_21;
    effect
      Producer.state = 1,
      prod_n = 22;

  process Producer 
    guardBlock
      temp bool t_22 = Producer.state == 0;

    guardCondition t_22;
    effect
      Producer.state = 1,
      prod_n = 23;

  process Producer 
    guardBlock
      temp bool t_23 = Producer.state == 0;

    guardCondition t_23;
    effect
      Producer.state = 1,
      prod_n = 24;

  process Producer 
    guardBlock
      temp bool t_24 = Producer.state == 0;

    guardCondition t_24;
    effect
      Producer.state = 1,
      prod_n = 25;

  process Producer 
    guardBlock
      temp bool t_25 = Producer.state == 0;

    guardCondition t_25;
    effect
      Producer.state = 1,
      prod_n = 26;

  process Producer 
    guardBlock
      temp bool t_26 = Producer.state == 0;

    guardCondition t_26;
    effect
      Producer.state = 1,
      prod_n = 27;

  process Producer 
    guardBlock
      temp bool t_27 = Producer.state == 0;

    guardCondition t_27;
    effect
      Producer.state = 1,
      prod_n = 28;

  process Producer 
    guardBlock
      temp bool t_28 = Producer.state == 0;

    guardCondition t_28;
    effect
      Producer.state = 1,
      prod_n = 29;

  process Producer 
    guardBlock
      temp bool t_29 = Producer.state == 0;

    guardCondition t_29;
    effect
      Producer.state = 1,
      prod_n = 30;

  process Producer 
    guardBlock
      temp bool t_30 = Producer.state == 3,
      temp bool t_31 = Producer.result == 2,
      temp bool t_32 = Producer.result == 3,
      temp bool t_33 = t_31 or t_32,
      temp bool t_34 = t_30 and t_33;

    guardCondition t_34;
    effect
      Producer.state = 1;

  process Consumer 
    guardBlock
      temp bool t_35 = Consumer.state == 1,
      temp bool t_36 = Consumer.m == 4,
      temp bool t_37 = Consumer.m == 5,
      temp bool t_38 = t_36 or t_37,
      temp bool t_39 = t_35 and t_38;

    guardCondition t_39;
    effect
      Consumer.state = 0;

  process Consumer 
    guardBlock
      temp bool t_40 = Consumer.state == 1,
      temp bool t_41 = Consumer.m == 2,
      temp bool t_42 = t_40 and t_41;

    guardCondition t_42;
    effect
      Consumer.state = 0,
      Consumer.n = 0;

  process Consumer 
    guardBlock
      temp bool t_43 = Consumer.state == 1,
      temp bool t_44 = Consumer.m == 1,
      temp bool t_45 = t_43 and t_44;

    guardCondition t_45;
    effect
      Consumer.state = 2;

  process Consumer 
    guardBlock
      temp bool t_46 = Consumer.state == 2,
      temp bool t_47 = Consumer.n != prod_n,
      temp bool t_48 = t_46 and t_47;

    guardCondition t_48;
    effect
      Consumer.state = 3;

  process Sender 
    guardBlock
      temp bool t_49 = Sender.state == 1;

    guardCondition t_49;
    effect
      Sender.state = 3,
      Sender.counter = 0;

  process Sender 
    guardBlock
      temp bool t_50 = Sender.state == 4,
      temp bool t_51 = Sender.i < Sender.n,
      temp bool t_52 = t_50 and t_51;

    guardCondition t_52;
    effect
      Sender.state = 1,
      temp byte t_53 = Sender.i + 1,
      Sender.i = t_53;

  process Receiver 
    guardBlock
      temp bool t_54 = Receiver.state == 4;

    guardCondition t_54;
    effect
      Receiver.state = 2,
      temp byte t_55 = Receiver.value & 1,
      Receiver.exp_ab = t_55;

  process Receiver 
    guardBlock
      temp bool t_56 = Receiver.state == 0,
      temp byte t_57 = Receiver.value & 2,
      temp bool t_58 = t_57 == 2,
      temp bool t_59 = t_56 and t_58;

    guardCondition t_59;
    effect
      Receiver.state = 5;

  process LTL_property 
    guardBlock
      temp bool t_60 = LTL_property.state == 0;

    guardCondition t_60;
    effect
      LTL_property.state = 0;

  process LTL_property 
    guardBlock
      temp bool t_61 = LTL_property.state == 0,
      temp bool t_62 = Producer.state == 2,
      temp bool t_63 = Producer.state == 3,
      temp bool t_64 = not t_63,
      temp bool t_65 = t_62 and t_64,
      temp bool t_66 = t_61 and t_65;

    guardCondition t_66;
    effect
      LTL_property.state = 1;

  process LTL_property 
    guardBlock
      temp bool t_67 = LTL_property.state == 1,
      temp bool t_68 = Producer.state == 3,
      temp bool t_69 = not t_68,
      temp bool t_70 = t_67 and t_69;

    guardCondition t_70;
    effect
      LTL_property.state = 1;

  process K_Receiver 
    guardBlock
      temp bool t_71 = K.state == 1,
      temp bool t_72 = Receiver.state == 1,
      temp bool t_73 = t_71 and t_72;

    guardCondition t_73;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 4;

  process K_Receiver 
    guardBlock
      temp bool t_74 = K.state == 1,
      temp bool t_75 = Receiver.state == 0,
      temp bool t_76 = t_74 and t_75;

    guardCondition t_76;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 2;

  process L_Sender 
    guardBlock
      temp bool t_77 = L.state == 1,
      temp bool t_78 = Sender.state == 2,
      temp bool t_79 = t_77 and t_78;

    guardCondition t_79;
    effect
      L.state = 0,
      Sender.state = 4,
      temp byte t_80 = 1 - Sender.ab,
      Sender.ab = t_80;

  process Receiver_L 
    guardBlock
      temp bool t_81 = Receiver.state == 2,
      temp byte t_82 = Receiver.value & 1,
      temp bool t_83 = Receiver.exp_ab != t_82,
      temp bool t_84 = t_81 and t_83,
      temp bool t_85 = L.state == 0,
      temp bool t_86 = t_84 and t_85;

    guardCondition t_86;
    effect
      Receiver.state = 0,
      L.state = 1;

  process Receiver_L 
    guardBlock
      temp bool t_87 = Receiver.state == 3,
      temp bool t_88 = L.state == 0,
      temp bool t_89 = t_87 and t_88;

    guardCondition t_89;
    effect
      Receiver.state = 0,
      temp byte t_90 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_90,
      L.state = 1;

  process Sender_Receiver 
    guardBlock
      temp bool t_91 = Sender.state == 6,
      temp bool t_92 = Receiver.state == 5,
      temp bool t_93 = t_91 and t_92;

    guardCondition t_93;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Sender_Receiver 
    guardBlock
      temp bool t_94 = Sender.state == 6,
      temp bool t_95 = Receiver.state == 1,
      temp bool t_96 = t_94 and t_95;

    guardCondition t_96;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Producer_Sender 
    guardBlock
      temp bool t_97 = Producer.state == 1,
      temp bool t_98 = Sender.state == 0,
      temp bool t_99 = t_97 and t_98;

    guardCondition t_99;
    effect
      Producer.state = 2,
      Sender.n = prod_n,
      Sender.state = 1,
      Sender.i = 1;

  process Sender_K 
    guardBlock
      temp bool t_100 = Sender.state == 3,
      temp bool t_101 = Sender.i == 1,
      temp bool t_102 = Sender.i == Sender.n,
      temp bool t_103 = t_101 and t_102,
      temp bool t_104 = t_100 and t_103,
      temp bool t_105 = K.state == 0,
      temp bool t_106 = t_104 and t_105;

    guardCondition t_106;
    effect
      Sender.state = 2,
      temp byte t_107 = 6 + Sender.ab,
      K.value = t_107,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_108 = Sender.state == 3,
      temp bool t_109 = Sender.i > 1,
      temp bool t_110 = Sender.i == Sender.n,
      temp bool t_111 = t_109 and t_110,
      temp bool t_112 = t_108 and t_111,
      temp bool t_113 = K.state == 0,
      temp bool t_114 = t_112 and t_113;

    guardCondition t_114;
    effect
      Sender.state = 2,
      temp byte t_115 = 2 + Sender.ab,
      K.value = t_115,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_116 = Sender.state == 3,
      temp bool t_117 = Sender.i == 1,
      temp bool t_118 = Sender.i < Sender.n,
      temp bool t_119 = t_117 and t_118,
      temp bool t_120 = t_116 and t_119,
      temp bool t_121 = K.state == 0,
      temp bool t_122 = t_120 and t_121;

    guardCondition t_122;
    effect
      Sender.state = 2,
      temp byte t_123 = 4 + Sender.ab,
      K.value = t_123,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_124 = Sender.state == 3,
      temp bool t_125 = Sender.i > 1,
      temp bool t_126 = Sender.i < Sender.n,
      temp bool t_127 = t_125 and t_126,
      temp bool t_128 = t_124 and t_127,
      temp bool t_129 = K.state == 0,
      temp bool t_130 = t_128 and t_129;

    guardCondition t_130;
    effect
      Sender.state = 2,
      K.value = Sender.ab,
      K.state = 1;

  process Sender_Producer 
    guardBlock
      temp bool t_131 = Sender.state == 4,
      temp bool t_132 = Sender.i == Sender.n,
      temp bool t_133 = t_131 and t_132,
      temp bool t_134 = Producer.state == 2,
      temp bool t_135 = t_133 and t_134;

    guardCondition t_135;
    effect
      Sender.state = 6,
      Producer.result = 1,
      Producer.state = 3;

  process Sender_Producer 
    guardBlock
      temp bool t_136 = Sender.state == 5,
      temp bool t_137 = Sender.i < Sender.n,
      temp bool t_138 = t_136 and t_137,
      temp bool t_139 = Producer.state == 2,
      temp bool t_140 = t_138 and t_139;

    guardCondition t_140;
    effect
      Sender.state = 6,
      Producer.result = 2,
      Producer.state = 3;

  process Sender_Producer 
    guardBlock
      temp bool t_141 = Sender.state == 5,
      temp bool t_142 = Sender.i == Sender.n,
      temp bool t_143 = t_141 and t_142,
      temp bool t_144 = Producer.state == 2,
      temp bool t_145 = t_143 and t_144;

    guardCondition t_145;
    effect
      Sender.state = 6,
      Producer.result = 3,
      Producer.state = 3;

  process Receiver_Consumer 
    guardBlock
      temp bool t_146 = Receiver.state == 2,
      temp byte t_147 = Receiver.value & 1,
      temp bool t_148 = t_147 == Receiver.exp_ab,
      temp byte t_149 = Receiver.value & 2,
      temp bool t_150 = t_149 == 2,
      temp bool t_151 = t_148 and t_150,
      temp bool t_152 = t_146 and t_151,
      temp bool t_153 = Consumer.state == 0,
      temp bool t_154 = t_152 and t_153;

    guardCondition t_154;
    effect
      Receiver.state = 3,
      Consumer.m = 1,
      Consumer.state = 1,
      temp byte t_155 = Consumer.n + 1,
      Consumer.n = t_155;

  process Receiver_Consumer 
    guardBlock
      temp bool t_156 = Receiver.state == 2,
      temp byte t_157 = Receiver.value & 1,
      temp bool t_158 = t_157 == Receiver.exp_ab,
      temp byte t_159 = Receiver.value & 2,
      temp bool t_160 = t_159 == 0,
      temp bool t_161 = t_158 and t_160,
      temp byte t_162 = Receiver.value & 4,
      temp bool t_163 = t_162 == 0,
      temp bool t_164 = t_161 and t_163,
      temp bool t_165 = t_156 and t_164,
      temp bool t_166 = Consumer.state == 0,
      temp bool t_167 = t_165 and t_166;

    guardCondition t_167;
    effect
      Receiver.state = 3,
      Consumer.m = 5,
      Consumer.state = 1,
      temp byte t_168 = Consumer.n + 1,
      Consumer.n = t_168;

  process Receiver_Consumer 
    guardBlock
      temp bool t_169 = Receiver.state == 2,
      temp byte t_170 = Receiver.value & 1,
      temp bool t_171 = t_170 == Receiver.exp_ab,
      temp byte t_172 = Receiver.value & 2,
      temp bool t_173 = t_172 == 0,
      temp bool t_174 = t_171 and t_173,
      temp byte t_175 = Receiver.value & 4,
      temp bool t_176 = t_175 == 4,
      temp bool t_177 = t_174 and t_176,
      temp bool t_178 = t_169 and t_177,
      temp bool t_179 = Consumer.state == 0,
      temp bool t_180 = t_178 and t_179;

    guardCondition t_180;
    effect
      Receiver.state = 3,
      Consumer.m = 4,
      Consumer.state = 1,
      temp byte t_181 = Consumer.n + 1,
      Consumer.n = t_181;

  process Receiver_Consumer 
    guardBlock
      temp bool t_182 = Receiver.state == 0,
      temp bool t_183 = Consumer.state == 0,
      temp bool t_184 = t_182 and t_183;

    guardCondition t_184;
    effect
      Receiver.state = 5,
      Consumer.m = 2,
      Consumer.state = 1,
      temp byte t_185 = Consumer.n + 1,
      Consumer.n = t_185;

  process Producer_Consumer 
    guardBlock
      temp bool t_186 = Producer.state == 3,
      temp bool t_187 = Producer.result == 1,
      temp bool t_188 = t_186 and t_187,
      temp bool t_189 = Consumer.state == 2,
      temp bool t_190 = Consumer.n == prod_n,
      temp bool t_191 = t_189 and t_190,
      temp bool t_192 = t_188 and t_191;

    guardCondition t_192;
    effect
      Producer.state = 0,
      Consumer.state = 0;

  process K_Sender 
    guardBlock
      temp bool t_193 = K.state == 1,
      temp bool t_194 = Sender.state == 2,
      temp bool t_195 = Sender.counter == 23,
      temp bool t_196 = t_194 and t_195,
      temp bool t_197 = t_193 and t_196;

    guardCondition t_197;
    effect
      K.state = 0,
      Sender.state = 5;

  process K_Sender 
    guardBlock
      temp bool t_198 = K.state == 1,
      temp bool t_199 = Sender.state == 2,
      temp bool t_200 = Sender.counter < 23,
      temp bool t_201 = t_199 and t_200,
      temp bool t_202 = t_198 and t_201;

    guardCondition t_202;
    effect
      K.state = 0,
      Sender.state = 3,
      temp byte t_203 = Sender.counter + 1,
      Sender.counter = t_203;

  process L_Sender 
    guardBlock
      temp bool t_204 = L.state == 1,
      temp bool t_205 = Sender.state == 2,
      temp bool t_206 = Sender.counter == 23,
      temp bool t_207 = t_205 and t_206,
      temp bool t_208 = t_204 and t_207;

    guardCondition t_208;
    effect
      L.state = 0,
      Sender.state = 5;

  process L_Sender 
    guardBlock
      temp bool t_209 = L.state == 1,
      temp bool t_210 = Sender.state == 2,
      temp bool t_211 = Sender.counter < 23,
      temp bool t_212 = t_210 and t_211,
      temp bool t_213 = t_209 and t_212;

    guardCondition t_213;
    effect
      L.state = 0,
      Sender.state = 3,
      temp byte t_214 = Sender.counter + 1,
      Sender.counter = t_214;

accepting conditions
  LTL_property.state == 1

