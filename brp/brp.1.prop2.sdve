byte prod_n = 0;
state {ready(0), start_send(1), wait_result(2), check(3)} Producer.state = 0;
byte Producer.result = 0;
byte Producer.n = 0;
state {ready(0), get_msg(1), check(2), st_error(3)} Consumer.state = 0;
byte Consumer.m = 0;
byte Consumer.n = 0;
state {idle(0), next_frame(1), wait_ack(2), send(3), success(4), q_error(5), ret(6)} Sender.state = 0;
byte Sender.ab = 0;
byte Sender.n = 0;
byte Sender.i = 0;
byte Sender.counter = 0;
state {idle(0), new_file(1), frame_received(2), frame_reported(3), first_safe(4), ret(5)} Receiver.state = 1;
byte Receiver.value = 0;
byte Receiver.exp_ab = 0;
state {ready(0), got_msg(1)} K.state = 0;
byte K.value = 0;
state {ready(0), got_msg(1)} L.state = 0;
state {q1(0), q2(1)} LTL_property.state = 0;

  process Producer
    guardBlock
      temp bool t_0 = Producer.state == 0;
    guardCondition t_0;
    effect
      Producer.state = 1,
      prod_n = 1;

  process Producer
    guardBlock
      temp bool t_1 = Producer.state == 0;
    guardCondition t_1;
    effect
      Producer.state = 1,
      prod_n = 2;

  process Producer
    guardBlock
      temp bool t_2 = Producer.state == 0;
    guardCondition t_2;
    effect
      Producer.state = 1,
      prod_n = 3;

  process Producer
    guardBlock
      temp bool t_3 = Producer.state == 0;
    guardCondition t_3;
    effect
      Producer.state = 1,
      prod_n = 4;

  process Producer
    guardBlock
      temp bool t_4 = Producer.state == 0;
    guardCondition t_4;
    effect
      Producer.state = 1,
      prod_n = 5;

  process Producer
    guardBlock
      temp bool t_5 = Producer.state == 3,
      temp bool t_6 = Producer.result == 2,
      temp bool t_7 = Producer.result == 3,
      temp bool t_8 = t_6 or t_7,
      temp bool t_9 = t_5 and t_8;
    guardCondition t_9;
    effect
      Producer.state = 1;

  process Consumer
    guardBlock
      temp bool t_10 = Consumer.state == 1,
      temp bool t_11 = Consumer.m == 4,
      temp bool t_12 = Consumer.m == 5,
      temp bool t_13 = t_11 or t_12,
      temp bool t_14 = t_10 and t_13;
    guardCondition t_14;
    effect
      Consumer.state = 0;

  process Consumer
    guardBlock
      temp bool t_15 = Consumer.state == 1,
      temp bool t_16 = Consumer.m == 2,
      temp bool t_17 = t_15 and t_16;
    guardCondition t_17;
    effect
      Consumer.state = 0,
      Consumer.n = 0;

  process Consumer
    guardBlock
      temp bool t_18 = Consumer.state == 1,
      temp bool t_19 = Consumer.m == 1,
      temp bool t_20 = t_18 and t_19;
    guardCondition t_20;
    effect
      Consumer.state = 2;

  process Consumer
    guardBlock
      temp bool t_21 = Consumer.state == 2,
      temp bool t_22 = Consumer.n != prod_n,
      temp bool t_23 = t_21 and t_22;
    guardCondition t_23;
    effect
      Consumer.state = 3;

  process Sender
    guardBlock
      temp bool t_24 = Sender.state == 1;
    guardCondition t_24;
    effect
      Sender.state = 3,
      Sender.counter = 0;

  process Sender
    guardBlock
      temp bool t_25 = Sender.state == 4,
      temp bool t_26 = Sender.i < Sender.n,
      temp bool t_27 = t_25 and t_26;
    guardCondition t_27;
    effect
      Sender.state = 1,
      temp int t_28 = Sender.i + 1,
      Sender.i = t_28;

  process Receiver
    guardBlock
      temp bool t_29 = Receiver.state == 4;
    guardCondition t_29;
    effect
      Receiver.state = 2,
      temp byte t_30 = Receiver.value & 1,
      Receiver.exp_ab = t_30;

  process Receiver
    guardBlock
      temp bool t_31 = Receiver.state == 0,
      temp byte t_32 = Receiver.value & 2,
      temp bool t_33 = t_32 == 2,
      temp bool t_34 = t_31 and t_33;
    guardCondition t_34;
    effect
      Receiver.state = 5;

  process LTL_property
    guardBlock
      temp bool t_35 = LTL_property.state == 0;
    guardCondition t_35;
    effect
      LTL_property.state = 0;

  process LTL_property
    guardBlock
      temp bool t_36 = LTL_property.state == 0,
      temp bool t_37 = Producer.state == 2,
      temp bool t_38 = Producer.state == 3,
      temp bool t_39 = not t_38,
      temp bool t_40 = t_37 and t_39,
      temp bool t_41 = t_36 and t_40;
    guardCondition t_41;
    effect
      LTL_property.state = 1;

  process LTL_property
    guardBlock
      temp bool t_42 = LTL_property.state == 1,
      temp bool t_43 = Producer.state == 3,
      temp bool t_44 = not t_43,
      temp bool t_45 = t_42 and t_44;
    guardCondition t_45;
    effect
      LTL_property.state = 1;

  process K_Sender
    guardBlock
      temp bool t_46 = K.state == 1,
      temp bool t_47 = Sender.state == 2,
      temp bool t_48 = Sender.counter == 3,
      temp bool t_49 = t_47 and t_48,
      temp bool t_50 = t_46 and t_49;
    guardCondition t_50;
    effect
      K.state = 0,
      Sender.state = 5;

  process K_Sender
    guardBlock
      temp bool t_51 = K.state == 1,
      temp bool t_52 = Sender.state == 2,
      temp bool t_53 = Sender.counter < 3,
      temp bool t_54 = t_52 and t_53,
      temp bool t_55 = t_51 and t_54;
    guardCondition t_55;
    effect
      K.state = 0,
      Sender.state = 3,
      temp int t_56 = Sender.counter + 1,
      Sender.counter = t_56;

  process L_Sender
    guardBlock
      temp bool t_57 = L.state == 1,
      temp bool t_58 = Sender.state == 2,
      temp bool t_59 = Sender.counter == 3,
      temp bool t_60 = t_58 and t_59,
      temp bool t_61 = t_57 and t_60;
    guardCondition t_61;
    effect
      L.state = 0,
      Sender.state = 5;

  process L_Sender
    guardBlock
      temp bool t_62 = L.state == 1,
      temp bool t_63 = Sender.state == 2,
      temp bool t_64 = Sender.counter < 3,
      temp bool t_65 = t_63 and t_64,
      temp bool t_66 = t_62 and t_65;
    guardCondition t_66;
    effect
      L.state = 0,
      Sender.state = 3,
      temp int t_67 = Sender.counter + 1,
      Sender.counter = t_67;

  process Receiver_L
    guardBlock
      temp bool t_68 = Receiver.state == 2,
      temp byte t_69 = Receiver.value & 1,
      temp bool t_70 = Receiver.exp_ab != t_69,
      temp bool t_71 = t_68 and t_70,
      temp bool t_72 = L.state == 0,
      temp bool t_73 = t_71 and t_72;
    guardCondition t_73;
    effect
      Receiver.state = 0,
      L.state = 1;

  process Receiver_L
    guardBlock
      temp bool t_74 = Receiver.state == 3,
      temp bool t_75 = L.state == 0,
      temp bool t_76 = t_74 and t_75;
    guardCondition t_76;
    effect
      Receiver.state = 0,
      temp int t_77 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_77,
      L.state = 1;

  process Sender_K
    guardBlock
      temp bool t_78 = Sender.state == 3,
      temp bool t_79 = Sender.i == 1,
      temp bool t_80 = Sender.i == Sender.n,
      temp bool t_81 = t_79 and t_80,
      temp bool t_82 = t_78 and t_81,
      temp bool t_83 = K.state == 0,
      temp bool t_84 = t_82 and t_83;
    guardCondition t_84;
    effect
      Sender.state = 2,
      temp int t_85 = 6 + Sender.ab,
      K.value = t_85,
      K.state = 1;

  process Sender_K
    guardBlock
      temp bool t_86 = Sender.state == 3,
      temp bool t_87 = Sender.i > 1,
      temp bool t_88 = Sender.i == Sender.n,
      temp bool t_89 = t_87 and t_88,
      temp bool t_90 = t_86 and t_89,
      temp bool t_91 = K.state == 0,
      temp bool t_92 = t_90 and t_91;
    guardCondition t_92;
    effect
      Sender.state = 2,
      temp int t_93 = 2 + Sender.ab,
      K.value = t_93,
      K.state = 1;

  process Sender_K
    guardBlock
      temp bool t_94 = Sender.state == 3,
      temp bool t_95 = Sender.i == 1,
      temp bool t_96 = Sender.i < Sender.n,
      temp bool t_97 = t_95 and t_96,
      temp bool t_98 = t_94 and t_97,
      temp bool t_99 = K.state == 0,
      temp bool t_100 = t_98 and t_99;
    guardCondition t_100;
    effect
      Sender.state = 2,
      temp int t_101 = 4 + Sender.ab,
      K.value = t_101,
      K.state = 1;

  process Sender_K
    guardBlock
      temp bool t_102 = Sender.state == 3,
      temp bool t_103 = Sender.i > 1,
      temp bool t_104 = Sender.i < Sender.n,
      temp bool t_105 = t_103 and t_104,
      temp bool t_106 = t_102 and t_105,
      temp bool t_107 = K.state == 0,
      temp bool t_108 = t_106 and t_107;
    guardCondition t_108;
    effect
      Sender.state = 2,
      K.value = Sender.ab,
      K.state = 1;

  process Producer_Consumer
    guardBlock
      temp bool t_109 = Producer.state == 3,
      temp bool t_110 = Producer.result == 1,
      temp bool t_111 = t_109 and t_110,
      temp bool t_112 = Consumer.state == 2,
      temp bool t_113 = Consumer.n == prod_n,
      temp bool t_114 = t_112 and t_113,
      temp bool t_115 = t_111 and t_114;
    guardCondition t_115;
    effect
      Producer.state = 0,
      Consumer.state = 0,
      Consumer.n = 0;

  process Sender_Producer
    guardBlock
      temp bool t_116 = Sender.state == 4,
      temp bool t_117 = Sender.i == Sender.n,
      temp bool t_118 = t_116 and t_117,
      temp bool t_119 = Producer.state == 2,
      temp bool t_120 = t_118 and t_119;
    guardCondition t_120;
    effect
      Sender.state = 6,
      Producer.result = 1,
      Producer.state = 3;

  process Sender_Producer
    guardBlock
      temp bool t_121 = Sender.state == 5,
      temp bool t_122 = Sender.i < Sender.n,
      temp bool t_123 = t_121 and t_122,
      temp bool t_124 = Producer.state == 2,
      temp bool t_125 = t_123 and t_124;
    guardCondition t_125;
    effect
      Sender.state = 6,
      Producer.result = 2,
      Producer.state = 3;

  process Sender_Producer
    guardBlock
      temp bool t_126 = Sender.state == 5,
      temp bool t_127 = Sender.i == Sender.n,
      temp bool t_128 = t_126 and t_127,
      temp bool t_129 = Producer.state == 2,
      temp bool t_130 = t_128 and t_129;
    guardCondition t_130;
    effect
      Sender.state = 6,
      Producer.result = 3,
      Producer.state = 3;

  process Receiver_Consumer
    guardBlock
      temp bool t_131 = Receiver.state == 2,
      temp byte t_132 = Receiver.value & 1,
      temp bool t_133 = t_132 == Receiver.exp_ab,
      temp byte t_134 = Receiver.value & 2,
      temp bool t_135 = t_134 == 2,
      temp bool t_136 = t_133 and t_135,
      temp bool t_137 = t_131 and t_136,
      temp bool t_138 = Consumer.state == 0,
      temp bool t_139 = t_137 and t_138;
    guardCondition t_139;
    effect
      Receiver.state = 3,
      Consumer.m = 1,
      Consumer.state = 1,
      temp int t_140 = Consumer.n + 1,
      Consumer.n = t_140;

  process Receiver_Consumer
    guardBlock
      temp bool t_141 = Receiver.state == 2,
      temp byte t_142 = Receiver.value & 1,
      temp bool t_143 = t_142 == Receiver.exp_ab,
      temp byte t_144 = Receiver.value & 2,
      temp bool t_145 = t_144 == 0,
      temp bool t_146 = t_143 and t_145,
      temp byte t_147 = Receiver.value & 4,
      temp bool t_148 = t_147 == 0,
      temp bool t_149 = t_146 and t_148,
      temp bool t_150 = t_141 and t_149,
      temp bool t_151 = Consumer.state == 0,
      temp bool t_152 = t_150 and t_151;
    guardCondition t_152;
    effect
      Receiver.state = 3,
      Consumer.m = 5,
      Consumer.state = 1,
      temp int t_153 = Consumer.n + 1,
      Consumer.n = t_153;

  process Receiver_Consumer
    guardBlock
      temp bool t_154 = Receiver.state == 2,
      temp byte t_155 = Receiver.value & 1,
      temp bool t_156 = t_155 == Receiver.exp_ab,
      temp byte t_157 = Receiver.value & 2,
      temp bool t_158 = t_157 == 0,
      temp bool t_159 = t_156 and t_158,
      temp byte t_160 = Receiver.value & 4,
      temp bool t_161 = t_160 == 4,
      temp bool t_162 = t_159 and t_161,
      temp bool t_163 = t_154 and t_162,
      temp bool t_164 = Consumer.state == 0,
      temp bool t_165 = t_163 and t_164;
    guardCondition t_165;
    effect
      Receiver.state = 3,
      Consumer.m = 4,
      Consumer.state = 1,
      temp int t_166 = Consumer.n + 1,
      Consumer.n = t_166;

  process Receiver_Consumer
    guardBlock
      temp bool t_167 = Receiver.state == 0,
      temp bool t_168 = Consumer.state == 0,
      temp bool t_169 = t_167 and t_168;
    guardCondition t_169;
    effect
      Receiver.state = 5,
      Consumer.m = 2,
      Consumer.state = 1,
      temp int t_170 = Consumer.n + 1,
      Consumer.n = t_170;

  process Sender_Receiver
    guardBlock
      temp bool t_171 = Sender.state == 6,
      temp bool t_172 = Receiver.state == 5,
      temp bool t_173 = t_171 and t_172;
    guardCondition t_173;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Sender_Receiver
    guardBlock
      temp bool t_174 = Sender.state == 6,
      temp bool t_175 = Receiver.state == 1,
      temp bool t_176 = t_174 and t_175;
    guardCondition t_176;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Producer_Sender
    guardBlock
      temp bool t_177 = Producer.state == 1,
      temp bool t_178 = Sender.state == 0,
      temp bool t_179 = t_177 and t_178;
    guardCondition t_179;
    effect
      Producer.state = 2,
      Sender.n = prod_n,
      Sender.state = 1,
      Sender.i = 1;

  process K_Receiver
    guardBlock
      temp bool t_180 = K.state == 1,
      temp bool t_181 = Receiver.state == 1,
      temp bool t_182 = t_180 and t_181;
    guardCondition t_182;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 4;

  process K_Receiver
    guardBlock
      temp bool t_183 = K.state == 1,
      temp bool t_184 = Receiver.state == 0,
      temp bool t_185 = t_183 and t_184;
    guardCondition t_185;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 2;

  process L_Sender
    guardBlock
      temp bool t_186 = L.state == 1,
      temp bool t_187 = Sender.state == 2,
      temp bool t_188 = t_186 and t_187;
    guardCondition t_188;
    effect
      L.state = 0,
      Sender.state = 4,
      temp int t_189 = 1 - Sender.ab,
      Sender.ab = t_189;
      accepting conditions
      LTL_property.state == 1
      system async property LTL_property;
