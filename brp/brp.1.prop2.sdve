state {ready(0), start_send(1), wait_result(2), check(3)} Producer.state = 0;
state {ready(0), get_msg(1), check(2), st_error(3)} Consumer.state = 0;
state {idle(0), next_frame(1), wait_ack(2), send(3), success(4), q_error(5), ret(6)} Sender.state = 0;
state {idle(0), new_file(1), frame_received(2), frame_reported(3), first_safe(4), ret(5)} Receiver.state = 1;
state {ready(0), got_msg(1)} K.state = 0;
state {ready(0), got_msg(1)} L.state = 0;
state {q1(0), q2(1)} LTL_property.state = 0;
byte prod_n = 0;
byte Producer.result = 0;
byte Producer.n = 0;
byte Consumer.m = 0;
byte Consumer.n = 0;
byte Sender.ab = 0;
byte Sender.n = 0;
byte Sender.i = 0;
byte Sender.counter = 0;
byte Receiver.value = 0;
byte Receiver.exp_ab = 0;
byte K.value = 0;

  process Producer 
    guardBlock
      temp bool t_0 = Producer.state == 0;

    guardCondition t_0;
    effect
      Producer.state = 1,
      prod_n = 1;

  process Producer 
    guardBlock
      temp bool t_1 = Producer.state == 0;

    guardCondition t_1;
    effect
      Producer.state = 1,
      prod_n = 2;

  process Producer 
    guardBlock
      temp bool t_2 = Producer.state == 0;

    guardCondition t_2;
    effect
      Producer.state = 1,
      prod_n = 3;

  process Producer 
    guardBlock
      temp bool t_3 = Producer.state == 0;

    guardCondition t_3;
    effect
      Producer.state = 1,
      prod_n = 4;

  process Producer 
    guardBlock
      temp bool t_4 = Producer.state == 0;

    guardCondition t_4;
    effect
      Producer.state = 1,
      prod_n = 5;

  process Producer 
    guardBlock
      temp bool t_5 = Producer.state == 3,
      temp bool t_6 = Producer.result == 2,
      temp bool t_7 = Producer.result == 3,
      temp bool t_8 = t_6 or t_7,
      temp bool t_9 = t_5 and t_8;

    guardCondition t_9;
    effect
      Producer.state = 1;

  process Consumer 
    guardBlock
      temp bool t_10 = Consumer.state == 1,
      temp bool t_11 = Consumer.m == 4,
      temp bool t_12 = Consumer.m == 5,
      temp bool t_13 = t_11 or t_12,
      temp bool t_14 = t_10 and t_13;

    guardCondition t_14;
    effect
      Consumer.state = 0;

  process Consumer 
    guardBlock
      temp bool t_15 = Consumer.state == 1,
      temp bool t_16 = Consumer.m == 2,
      temp bool t_17 = t_15 and t_16;

    guardCondition t_17;
    effect
      Consumer.state = 0,
      Consumer.n = 0;

  process Consumer 
    guardBlock
      temp bool t_18 = Consumer.state == 1,
      temp bool t_19 = Consumer.m == 1,
      temp bool t_20 = t_18 and t_19;

    guardCondition t_20;
    effect
      Consumer.state = 2;

  process Consumer 
    guardBlock
      temp bool t_21 = Consumer.state == 2,
      temp bool t_22 = Consumer.n != prod_n,
      temp bool t_23 = t_21 and t_22;

    guardCondition t_23;
    effect
      Consumer.state = 3;

  process Sender 
    guardBlock
      temp bool t_24 = Sender.state == 1;

    guardCondition t_24;
    effect
      Sender.state = 3,
      Sender.counter = 0;

  process Sender 
    guardBlock
      temp bool t_25 = Sender.state == 4,
      temp bool t_26 = Sender.i < Sender.n,
      temp bool t_27 = t_25 and t_26;

    guardCondition t_27;
    effect
      Sender.state = 1,
      temp byte t_28 = Sender.i + 1,
      Sender.i = t_28;

  process Receiver 
    guardBlock
      temp bool t_29 = Receiver.state == 4;

    guardCondition t_29;
    effect
      Receiver.state = 2,
      temp byte t_30 = Receiver.value & 1,
      Receiver.exp_ab = t_30;

  process Receiver 
    guardBlock
      temp bool t_31 = Receiver.state == 0,
      temp byte t_32 = Receiver.value & 2,
      temp bool t_33 = t_32 == 2,
      temp bool t_34 = t_31 and t_33;

    guardCondition t_34;
    effect
      Receiver.state = 5;

  process LTL_property 
    guardBlock
      temp bool t_35 = LTL_property.state == 0;

    guardCondition t_35;
    effect
      LTL_property.state = 0;

  process LTL_property 
    guardBlock
      temp bool t_36 = LTL_property.state == 0,
      temp bool t_37 = Producer.state == 2,
      temp bool t_38 = Producer.state == 3,
      temp bool t_39 = not t_38,
      temp bool t_40 = t_37 and t_39,
      temp bool t_41 = t_36 and t_40;

    guardCondition t_41;
    effect
      LTL_property.state = 1;

  process LTL_property 
    guardBlock
      temp bool t_42 = LTL_property.state == 1,
      temp bool t_43 = Producer.state == 3,
      temp bool t_44 = not t_43,
      temp bool t_45 = t_42 and t_44;

    guardCondition t_45;
    effect
      LTL_property.state = 1;

  process Producer_Sender 
    guardBlock
      temp bool t_46 = Producer.state == 1,
      temp bool t_47 = Sender.state == 0,
      temp bool t_48 = t_46 and t_47;

    guardCondition t_48;
    effect
      Producer.state = 2,
      Sender.n = prod_n,
      Sender.state = 1,
      Sender.i = 1;

  process L_Sender 
    guardBlock
      temp bool t_49 = L.state == 1,
      temp bool t_50 = Sender.state == 2,
      temp bool t_51 = t_49 and t_50;

    guardCondition t_51;
    effect
      L.state = 0,
      Sender.state = 4,
      temp byte t_52 = 1 - Sender.ab,
      Sender.ab = t_52;

  process Sender_Producer 
    guardBlock
      temp bool t_53 = Sender.state == 4,
      temp bool t_54 = Sender.i == Sender.n,
      temp bool t_55 = t_53 and t_54,
      temp bool t_56 = Producer.state == 2,
      temp bool t_57 = t_55 and t_56;

    guardCondition t_57;
    effect
      Sender.state = 6,
      Producer.result = 1,
      Producer.state = 3;

  process Sender_Producer 
    guardBlock
      temp bool t_58 = Sender.state == 5,
      temp bool t_59 = Sender.i < Sender.n,
      temp bool t_60 = t_58 and t_59,
      temp bool t_61 = Producer.state == 2,
      temp bool t_62 = t_60 and t_61;

    guardCondition t_62;
    effect
      Sender.state = 6,
      Producer.result = 2,
      Producer.state = 3;

  process Sender_Producer 
    guardBlock
      temp bool t_63 = Sender.state == 5,
      temp bool t_64 = Sender.i == Sender.n,
      temp bool t_65 = t_63 and t_64,
      temp bool t_66 = Producer.state == 2,
      temp bool t_67 = t_65 and t_66;

    guardCondition t_67;
    effect
      Sender.state = 6,
      Producer.result = 3,
      Producer.state = 3;

  process Sender_Receiver 
    guardBlock
      temp bool t_68 = Sender.state == 6,
      temp bool t_69 = Receiver.state == 5,
      temp bool t_70 = t_68 and t_69;

    guardCondition t_70;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process Sender_Receiver 
    guardBlock
      temp bool t_71 = Sender.state == 6,
      temp bool t_72 = Receiver.state == 1,
      temp bool t_73 = t_71 and t_72;

    guardCondition t_73;
    effect
      Sender.state = 0,
      Receiver.state = 1;

  process K_Sender 
    guardBlock
      temp bool t_74 = K.state == 1,
      temp bool t_75 = Sender.state == 2,
      temp bool t_76 = Sender.counter == 3,
      temp bool t_77 = t_75 and t_76,
      temp bool t_78 = t_74 and t_77;

    guardCondition t_78;
    effect
      K.state = 0,
      Sender.state = 5;

  process K_Sender 
    guardBlock
      temp bool t_79 = K.state == 1,
      temp bool t_80 = Sender.state == 2,
      temp bool t_81 = Sender.counter < 3,
      temp bool t_82 = t_80 and t_81,
      temp bool t_83 = t_79 and t_82;

    guardCondition t_83;
    effect
      K.state = 0,
      Sender.state = 3,
      temp byte t_84 = Sender.counter + 1,
      Sender.counter = t_84;

  process L_Sender 
    guardBlock
      temp bool t_85 = L.state == 1,
      temp bool t_86 = Sender.state == 2,
      temp bool t_87 = Sender.counter == 3,
      temp bool t_88 = t_86 and t_87,
      temp bool t_89 = t_85 and t_88;

    guardCondition t_89;
    effect
      L.state = 0,
      Sender.state = 5;

  process L_Sender 
    guardBlock
      temp bool t_90 = L.state == 1,
      temp bool t_91 = Sender.state == 2,
      temp bool t_92 = Sender.counter < 3,
      temp bool t_93 = t_91 and t_92,
      temp bool t_94 = t_90 and t_93;

    guardCondition t_94;
    effect
      L.state = 0,
      Sender.state = 3,
      temp byte t_95 = Sender.counter + 1,
      Sender.counter = t_95;

  process Sender_K 
    guardBlock
      temp bool t_96 = Sender.state == 3,
      temp bool t_97 = Sender.i == 1,
      temp bool t_98 = Sender.i == Sender.n,
      temp bool t_99 = t_97 and t_98,
      temp bool t_100 = t_96 and t_99,
      temp bool t_101 = K.state == 0,
      temp bool t_102 = t_100 and t_101;

    guardCondition t_102;
    effect
      Sender.state = 2,
      temp byte t_103 = 6 + Sender.ab,
      K.value = t_103,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_104 = Sender.state == 3,
      temp bool t_105 = Sender.i > 1,
      temp bool t_106 = Sender.i == Sender.n,
      temp bool t_107 = t_105 and t_106,
      temp bool t_108 = t_104 and t_107,
      temp bool t_109 = K.state == 0,
      temp bool t_110 = t_108 and t_109;

    guardCondition t_110;
    effect
      Sender.state = 2,
      temp byte t_111 = 2 + Sender.ab,
      K.value = t_111,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_112 = Sender.state == 3,
      temp bool t_113 = Sender.i == 1,
      temp bool t_114 = Sender.i < Sender.n,
      temp bool t_115 = t_113 and t_114,
      temp bool t_116 = t_112 and t_115,
      temp bool t_117 = K.state == 0,
      temp bool t_118 = t_116 and t_117;

    guardCondition t_118;
    effect
      Sender.state = 2,
      temp byte t_119 = 4 + Sender.ab,
      K.value = t_119,
      K.state = 1;

  process Sender_K 
    guardBlock
      temp bool t_120 = Sender.state == 3,
      temp bool t_121 = Sender.i > 1,
      temp bool t_122 = Sender.i < Sender.n,
      temp bool t_123 = t_121 and t_122,
      temp bool t_124 = t_120 and t_123,
      temp bool t_125 = K.state == 0,
      temp bool t_126 = t_124 and t_125;

    guardCondition t_126;
    effect
      Sender.state = 2,
      K.value = Sender.ab,
      K.state = 1;

  process Producer_Consumer 
    guardBlock
      temp bool t_127 = Producer.state == 3,
      temp bool t_128 = Producer.result == 1,
      temp bool t_129 = t_127 and t_128,
      temp bool t_130 = Consumer.state == 2,
      temp bool t_131 = Consumer.n == prod_n,
      temp bool t_132 = t_130 and t_131,
      temp bool t_133 = t_129 and t_132;

    guardCondition t_133;
    effect
      Producer.state = 0,
      Consumer.state = 0,
      Consumer.n = 0;

  process Receiver_Consumer 
    guardBlock
      temp bool t_134 = Receiver.state == 2,
      temp byte t_135 = Receiver.value & 1,
      temp bool t_136 = t_135 == Receiver.exp_ab,
      temp byte t_137 = Receiver.value & 2,
      temp bool t_138 = t_137 == 2,
      temp bool t_139 = t_136 and t_138,
      temp bool t_140 = t_134 and t_139,
      temp bool t_141 = Consumer.state == 0,
      temp bool t_142 = t_140 and t_141;

    guardCondition t_142;
    effect
      Receiver.state = 3,
      Consumer.m = 1,
      Consumer.state = 1,
      temp byte t_143 = Consumer.n + 1,
      Consumer.n = t_143;

  process Receiver_Consumer 
    guardBlock
      temp bool t_144 = Receiver.state == 2,
      temp byte t_145 = Receiver.value & 1,
      temp bool t_146 = t_145 == Receiver.exp_ab,
      temp byte t_147 = Receiver.value & 2,
      temp bool t_148 = t_147 == 0,
      temp bool t_149 = t_146 and t_148,
      temp byte t_150 = Receiver.value & 4,
      temp bool t_151 = t_150 == 0,
      temp bool t_152 = t_149 and t_151,
      temp bool t_153 = t_144 and t_152,
      temp bool t_154 = Consumer.state == 0,
      temp bool t_155 = t_153 and t_154;

    guardCondition t_155;
    effect
      Receiver.state = 3,
      Consumer.m = 5,
      Consumer.state = 1,
      temp byte t_156 = Consumer.n + 1,
      Consumer.n = t_156;

  process Receiver_Consumer 
    guardBlock
      temp bool t_157 = Receiver.state == 2,
      temp byte t_158 = Receiver.value & 1,
      temp bool t_159 = t_158 == Receiver.exp_ab,
      temp byte t_160 = Receiver.value & 2,
      temp bool t_161 = t_160 == 0,
      temp bool t_162 = t_159 and t_161,
      temp byte t_163 = Receiver.value & 4,
      temp bool t_164 = t_163 == 4,
      temp bool t_165 = t_162 and t_164,
      temp bool t_166 = t_157 and t_165,
      temp bool t_167 = Consumer.state == 0,
      temp bool t_168 = t_166 and t_167;

    guardCondition t_168;
    effect
      Receiver.state = 3,
      Consumer.m = 4,
      Consumer.state = 1,
      temp byte t_169 = Consumer.n + 1,
      Consumer.n = t_169;

  process Receiver_Consumer 
    guardBlock
      temp bool t_170 = Receiver.state == 0,
      temp bool t_171 = Consumer.state == 0,
      temp bool t_172 = t_170 and t_171;

    guardCondition t_172;
    effect
      Receiver.state = 5,
      Consumer.m = 2,
      Consumer.state = 1,
      temp byte t_173 = Consumer.n + 1,
      Consumer.n = t_173;

  process K_Receiver 
    guardBlock
      temp bool t_174 = K.state == 1,
      temp bool t_175 = Receiver.state == 1,
      temp bool t_176 = t_174 and t_175;

    guardCondition t_176;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 4;

  process K_Receiver 
    guardBlock
      temp bool t_177 = K.state == 1,
      temp bool t_178 = Receiver.state == 0,
      temp bool t_179 = t_177 and t_178;

    guardCondition t_179;
    effect
      K.state = 0,
      Receiver.value = K.value,
      Receiver.state = 2;

  process Receiver_L 
    guardBlock
      temp bool t_180 = Receiver.state == 2,
      temp byte t_181 = Receiver.value & 1,
      temp bool t_182 = Receiver.exp_ab != t_181,
      temp bool t_183 = t_180 and t_182,
      temp bool t_184 = L.state == 0,
      temp bool t_185 = t_183 and t_184;

    guardCondition t_185;
    effect
      Receiver.state = 0,
      L.state = 1;

  process Receiver_L 
    guardBlock
      temp bool t_186 = Receiver.state == 3,
      temp bool t_187 = L.state == 0,
      temp bool t_188 = t_186 and t_187;

    guardCondition t_188;
    effect
      Receiver.state = 0,
      temp byte t_189 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_189,
      L.state = 1;

accepting conditions
  LTL_property.state == 1

