byte fork[16] =  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
state {think(0), one(1), eat(2), finish(3)} phil_0.state = 0;
state {think(0), one(1), eat(2), finish(3)} phil_1.state = 0;
state {think(0), one(1), eat(2), finish(3)} phil_2.state = 0;
state {think(0), one(1), eat(2), finish(3)} phil_3.state = 0;
state {think(0), one(1), eat(2), finish(3)} phil_4.state = 0;
state {think(0), one(1), eat(2), finish(3)} phil_5.state = 0;
state {think(0), one(1), eat(2), finish(3)} phil_6.state = 0;
state {think(0), one(1), eat(2), finish(3)} phil_7.state = 0;
state {think(0), one(1), eat(2), finish(3)} phil_8.state = 0;
state {think(0), one(1), eat(2), finish(3)} phil_9.state = 0;
state {think(0), one(1), eat(2), finish(3)} phil_10.state = 0;
state {think(0), one(1), eat(2), finish(3)} phil_11.state = 0;
state {think(0), one(1), eat(2), finish(3)} phil_12.state = 0;
state {think(0), one(1), eat(2), finish(3)} phil_13.state = 0;
state {think(0), one(1), eat(2), finish(3)} phil_14.state = 0;
state {q1(0), q2(1)} LTL_property.state = 0;

  process phil_0
    guardBlock
      temp bool t_0 = phil_0.state == 0,
      temp byte t_1 = fork[0],
      temp bool t_2 = t_1 == 0,
      temp bool t_3 = t_0 and t_2;
    guardCondition t_3;
    effect
      phil_0.state = 1,
      fork[0] = 1;

  process phil_0
    guardBlock
      temp bool t_4 = phil_0.state == 1,
      temp byte t_5 = fork[1],
      temp bool t_6 = t_5 == 0,
      temp bool t_7 = t_4 and t_6;
    guardCondition t_7;
    effect
      phil_0.state = 2,
      fork[1] = 1;

  process phil_0
    guardBlock
      temp bool t_8 = phil_0.state == 2;
    guardCondition t_8;
    effect
      phil_0.state = 3,
      fork[0] = 0;

  process phil_0
    guardBlock
      temp bool t_9 = phil_0.state == 3;
    guardCondition t_9;
    effect
      phil_0.state = 0,
      fork[1] = 0;

  process phil_1
    guardBlock
      temp bool t_10 = phil_1.state == 0,
      temp byte t_11 = fork[1],
      temp bool t_12 = t_11 == 0,
      temp bool t_13 = t_10 and t_12;
    guardCondition t_13;
    effect
      phil_1.state = 1,
      fork[1] = 1;

  process phil_1
    guardBlock
      temp bool t_14 = phil_1.state == 1,
      temp byte t_15 = fork[2],
      temp bool t_16 = t_15 == 0,
      temp bool t_17 = t_14 and t_16;
    guardCondition t_17;
    effect
      phil_1.state = 2,
      fork[2] = 1;

  process phil_1
    guardBlock
      temp bool t_18 = phil_1.state == 2;
    guardCondition t_18;
    effect
      phil_1.state = 3,
      fork[1] = 0;

  process phil_1
    guardBlock
      temp bool t_19 = phil_1.state == 3;
    guardCondition t_19;
    effect
      phil_1.state = 0,
      fork[2] = 0;

  process phil_2
    guardBlock
      temp bool t_20 = phil_2.state == 0,
      temp byte t_21 = fork[2],
      temp bool t_22 = t_21 == 0,
      temp bool t_23 = t_20 and t_22;
    guardCondition t_23;
    effect
      phil_2.state = 1,
      fork[2] = 1;

  process phil_2
    guardBlock
      temp bool t_24 = phil_2.state == 1,
      temp byte t_25 = fork[3],
      temp bool t_26 = t_25 == 0,
      temp bool t_27 = t_24 and t_26;
    guardCondition t_27;
    effect
      phil_2.state = 2,
      fork[3] = 1;

  process phil_2
    guardBlock
      temp bool t_28 = phil_2.state == 2;
    guardCondition t_28;
    effect
      phil_2.state = 3,
      fork[2] = 0;

  process phil_2
    guardBlock
      temp bool t_29 = phil_2.state == 3;
    guardCondition t_29;
    effect
      phil_2.state = 0,
      fork[3] = 0;

  process phil_3
    guardBlock
      temp bool t_30 = phil_3.state == 0,
      temp byte t_31 = fork[3],
      temp bool t_32 = t_31 == 0,
      temp bool t_33 = t_30 and t_32;
    guardCondition t_33;
    effect
      phil_3.state = 1,
      fork[3] = 1;

  process phil_3
    guardBlock
      temp bool t_34 = phil_3.state == 1,
      temp byte t_35 = fork[4],
      temp bool t_36 = t_35 == 0,
      temp bool t_37 = t_34 and t_36;
    guardCondition t_37;
    effect
      phil_3.state = 2,
      fork[4] = 1;

  process phil_3
    guardBlock
      temp bool t_38 = phil_3.state == 2;
    guardCondition t_38;
    effect
      phil_3.state = 3,
      fork[3] = 0;

  process phil_3
    guardBlock
      temp bool t_39 = phil_3.state == 3;
    guardCondition t_39;
    effect
      phil_3.state = 0,
      fork[4] = 0;

  process phil_4
    guardBlock
      temp bool t_40 = phil_4.state == 0,
      temp byte t_41 = fork[4],
      temp bool t_42 = t_41 == 0,
      temp bool t_43 = t_40 and t_42;
    guardCondition t_43;
    effect
      phil_4.state = 1,
      fork[4] = 1;

  process phil_4
    guardBlock
      temp bool t_44 = phil_4.state == 1,
      temp byte t_45 = fork[5],
      temp bool t_46 = t_45 == 0,
      temp bool t_47 = t_44 and t_46;
    guardCondition t_47;
    effect
      phil_4.state = 2,
      fork[5] = 1;

  process phil_4
    guardBlock
      temp bool t_48 = phil_4.state == 2;
    guardCondition t_48;
    effect
      phil_4.state = 3,
      fork[4] = 0;

  process phil_4
    guardBlock
      temp bool t_49 = phil_4.state == 3;
    guardCondition t_49;
    effect
      phil_4.state = 0,
      fork[5] = 0;

  process phil_5
    guardBlock
      temp bool t_50 = phil_5.state == 0,
      temp byte t_51 = fork[5],
      temp bool t_52 = t_51 == 0,
      temp bool t_53 = t_50 and t_52;
    guardCondition t_53;
    effect
      phil_5.state = 1,
      fork[5] = 1;

  process phil_5
    guardBlock
      temp bool t_54 = phil_5.state == 1,
      temp byte t_55 = fork[6],
      temp bool t_56 = t_55 == 0,
      temp bool t_57 = t_54 and t_56;
    guardCondition t_57;
    effect
      phil_5.state = 2,
      fork[6] = 1;

  process phil_5
    guardBlock
      temp bool t_58 = phil_5.state == 2;
    guardCondition t_58;
    effect
      phil_5.state = 3,
      fork[5] = 0;

  process phil_5
    guardBlock
      temp bool t_59 = phil_5.state == 3;
    guardCondition t_59;
    effect
      phil_5.state = 0,
      fork[6] = 0;

  process phil_6
    guardBlock
      temp bool t_60 = phil_6.state == 0,
      temp byte t_61 = fork[6],
      temp bool t_62 = t_61 == 0,
      temp bool t_63 = t_60 and t_62;
    guardCondition t_63;
    effect
      phil_6.state = 1,
      fork[6] = 1;

  process phil_6
    guardBlock
      temp bool t_64 = phil_6.state == 1,
      temp byte t_65 = fork[7],
      temp bool t_66 = t_65 == 0,
      temp bool t_67 = t_64 and t_66;
    guardCondition t_67;
    effect
      phil_6.state = 2,
      fork[7] = 1;

  process phil_6
    guardBlock
      temp bool t_68 = phil_6.state == 2;
    guardCondition t_68;
    effect
      phil_6.state = 3,
      fork[6] = 0;

  process phil_6
    guardBlock
      temp bool t_69 = phil_6.state == 3;
    guardCondition t_69;
    effect
      phil_6.state = 0,
      fork[7] = 0;

  process phil_7
    guardBlock
      temp bool t_70 = phil_7.state == 0,
      temp byte t_71 = fork[7],
      temp bool t_72 = t_71 == 0,
      temp bool t_73 = t_70 and t_72;
    guardCondition t_73;
    effect
      phil_7.state = 1,
      fork[7] = 1;

  process phil_7
    guardBlock
      temp bool t_74 = phil_7.state == 1,
      temp byte t_75 = fork[8],
      temp bool t_76 = t_75 == 0,
      temp bool t_77 = t_74 and t_76;
    guardCondition t_77;
    effect
      phil_7.state = 2,
      fork[8] = 1;

  process phil_7
    guardBlock
      temp bool t_78 = phil_7.state == 2;
    guardCondition t_78;
    effect
      phil_7.state = 3,
      fork[7] = 0;

  process phil_7
    guardBlock
      temp bool t_79 = phil_7.state == 3;
    guardCondition t_79;
    effect
      phil_7.state = 0,
      fork[8] = 0;

  process phil_8
    guardBlock
      temp bool t_80 = phil_8.state == 0,
      temp byte t_81 = fork[8],
      temp bool t_82 = t_81 == 0,
      temp bool t_83 = t_80 and t_82;
    guardCondition t_83;
    effect
      phil_8.state = 1,
      fork[8] = 1;

  process phil_8
    guardBlock
      temp bool t_84 = phil_8.state == 1,
      temp byte t_85 = fork[9],
      temp bool t_86 = t_85 == 0,
      temp bool t_87 = t_84 and t_86;
    guardCondition t_87;
    effect
      phil_8.state = 2,
      fork[9] = 1;

  process phil_8
    guardBlock
      temp bool t_88 = phil_8.state == 2;
    guardCondition t_88;
    effect
      phil_8.state = 3,
      fork[8] = 0;

  process phil_8
    guardBlock
      temp bool t_89 = phil_8.state == 3;
    guardCondition t_89;
    effect
      phil_8.state = 0,
      fork[9] = 0;

  process phil_9
    guardBlock
      temp bool t_90 = phil_9.state == 0,
      temp byte t_91 = fork[9],
      temp bool t_92 = t_91 == 0,
      temp bool t_93 = t_90 and t_92;
    guardCondition t_93;
    effect
      phil_9.state = 1,
      fork[9] = 1;

  process phil_9
    guardBlock
      temp bool t_94 = phil_9.state == 1,
      temp byte t_95 = fork[10],
      temp bool t_96 = t_95 == 0,
      temp bool t_97 = t_94 and t_96;
    guardCondition t_97;
    effect
      phil_9.state = 2,
      fork[10] = 1;

  process phil_9
    guardBlock
      temp bool t_98 = phil_9.state == 2;
    guardCondition t_98;
    effect
      phil_9.state = 3,
      fork[9] = 0;

  process phil_9
    guardBlock
      temp bool t_99 = phil_9.state == 3;
    guardCondition t_99;
    effect
      phil_9.state = 0,
      fork[10] = 0;

  process phil_10
    guardBlock
      temp bool t_100 = phil_10.state == 0,
      temp byte t_101 = fork[10],
      temp bool t_102 = t_101 == 0,
      temp bool t_103 = t_100 and t_102;
    guardCondition t_103;
    effect
      phil_10.state = 1,
      fork[10] = 1;

  process phil_10
    guardBlock
      temp bool t_104 = phil_10.state == 1,
      temp byte t_105 = fork[11],
      temp bool t_106 = t_105 == 0,
      temp bool t_107 = t_104 and t_106;
    guardCondition t_107;
    effect
      phil_10.state = 2,
      fork[11] = 1;

  process phil_10
    guardBlock
      temp bool t_108 = phil_10.state == 2;
    guardCondition t_108;
    effect
      phil_10.state = 3,
      fork[10] = 0;

  process phil_10
    guardBlock
      temp bool t_109 = phil_10.state == 3;
    guardCondition t_109;
    effect
      phil_10.state = 0,
      fork[11] = 0;

  process phil_11
    guardBlock
      temp bool t_110 = phil_11.state == 0,
      temp byte t_111 = fork[11],
      temp bool t_112 = t_111 == 0,
      temp bool t_113 = t_110 and t_112;
    guardCondition t_113;
    effect
      phil_11.state = 1,
      fork[11] = 1;

  process phil_11
    guardBlock
      temp bool t_114 = phil_11.state == 1,
      temp byte t_115 = fork[12],
      temp bool t_116 = t_115 == 0,
      temp bool t_117 = t_114 and t_116;
    guardCondition t_117;
    effect
      phil_11.state = 2,
      fork[12] = 1;

  process phil_11
    guardBlock
      temp bool t_118 = phil_11.state == 2;
    guardCondition t_118;
    effect
      phil_11.state = 3,
      fork[11] = 0;

  process phil_11
    guardBlock
      temp bool t_119 = phil_11.state == 3;
    guardCondition t_119;
    effect
      phil_11.state = 0,
      fork[12] = 0;

  process phil_12
    guardBlock
      temp bool t_120 = phil_12.state == 0,
      temp byte t_121 = fork[12],
      temp bool t_122 = t_121 == 0,
      temp bool t_123 = t_120 and t_122;
    guardCondition t_123;
    effect
      phil_12.state = 1,
      fork[12] = 1;

  process phil_12
    guardBlock
      temp bool t_124 = phil_12.state == 1,
      temp byte t_125 = fork[13],
      temp bool t_126 = t_125 == 0,
      temp bool t_127 = t_124 and t_126;
    guardCondition t_127;
    effect
      phil_12.state = 2,
      fork[13] = 1;

  process phil_12
    guardBlock
      temp bool t_128 = phil_12.state == 2;
    guardCondition t_128;
    effect
      phil_12.state = 3,
      fork[12] = 0;

  process phil_12
    guardBlock
      temp bool t_129 = phil_12.state == 3;
    guardCondition t_129;
    effect
      phil_12.state = 0,
      fork[13] = 0;

  process phil_13
    guardBlock
      temp bool t_130 = phil_13.state == 0,
      temp byte t_131 = fork[13],
      temp bool t_132 = t_131 == 0,
      temp bool t_133 = t_130 and t_132;
    guardCondition t_133;
    effect
      phil_13.state = 1,
      fork[13] = 1;

  process phil_13
    guardBlock
      temp bool t_134 = phil_13.state == 1,
      temp byte t_135 = fork[14],
      temp bool t_136 = t_135 == 0,
      temp bool t_137 = t_134 and t_136;
    guardCondition t_137;
    effect
      phil_13.state = 2,
      fork[14] = 1;

  process phil_13
    guardBlock
      temp bool t_138 = phil_13.state == 2;
    guardCondition t_138;
    effect
      phil_13.state = 3,
      fork[13] = 0;

  process phil_13
    guardBlock
      temp bool t_139 = phil_13.state == 3;
    guardCondition t_139;
    effect
      phil_13.state = 0,
      fork[14] = 0;

  process phil_14
    guardBlock
      temp bool t_140 = phil_14.state == 0,
      temp byte t_141 = fork[14],
      temp bool t_142 = t_141 == 0,
      temp bool t_143 = t_140 and t_142;
    guardCondition t_143;
    effect
      phil_14.state = 1,
      fork[14] = 1;

  process phil_14
    guardBlock
      temp bool t_144 = phil_14.state == 1,
      temp byte t_145 = fork[0],
      temp bool t_146 = t_145 == 0,
      temp bool t_147 = t_144 and t_146;
    guardCondition t_147;
    effect
      phil_14.state = 2,
      fork[0] = 1;

  process phil_14
    guardBlock
      temp bool t_148 = phil_14.state == 2;
    guardCondition t_148;
    effect
      phil_14.state = 3,
      fork[14] = 0;

  process phil_14
    guardBlock
      temp bool t_149 = phil_14.state == 3;
    guardCondition t_149;
    effect
      phil_14.state = 0,
      fork[0] = 0;

  process LTL_property
    guardBlock
      temp bool t_150 = LTL_property.state == 0;
    guardCondition t_150;
    effect
      LTL_property.state = 0;

  process LTL_property
    guardBlock
      temp bool t_151 = LTL_property.state == 0,
      temp bool t_152 = phil_0.state == 1,
      temp bool t_153 = phil_0.state == 2,
      temp bool t_154 = not t_153,
      temp bool t_155 = t_152 and t_154,
      temp bool t_156 = t_151 and t_155;
    guardCondition t_156;
    effect
      LTL_property.state = 1;

  process LTL_property
    guardBlock
      temp bool t_157 = LTL_property.state == 1,
      temp bool t_158 = phil_0.state == 2,
      temp bool t_159 = not t_158,
      temp bool t_160 = t_157 and t_159;
    guardCondition t_160;
    effect
      LTL_property.state = 1;
      accepting conditions
      LTL_property.state == 1
