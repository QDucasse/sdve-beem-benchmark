byte fork[6] =  {0, 0, 0, 0, 0};
byte count = 0;
state {think(0), inside(1), one(2), eat(3), finish(4)} phil_0.state = 0;
state {think(0), inside(1), one(2), eat(3), finish(4)} phil_1.state = 0;
state {think(0), inside(1), one(2), eat(3), finish(4)} phil_2.state = 0;
state {think(0), inside(1), one(2), eat(3), finish(4)} phil_3.state = 0;
state {think(0), inside(1), one(2), eat(3), finish(4)} phil_4.state = 0;
state {q1(0), q2(1)} LTL_property.state = 0;

  process phil_0
    guardBlock
      temp bool t_0 = phil_0.state == 0,
      temp bool t_1 = count < 3,
      temp bool t_2 = t_0 and t_1;
    guardCondition t_2;
    effect
      phil_0.state = 1,
      temp int t_3 = count + 1,
      count = t_3;

  process phil_0
    guardBlock
      temp bool t_4 = phil_0.state == 1;
    guardCondition t_4;
    effect
      phil_0.state = 0,
      temp int t_5 = count - 1,
      count = t_5;

  process phil_0
    guardBlock
      temp bool t_6 = phil_0.state == 1,
      temp byte t_7 = fork[0],
      temp bool t_8 = t_7 == 0,
      temp bool t_9 = t_6 and t_8;
    guardCondition t_9;
    effect
      phil_0.state = 2,
      fork[0] = 1;

  process phil_0
    guardBlock
      temp bool t_10 = phil_0.state == 2,
      temp byte t_11 = fork[1],
      temp bool t_12 = t_11 == 0,
      temp bool t_13 = t_10 and t_12;
    guardCondition t_13;
    effect
      phil_0.state = 3,
      fork[1] = 1;

  process phil_0
    guardBlock
      temp bool t_14 = phil_0.state == 3;
    guardCondition t_14;
    effect
      phil_0.state = 4,
      fork[0] = 0;

  process phil_0
    guardBlock
      temp bool t_15 = phil_0.state == 4;
    guardCondition t_15;
    effect
      phil_0.state = 1,
      fork[1] = 0;

  process phil_1
    guardBlock
      temp bool t_16 = phil_1.state == 0,
      temp bool t_17 = count < 3,
      temp bool t_18 = t_16 and t_17;
    guardCondition t_18;
    effect
      phil_1.state = 1,
      temp int t_19 = count + 1,
      count = t_19;

  process phil_1
    guardBlock
      temp bool t_20 = phil_1.state == 1;
    guardCondition t_20;
    effect
      phil_1.state = 0,
      temp int t_21 = count - 1,
      count = t_21;

  process phil_1
    guardBlock
      temp bool t_22 = phil_1.state == 1,
      temp byte t_23 = fork[1],
      temp bool t_24 = t_23 == 0,
      temp bool t_25 = t_22 and t_24;
    guardCondition t_25;
    effect
      phil_1.state = 2,
      fork[1] = 1;

  process phil_1
    guardBlock
      temp bool t_26 = phil_1.state == 2,
      temp byte t_27 = fork[2],
      temp bool t_28 = t_27 == 0,
      temp bool t_29 = t_26 and t_28;
    guardCondition t_29;
    effect
      phil_1.state = 3,
      fork[2] = 1;

  process phil_1
    guardBlock
      temp bool t_30 = phil_1.state == 3;
    guardCondition t_30;
    effect
      phil_1.state = 4,
      fork[1] = 0;

  process phil_1
    guardBlock
      temp bool t_31 = phil_1.state == 4;
    guardCondition t_31;
    effect
      phil_1.state = 1,
      fork[2] = 0;

  process phil_2
    guardBlock
      temp bool t_32 = phil_2.state == 0,
      temp bool t_33 = count < 3,
      temp bool t_34 = t_32 and t_33;
    guardCondition t_34;
    effect
      phil_2.state = 1,
      temp int t_35 = count + 1,
      count = t_35;

  process phil_2
    guardBlock
      temp bool t_36 = phil_2.state == 1;
    guardCondition t_36;
    effect
      phil_2.state = 0,
      temp int t_37 = count - 1,
      count = t_37;

  process phil_2
    guardBlock
      temp bool t_38 = phil_2.state == 1,
      temp byte t_39 = fork[2],
      temp bool t_40 = t_39 == 0,
      temp bool t_41 = t_38 and t_40;
    guardCondition t_41;
    effect
      phil_2.state = 2,
      fork[2] = 1;

  process phil_2
    guardBlock
      temp bool t_42 = phil_2.state == 2,
      temp byte t_43 = fork[3],
      temp bool t_44 = t_43 == 0,
      temp bool t_45 = t_42 and t_44;
    guardCondition t_45;
    effect
      phil_2.state = 3,
      fork[3] = 1;

  process phil_2
    guardBlock
      temp bool t_46 = phil_2.state == 3;
    guardCondition t_46;
    effect
      phil_2.state = 4,
      fork[2] = 0;

  process phil_2
    guardBlock
      temp bool t_47 = phil_2.state == 4;
    guardCondition t_47;
    effect
      phil_2.state = 1,
      fork[3] = 0;

  process phil_3
    guardBlock
      temp bool t_48 = phil_3.state == 0,
      temp bool t_49 = count < 3,
      temp bool t_50 = t_48 and t_49;
    guardCondition t_50;
    effect
      phil_3.state = 1,
      temp int t_51 = count + 1,
      count = t_51;

  process phil_3
    guardBlock
      temp bool t_52 = phil_3.state == 1;
    guardCondition t_52;
    effect
      phil_3.state = 0,
      temp int t_53 = count - 1,
      count = t_53;

  process phil_3
    guardBlock
      temp bool t_54 = phil_3.state == 1,
      temp byte t_55 = fork[3],
      temp bool t_56 = t_55 == 0,
      temp bool t_57 = t_54 and t_56;
    guardCondition t_57;
    effect
      phil_3.state = 2,
      fork[3] = 1;

  process phil_3
    guardBlock
      temp bool t_58 = phil_3.state == 2,
      temp byte t_59 = fork[4],
      temp bool t_60 = t_59 == 0,
      temp bool t_61 = t_58 and t_60;
    guardCondition t_61;
    effect
      phil_3.state = 3,
      fork[4] = 1;

  process phil_3
    guardBlock
      temp bool t_62 = phil_3.state == 3;
    guardCondition t_62;
    effect
      phil_3.state = 4,
      fork[3] = 0;

  process phil_3
    guardBlock
      temp bool t_63 = phil_3.state == 4;
    guardCondition t_63;
    effect
      phil_3.state = 1,
      fork[4] = 0;

  process phil_4
    guardBlock
      temp bool t_64 = phil_4.state == 0,
      temp bool t_65 = count < 3,
      temp bool t_66 = t_64 and t_65;
    guardCondition t_66;
    effect
      phil_4.state = 1,
      temp int t_67 = count + 1,
      count = t_67;

  process phil_4
    guardBlock
      temp bool t_68 = phil_4.state == 1;
    guardCondition t_68;
    effect
      phil_4.state = 0,
      temp int t_69 = count - 1,
      count = t_69;

  process phil_4
    guardBlock
      temp bool t_70 = phil_4.state == 1,
      temp byte t_71 = fork[4],
      temp bool t_72 = t_71 == 0,
      temp bool t_73 = t_70 and t_72;
    guardCondition t_73;
    effect
      phil_4.state = 2,
      fork[4] = 1;

  process phil_4
    guardBlock
      temp bool t_74 = phil_4.state == 2,
      temp byte t_75 = fork[0],
      temp bool t_76 = t_75 == 0,
      temp bool t_77 = t_74 and t_76;
    guardCondition t_77;
    effect
      phil_4.state = 3,
      fork[0] = 1;

  process phil_4
    guardBlock
      temp bool t_78 = phil_4.state == 3;
    guardCondition t_78;
    effect
      phil_4.state = 4,
      fork[4] = 0;

  process phil_4
    guardBlock
      temp bool t_79 = phil_4.state == 4;
    guardCondition t_79;
    effect
      phil_4.state = 1,
      fork[0] = 0;

  process LTL_property
    guardBlock
      temp bool t_80 = LTL_property.state == 0;
    guardCondition t_80;
    effect
      LTL_property.state = 0;

  process LTL_property
    guardBlock
      temp bool t_81 = LTL_property.state == 0,
      temp bool t_82 = phil_0.state == 3,
      temp bool t_83 = not t_82,
      temp bool t_84 = t_81 and t_83;
    guardCondition t_84;
    effect
      LTL_property.state = 1;

  process LTL_property
    guardBlock
      temp bool t_85 = LTL_property.state == 1,
      temp bool t_86 = phil_0.state == 3,
      temp bool t_87 = not t_86,
      temp bool t_88 = t_85 and t_87;
    guardCondition t_88;
    effect
      LTL_property.state = 1;
      // accepting conditions
      // LTL_property.state == 1
