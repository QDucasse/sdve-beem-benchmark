state {q(0), out(1)} Red_car.state = 0;
state {q(0)} Car_hor_1.state = 0;
state {q(0)} Car_hor_2.state = 0;
state {q(0)} Car_hor_3.state = 0;
state {q(0)} Car_hor_4.state = 0;
state {q(0)} Car_ver_1.state = 0;
state {q(0)} Car_ver_2.state = 0;
state {q(0)} Car_ver_3.state = 0;
state {q(0)} Car_ver_4.state = 0;
state {q(0)} Car_ver_5.state = 0;
state {q(0)} Car_ver_6.state = 0;
state {q(0)} Car_ver_7.state = 0;
state {q(0)} Car_ver_8.state = 0;
byte A[49] = {0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1};
byte Red_car.x = 1;
byte Red_car.y = 2;
byte Red_car.length = 2;
byte Car_hor_1.x = 4;
byte Car_hor_1.y = 0;
byte Car_hor_1.length = 2;
byte Car_hor_2.x = 1;
byte Car_hor_2.y = 4;
byte Car_hor_2.length = 2;
byte Car_hor_3.x = 4;
byte Car_hor_3.y = 4;
byte Car_hor_3.length = 2;
byte Car_hor_4.x = 1;
byte Car_hor_4.y = 5;
byte Car_hor_4.length = 4;
byte Car_ver_1.x = 0;
byte Car_ver_1.y = 1;
byte Car_ver_1.length = 2;
byte Car_ver_2.x = 0;
byte Car_ver_2.y = 4;
byte Car_ver_2.length = 2;
byte Car_ver_3.x = 2;
byte Car_ver_3.y = 0;
byte Car_ver_3.length = 2;
byte Car_ver_4.x = 3;
byte Car_ver_4.y = 1;
byte Car_ver_4.length = 3;
byte Car_ver_5.x = 4;
byte Car_ver_5.y = 1;
byte Car_ver_5.length = 2;
byte Car_ver_6.x = 5;
byte Car_ver_6.y = 1;
byte Car_ver_6.length = 3;
byte Car_ver_7.x = 6;
byte Car_ver_7.y = 1;
byte Car_ver_7.length = 2;
byte Car_ver_8.x = 6;
byte Car_ver_8.y = 5;
byte Car_ver_8.length = 2;

  process Red_car 
    guardBlock
      temp bool t_0 = Red_car.state == 0,
      temp bool t_1 = Red_car.x > 0,
      temp byte t_2 = Red_car.y * 7,
      temp byte t_3 = t_2 + Red_car.x,
      temp byte t_4 = t_3 - 1,
      temp byte t_5 = A[t_4],
      temp bool t_6 = t_5 == 0,
      temp bool t_7 = t_1 and t_6,
      temp bool t_8 = t_0 and t_7;

    guardCondition t_8;
    effect
      Red_car.state = 0,
      temp byte t_9 = Red_car.y * 7,
      temp byte t_10 = t_9 + Red_car.x,
      temp byte t_11 = t_10 + Red_car.length,
      temp byte t_12 = t_11 - 1,
      A[t_12] = 0,
      temp byte t_13 = Red_car.y * 7,
      temp byte t_14 = t_13 + Red_car.x,
      temp byte t_15 = t_14 - 1,
      A[t_15] = 1,
      temp byte t_16 = Red_car.x - 1,
      Red_car.x = t_16;

  process Red_car 
    guardBlock
      temp bool t_17 = Red_car.state == 0,
      temp byte t_18 = Red_car.x + Red_car.length,
      temp bool t_19 = t_18 < 7,
      temp byte t_20 = Red_car.y * 7,
      temp byte t_21 = t_20 + Red_car.x,
      temp byte t_22 = t_21 + Red_car.length,
      temp byte t_23 = A[t_22],
      temp bool t_24 = t_23 == 0,
      temp bool t_25 = t_19 and t_24,
      temp bool t_26 = t_17 and t_25;

    guardCondition t_26;
    effect
      Red_car.state = 0,
      temp byte t_27 = Red_car.y * 7,
      temp byte t_28 = t_27 + Red_car.x,
      A[t_28] = 0,
      temp byte t_29 = Red_car.y * 7,
      temp byte t_30 = t_29 + Red_car.x,
      temp byte t_31 = t_30 + Red_car.length,
      A[t_31] = 1,
      temp byte t_32 = Red_car.x + 1,
      Red_car.x = t_32;

  process Red_car 
    guardBlock
      temp bool t_33 = Red_car.state == 0,
      temp bool t_34 = Red_car.x == 5,
      temp bool t_35 = t_33 and t_34;

    guardCondition t_35;
    effect
      Red_car.state = 1;

  process Car_hor_1 
    guardBlock
      temp bool t_36 = Car_hor_1.state == 0,
      temp bool t_37 = Car_hor_1.x > 0,
      temp byte t_38 = Car_hor_1.y * 7,
      temp byte t_39 = t_38 + Car_hor_1.x,
      temp byte t_40 = t_39 - 1,
      temp byte t_41 = A[t_40],
      temp bool t_42 = t_41 == 0,
      temp bool t_43 = t_37 and t_42,
      temp bool t_44 = t_36 and t_43;

    guardCondition t_44;
    effect
      Car_hor_1.state = 0,
      temp byte t_45 = Car_hor_1.y * 7,
      temp byte t_46 = t_45 + Car_hor_1.x,
      temp byte t_47 = t_46 + Car_hor_1.length,
      temp byte t_48 = t_47 - 1,
      A[t_48] = 0,
      temp byte t_49 = Car_hor_1.y * 7,
      temp byte t_50 = t_49 + Car_hor_1.x,
      temp byte t_51 = t_50 - 1,
      A[t_51] = 1,
      temp byte t_52 = Car_hor_1.x - 1,
      Car_hor_1.x = t_52;

  process Car_hor_1 
    guardBlock
      temp bool t_53 = Car_hor_1.state == 0,
      temp byte t_54 = Car_hor_1.x + Car_hor_1.length,
      temp bool t_55 = t_54 < 7,
      temp byte t_56 = Car_hor_1.y * 7,
      temp byte t_57 = t_56 + Car_hor_1.x,
      temp byte t_58 = t_57 + Car_hor_1.length,
      temp byte t_59 = A[t_58],
      temp bool t_60 = t_59 == 0,
      temp bool t_61 = t_55 and t_60,
      temp bool t_62 = t_53 and t_61;

    guardCondition t_62;
    effect
      Car_hor_1.state = 0,
      temp byte t_63 = Car_hor_1.y * 7,
      temp byte t_64 = t_63 + Car_hor_1.x,
      A[t_64] = 0,
      temp byte t_65 = Car_hor_1.y * 7,
      temp byte t_66 = t_65 + Car_hor_1.x,
      temp byte t_67 = t_66 + Car_hor_1.length,
      A[t_67] = 1,
      temp byte t_68 = Car_hor_1.x + 1,
      Car_hor_1.x = t_68;

  process Car_hor_2 
    guardBlock
      temp bool t_69 = Car_hor_2.state == 0,
      temp bool t_70 = Car_hor_2.x > 0,
      temp byte t_71 = Car_hor_2.y * 7,
      temp byte t_72 = t_71 + Car_hor_2.x,
      temp byte t_73 = t_72 - 1,
      temp byte t_74 = A[t_73],
      temp bool t_75 = t_74 == 0,
      temp bool t_76 = t_70 and t_75,
      temp bool t_77 = t_69 and t_76;

    guardCondition t_77;
    effect
      Car_hor_2.state = 0,
      temp byte t_78 = Car_hor_2.y * 7,
      temp byte t_79 = t_78 + Car_hor_2.x,
      temp byte t_80 = t_79 + Car_hor_2.length,
      temp byte t_81 = t_80 - 1,
      A[t_81] = 0,
      temp byte t_82 = Car_hor_2.y * 7,
      temp byte t_83 = t_82 + Car_hor_2.x,
      temp byte t_84 = t_83 - 1,
      A[t_84] = 1,
      temp byte t_85 = Car_hor_2.x - 1,
      Car_hor_2.x = t_85;

  process Car_hor_2 
    guardBlock
      temp bool t_86 = Car_hor_2.state == 0,
      temp byte t_87 = Car_hor_2.x + Car_hor_2.length,
      temp bool t_88 = t_87 < 7,
      temp byte t_89 = Car_hor_2.y * 7,
      temp byte t_90 = t_89 + Car_hor_2.x,
      temp byte t_91 = t_90 + Car_hor_2.length,
      temp byte t_92 = A[t_91],
      temp bool t_93 = t_92 == 0,
      temp bool t_94 = t_88 and t_93,
      temp bool t_95 = t_86 and t_94;

    guardCondition t_95;
    effect
      Car_hor_2.state = 0,
      temp byte t_96 = Car_hor_2.y * 7,
      temp byte t_97 = t_96 + Car_hor_2.x,
      A[t_97] = 0,
      temp byte t_98 = Car_hor_2.y * 7,
      temp byte t_99 = t_98 + Car_hor_2.x,
      temp byte t_100 = t_99 + Car_hor_2.length,
      A[t_100] = 1,
      temp byte t_101 = Car_hor_2.x + 1,
      Car_hor_2.x = t_101;

  process Car_hor_3 
    guardBlock
      temp bool t_102 = Car_hor_3.state == 0,
      temp bool t_103 = Car_hor_3.x > 0,
      temp byte t_104 = Car_hor_3.y * 7,
      temp byte t_105 = t_104 + Car_hor_3.x,
      temp byte t_106 = t_105 - 1,
      temp byte t_107 = A[t_106],
      temp bool t_108 = t_107 == 0,
      temp bool t_109 = t_103 and t_108,
      temp bool t_110 = t_102 and t_109;

    guardCondition t_110;
    effect
      Car_hor_3.state = 0,
      temp byte t_111 = Car_hor_3.y * 7,
      temp byte t_112 = t_111 + Car_hor_3.x,
      temp byte t_113 = t_112 + Car_hor_3.length,
      temp byte t_114 = t_113 - 1,
      A[t_114] = 0,
      temp byte t_115 = Car_hor_3.y * 7,
      temp byte t_116 = t_115 + Car_hor_3.x,
      temp byte t_117 = t_116 - 1,
      A[t_117] = 1,
      temp byte t_118 = Car_hor_3.x - 1,
      Car_hor_3.x = t_118;

  process Car_hor_3 
    guardBlock
      temp bool t_119 = Car_hor_3.state == 0,
      temp byte t_120 = Car_hor_3.x + Car_hor_3.length,
      temp bool t_121 = t_120 < 7,
      temp byte t_122 = Car_hor_3.y * 7,
      temp byte t_123 = t_122 + Car_hor_3.x,
      temp byte t_124 = t_123 + Car_hor_3.length,
      temp byte t_125 = A[t_124],
      temp bool t_126 = t_125 == 0,
      temp bool t_127 = t_121 and t_126,
      temp bool t_128 = t_119 and t_127;

    guardCondition t_128;
    effect
      Car_hor_3.state = 0,
      temp byte t_129 = Car_hor_3.y * 7,
      temp byte t_130 = t_129 + Car_hor_3.x,
      A[t_130] = 0,
      temp byte t_131 = Car_hor_3.y * 7,
      temp byte t_132 = t_131 + Car_hor_3.x,
      temp byte t_133 = t_132 + Car_hor_3.length,
      A[t_133] = 1,
      temp byte t_134 = Car_hor_3.x + 1,
      Car_hor_3.x = t_134;

  process Car_hor_4 
    guardBlock
      temp bool t_135 = Car_hor_4.state == 0,
      temp bool t_136 = Car_hor_4.x > 0,
      temp byte t_137 = Car_hor_4.y * 7,
      temp byte t_138 = t_137 + Car_hor_4.x,
      temp byte t_139 = t_138 - 1,
      temp byte t_140 = A[t_139],
      temp bool t_141 = t_140 == 0,
      temp bool t_142 = t_136 and t_141,
      temp bool t_143 = t_135 and t_142;

    guardCondition t_143;
    effect
      Car_hor_4.state = 0,
      temp byte t_144 = Car_hor_4.y * 7,
      temp byte t_145 = t_144 + Car_hor_4.x,
      temp byte t_146 = t_145 + Car_hor_4.length,
      temp byte t_147 = t_146 - 1,
      A[t_147] = 0,
      temp byte t_148 = Car_hor_4.y * 7,
      temp byte t_149 = t_148 + Car_hor_4.x,
      temp byte t_150 = t_149 - 1,
      A[t_150] = 1,
      temp byte t_151 = Car_hor_4.x - 1,
      Car_hor_4.x = t_151;

  process Car_hor_4 
    guardBlock
      temp bool t_152 = Car_hor_4.state == 0,
      temp byte t_153 = Car_hor_4.x + Car_hor_4.length,
      temp bool t_154 = t_153 < 7,
      temp byte t_155 = Car_hor_4.y * 7,
      temp byte t_156 = t_155 + Car_hor_4.x,
      temp byte t_157 = t_156 + Car_hor_4.length,
      temp byte t_158 = A[t_157],
      temp bool t_159 = t_158 == 0,
      temp bool t_160 = t_154 and t_159,
      temp bool t_161 = t_152 and t_160;

    guardCondition t_161;
    effect
      Car_hor_4.state = 0,
      temp byte t_162 = Car_hor_4.y * 7,
      temp byte t_163 = t_162 + Car_hor_4.x,
      A[t_163] = 0,
      temp byte t_164 = Car_hor_4.y * 7,
      temp byte t_165 = t_164 + Car_hor_4.x,
      temp byte t_166 = t_165 + Car_hor_4.length,
      A[t_166] = 1,
      temp byte t_167 = Car_hor_4.x + 1,
      Car_hor_4.x = t_167;

  process Car_ver_1 
    guardBlock
      temp bool t_168 = Car_ver_1.state == 0,
      temp bool t_169 = Car_ver_1.y > 0,
      temp byte t_170 = Car_ver_1.y - 1,
      temp byte t_171 = t_170 * 7,
      temp byte t_172 = t_171 + Car_ver_1.x,
      temp byte t_173 = A[t_172],
      temp bool t_174 = t_173 == 0,
      temp bool t_175 = t_169 and t_174,
      temp bool t_176 = t_168 and t_175;

    guardCondition t_176;
    effect
      Car_ver_1.state = 0,
      temp byte t_177 = Car_ver_1.y + Car_ver_1.length,
      temp byte t_178 = t_177 - 1,
      temp byte t_179 = t_178 * 7,
      temp byte t_180 = t_179 + Car_ver_1.x,
      A[t_180] = 0,
      temp byte t_181 = Car_ver_1.y - 1,
      temp byte t_182 = t_181 * 7,
      temp byte t_183 = t_182 + Car_ver_1.x,
      A[t_183] = 1,
      temp byte t_184 = Car_ver_1.y - 1,
      Car_ver_1.y = t_184;

  process Car_ver_1 
    guardBlock
      temp bool t_185 = Car_ver_1.state == 0,
      temp byte t_186 = Car_ver_1.y + Car_ver_1.length,
      temp bool t_187 = t_186 < 7,
      temp byte t_188 = Car_ver_1.y + Car_ver_1.length,
      temp byte t_189 = t_188 * 7,
      temp byte t_190 = t_189 + Car_ver_1.x,
      temp byte t_191 = A[t_190],
      temp bool t_192 = t_191 == 0,
      temp bool t_193 = t_187 and t_192,
      temp bool t_194 = t_185 and t_193;

    guardCondition t_194;
    effect
      Car_ver_1.state = 0,
      temp byte t_195 = Car_ver_1.y * 7,
      temp byte t_196 = t_195 + Car_ver_1.x,
      A[t_196] = 0,
      temp byte t_197 = Car_ver_1.y + Car_ver_1.length,
      temp byte t_198 = t_197 * 7,
      temp byte t_199 = t_198 + Car_ver_1.x,
      A[t_199] = 1,
      temp byte t_200 = Car_ver_1.y + 1,
      Car_ver_1.y = t_200;

  process Car_ver_2 
    guardBlock
      temp bool t_201 = Car_ver_2.state == 0,
      temp bool t_202 = Car_ver_2.y > 0,
      temp byte t_203 = Car_ver_2.y - 1,
      temp byte t_204 = t_203 * 7,
      temp byte t_205 = t_204 + Car_ver_2.x,
      temp byte t_206 = A[t_205],
      temp bool t_207 = t_206 == 0,
      temp bool t_208 = t_202 and t_207,
      temp bool t_209 = t_201 and t_208;

    guardCondition t_209;
    effect
      Car_ver_2.state = 0,
      temp byte t_210 = Car_ver_2.y + Car_ver_2.length,
      temp byte t_211 = t_210 - 1,
      temp byte t_212 = t_211 * 7,
      temp byte t_213 = t_212 + Car_ver_2.x,
      A[t_213] = 0,
      temp byte t_214 = Car_ver_2.y - 1,
      temp byte t_215 = t_214 * 7,
      temp byte t_216 = t_215 + Car_ver_2.x,
      A[t_216] = 1,
      temp byte t_217 = Car_ver_2.y - 1,
      Car_ver_2.y = t_217;

  process Car_ver_2 
    guardBlock
      temp bool t_218 = Car_ver_2.state == 0,
      temp byte t_219 = Car_ver_2.y + Car_ver_2.length,
      temp bool t_220 = t_219 < 7,
      temp byte t_221 = Car_ver_2.y + Car_ver_2.length,
      temp byte t_222 = t_221 * 7,
      temp byte t_223 = t_222 + Car_ver_2.x,
      temp byte t_224 = A[t_223],
      temp bool t_225 = t_224 == 0,
      temp bool t_226 = t_220 and t_225,
      temp bool t_227 = t_218 and t_226;

    guardCondition t_227;
    effect
      Car_ver_2.state = 0,
      temp byte t_228 = Car_ver_2.y * 7,
      temp byte t_229 = t_228 + Car_ver_2.x,
      A[t_229] = 0,
      temp byte t_230 = Car_ver_2.y + Car_ver_2.length,
      temp byte t_231 = t_230 * 7,
      temp byte t_232 = t_231 + Car_ver_2.x,
      A[t_232] = 1,
      temp byte t_233 = Car_ver_2.y + 1,
      Car_ver_2.y = t_233;

  process Car_ver_3 
    guardBlock
      temp bool t_234 = Car_ver_3.state == 0,
      temp bool t_235 = Car_ver_3.y > 0,
      temp byte t_236 = Car_ver_3.y - 1,
      temp byte t_237 = t_236 * 7,
      temp byte t_238 = t_237 + Car_ver_3.x,
      temp byte t_239 = A[t_238],
      temp bool t_240 = t_239 == 0,
      temp bool t_241 = t_235 and t_240,
      temp bool t_242 = t_234 and t_241;

    guardCondition t_242;
    effect
      Car_ver_3.state = 0,
      temp byte t_243 = Car_ver_3.y + Car_ver_3.length,
      temp byte t_244 = t_243 - 1,
      temp byte t_245 = t_244 * 7,
      temp byte t_246 = t_245 + Car_ver_3.x,
      A[t_246] = 0,
      temp byte t_247 = Car_ver_3.y - 1,
      temp byte t_248 = t_247 * 7,
      temp byte t_249 = t_248 + Car_ver_3.x,
      A[t_249] = 1,
      temp byte t_250 = Car_ver_3.y - 1,
      Car_ver_3.y = t_250;

  process Car_ver_3 
    guardBlock
      temp bool t_251 = Car_ver_3.state == 0,
      temp byte t_252 = Car_ver_3.y + Car_ver_3.length,
      temp bool t_253 = t_252 < 7,
      temp byte t_254 = Car_ver_3.y + Car_ver_3.length,
      temp byte t_255 = t_254 * 7,
      temp byte t_256 = t_255 + Car_ver_3.x,
      temp byte t_257 = A[t_256],
      temp bool t_258 = t_257 == 0,
      temp bool t_259 = t_253 and t_258,
      temp bool t_260 = t_251 and t_259;

    guardCondition t_260;
    effect
      Car_ver_3.state = 0,
      temp byte t_261 = Car_ver_3.y * 7,
      temp byte t_262 = t_261 + Car_ver_3.x,
      A[t_262] = 0,
      temp byte t_263 = Car_ver_3.y + Car_ver_3.length,
      temp byte t_264 = t_263 * 7,
      temp byte t_265 = t_264 + Car_ver_3.x,
      A[t_265] = 1,
      temp byte t_266 = Car_ver_3.y + 1,
      Car_ver_3.y = t_266;

  process Car_ver_4 
    guardBlock
      temp bool t_267 = Car_ver_4.state == 0,
      temp bool t_268 = Car_ver_4.y > 0,
      temp byte t_269 = Car_ver_4.y - 1,
      temp byte t_270 = t_269 * 7,
      temp byte t_271 = t_270 + Car_ver_4.x,
      temp byte t_272 = A[t_271],
      temp bool t_273 = t_272 == 0,
      temp bool t_274 = t_268 and t_273,
      temp bool t_275 = t_267 and t_274;

    guardCondition t_275;
    effect
      Car_ver_4.state = 0,
      temp byte t_276 = Car_ver_4.y + Car_ver_4.length,
      temp byte t_277 = t_276 - 1,
      temp byte t_278 = t_277 * 7,
      temp byte t_279 = t_278 + Car_ver_4.x,
      A[t_279] = 0,
      temp byte t_280 = Car_ver_4.y - 1,
      temp byte t_281 = t_280 * 7,
      temp byte t_282 = t_281 + Car_ver_4.x,
      A[t_282] = 1,
      temp byte t_283 = Car_ver_4.y - 1,
      Car_ver_4.y = t_283;

  process Car_ver_4 
    guardBlock
      temp bool t_284 = Car_ver_4.state == 0,
      temp byte t_285 = Car_ver_4.y + Car_ver_4.length,
      temp bool t_286 = t_285 < 7,
      temp byte t_287 = Car_ver_4.y + Car_ver_4.length,
      temp byte t_288 = t_287 * 7,
      temp byte t_289 = t_288 + Car_ver_4.x,
      temp byte t_290 = A[t_289],
      temp bool t_291 = t_290 == 0,
      temp bool t_292 = t_286 and t_291,
      temp bool t_293 = t_284 and t_292;

    guardCondition t_293;
    effect
      Car_ver_4.state = 0,
      temp byte t_294 = Car_ver_4.y * 7,
      temp byte t_295 = t_294 + Car_ver_4.x,
      A[t_295] = 0,
      temp byte t_296 = Car_ver_4.y + Car_ver_4.length,
      temp byte t_297 = t_296 * 7,
      temp byte t_298 = t_297 + Car_ver_4.x,
      A[t_298] = 1,
      temp byte t_299 = Car_ver_4.y + 1,
      Car_ver_4.y = t_299;

  process Car_ver_5 
    guardBlock
      temp bool t_300 = Car_ver_5.state == 0,
      temp bool t_301 = Car_ver_5.y > 0,
      temp byte t_302 = Car_ver_5.y - 1,
      temp byte t_303 = t_302 * 7,
      temp byte t_304 = t_303 + Car_ver_5.x,
      temp byte t_305 = A[t_304],
      temp bool t_306 = t_305 == 0,
      temp bool t_307 = t_301 and t_306,
      temp bool t_308 = t_300 and t_307;

    guardCondition t_308;
    effect
      Car_ver_5.state = 0,
      temp byte t_309 = Car_ver_5.y + Car_ver_5.length,
      temp byte t_310 = t_309 - 1,
      temp byte t_311 = t_310 * 7,
      temp byte t_312 = t_311 + Car_ver_5.x,
      A[t_312] = 0,
      temp byte t_313 = Car_ver_5.y - 1,
      temp byte t_314 = t_313 * 7,
      temp byte t_315 = t_314 + Car_ver_5.x,
      A[t_315] = 1,
      temp byte t_316 = Car_ver_5.y - 1,
      Car_ver_5.y = t_316;

  process Car_ver_5 
    guardBlock
      temp bool t_317 = Car_ver_5.state == 0,
      temp byte t_318 = Car_ver_5.y + Car_ver_5.length,
      temp bool t_319 = t_318 < 7,
      temp byte t_320 = Car_ver_5.y + Car_ver_5.length,
      temp byte t_321 = t_320 * 7,
      temp byte t_322 = t_321 + Car_ver_5.x,
      temp byte t_323 = A[t_322],
      temp bool t_324 = t_323 == 0,
      temp bool t_325 = t_319 and t_324,
      temp bool t_326 = t_317 and t_325;

    guardCondition t_326;
    effect
      Car_ver_5.state = 0,
      temp byte t_327 = Car_ver_5.y * 7,
      temp byte t_328 = t_327 + Car_ver_5.x,
      A[t_328] = 0,
      temp byte t_329 = Car_ver_5.y + Car_ver_5.length,
      temp byte t_330 = t_329 * 7,
      temp byte t_331 = t_330 + Car_ver_5.x,
      A[t_331] = 1,
      temp byte t_332 = Car_ver_5.y + 1,
      Car_ver_5.y = t_332;

  process Car_ver_6 
    guardBlock
      temp bool t_333 = Car_ver_6.state == 0,
      temp bool t_334 = Car_ver_6.y > 0,
      temp byte t_335 = Car_ver_6.y - 1,
      temp byte t_336 = t_335 * 7,
      temp byte t_337 = t_336 + Car_ver_6.x,
      temp byte t_338 = A[t_337],
      temp bool t_339 = t_338 == 0,
      temp bool t_340 = t_334 and t_339,
      temp bool t_341 = t_333 and t_340;

    guardCondition t_341;
    effect
      Car_ver_6.state = 0,
      temp byte t_342 = Car_ver_6.y + Car_ver_6.length,
      temp byte t_343 = t_342 - 1,
      temp byte t_344 = t_343 * 7,
      temp byte t_345 = t_344 + Car_ver_6.x,
      A[t_345] = 0,
      temp byte t_346 = Car_ver_6.y - 1,
      temp byte t_347 = t_346 * 7,
      temp byte t_348 = t_347 + Car_ver_6.x,
      A[t_348] = 1,
      temp byte t_349 = Car_ver_6.y - 1,
      Car_ver_6.y = t_349;

  process Car_ver_6 
    guardBlock
      temp bool t_350 = Car_ver_6.state == 0,
      temp byte t_351 = Car_ver_6.y + Car_ver_6.length,
      temp bool t_352 = t_351 < 7,
      temp byte t_353 = Car_ver_6.y + Car_ver_6.length,
      temp byte t_354 = t_353 * 7,
      temp byte t_355 = t_354 + Car_ver_6.x,
      temp byte t_356 = A[t_355],
      temp bool t_357 = t_356 == 0,
      temp bool t_358 = t_352 and t_357,
      temp bool t_359 = t_350 and t_358;

    guardCondition t_359;
    effect
      Car_ver_6.state = 0,
      temp byte t_360 = Car_ver_6.y * 7,
      temp byte t_361 = t_360 + Car_ver_6.x,
      A[t_361] = 0,
      temp byte t_362 = Car_ver_6.y + Car_ver_6.length,
      temp byte t_363 = t_362 * 7,
      temp byte t_364 = t_363 + Car_ver_6.x,
      A[t_364] = 1,
      temp byte t_365 = Car_ver_6.y + 1,
      Car_ver_6.y = t_365;

  process Car_ver_7 
    guardBlock
      temp bool t_366 = Car_ver_7.state == 0,
      temp bool t_367 = Car_ver_7.y > 0,
      temp byte t_368 = Car_ver_7.y - 1,
      temp byte t_369 = t_368 * 7,
      temp byte t_370 = t_369 + Car_ver_7.x,
      temp byte t_371 = A[t_370],
      temp bool t_372 = t_371 == 0,
      temp bool t_373 = t_367 and t_372,
      temp bool t_374 = t_366 and t_373;

    guardCondition t_374;
    effect
      Car_ver_7.state = 0,
      temp byte t_375 = Car_ver_7.y + Car_ver_7.length,
      temp byte t_376 = t_375 - 1,
      temp byte t_377 = t_376 * 7,
      temp byte t_378 = t_377 + Car_ver_7.x,
      A[t_378] = 0,
      temp byte t_379 = Car_ver_7.y - 1,
      temp byte t_380 = t_379 * 7,
      temp byte t_381 = t_380 + Car_ver_7.x,
      A[t_381] = 1,
      temp byte t_382 = Car_ver_7.y - 1,
      Car_ver_7.y = t_382;

  process Car_ver_7 
    guardBlock
      temp bool t_383 = Car_ver_7.state == 0,
      temp byte t_384 = Car_ver_7.y + Car_ver_7.length,
      temp bool t_385 = t_384 < 7,
      temp byte t_386 = Car_ver_7.y + Car_ver_7.length,
      temp byte t_387 = t_386 * 7,
      temp byte t_388 = t_387 + Car_ver_7.x,
      temp byte t_389 = A[t_388],
      temp bool t_390 = t_389 == 0,
      temp bool t_391 = t_385 and t_390,
      temp bool t_392 = t_383 and t_391;

    guardCondition t_392;
    effect
      Car_ver_7.state = 0,
      temp byte t_393 = Car_ver_7.y * 7,
      temp byte t_394 = t_393 + Car_ver_7.x,
      A[t_394] = 0,
      temp byte t_395 = Car_ver_7.y + Car_ver_7.length,
      temp byte t_396 = t_395 * 7,
      temp byte t_397 = t_396 + Car_ver_7.x,
      A[t_397] = 1,
      temp byte t_398 = Car_ver_7.y + 1,
      Car_ver_7.y = t_398;

  process Car_ver_8 
    guardBlock
      temp bool t_399 = Car_ver_8.state == 0,
      temp bool t_400 = Car_ver_8.y > 0,
      temp byte t_401 = Car_ver_8.y - 1,
      temp byte t_402 = t_401 * 7,
      temp byte t_403 = t_402 + Car_ver_8.x,
      temp byte t_404 = A[t_403],
      temp bool t_405 = t_404 == 0,
      temp bool t_406 = t_400 and t_405,
      temp bool t_407 = t_399 and t_406;

    guardCondition t_407;
    effect
      Car_ver_8.state = 0,
      temp byte t_408 = Car_ver_8.y + Car_ver_8.length,
      temp byte t_409 = t_408 - 1,
      temp byte t_410 = t_409 * 7,
      temp byte t_411 = t_410 + Car_ver_8.x,
      A[t_411] = 0,
      temp byte t_412 = Car_ver_8.y - 1,
      temp byte t_413 = t_412 * 7,
      temp byte t_414 = t_413 + Car_ver_8.x,
      A[t_414] = 1,
      temp byte t_415 = Car_ver_8.y - 1,
      Car_ver_8.y = t_415;

  process Car_ver_8 
    guardBlock
      temp bool t_416 = Car_ver_8.state == 0,
      temp byte t_417 = Car_ver_8.y + Car_ver_8.length,
      temp bool t_418 = t_417 < 7,
      temp byte t_419 = Car_ver_8.y + Car_ver_8.length,
      temp byte t_420 = t_419 * 7,
      temp byte t_421 = t_420 + Car_ver_8.x,
      temp byte t_422 = A[t_421],
      temp bool t_423 = t_422 == 0,
      temp bool t_424 = t_418 and t_423,
      temp bool t_425 = t_416 and t_424;

    guardCondition t_425;
    effect
      Car_ver_8.state = 0,
      temp byte t_426 = Car_ver_8.y * 7,
      temp byte t_427 = t_426 + Car_ver_8.x,
      A[t_427] = 0,
      temp byte t_428 = Car_ver_8.y + Car_ver_8.length,
      temp byte t_429 = t_428 * 7,
      temp byte t_430 = t_429 + Car_ver_8.x,
      A[t_430] = 1,
      temp byte t_431 = Car_ver_8.y + 1,
      Car_ver_8.y = t_431;


