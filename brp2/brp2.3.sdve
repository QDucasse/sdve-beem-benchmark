const int n = 3;
const int SYNC = 30;
const int maxtime = SYNC + 1;
const byte SAME = 0;
const byte OTHER = 1;
int X = 0;
int U = 0;
int V = 0;
int W = 0;
int Z = 0;
byte File = SAME;
state {time(0)} clock.state = 0;
state {new_file(0), first_safe_frame(1), frame_received(2), frame_reported(3), idle(4)} Receiver.state = 0;
byte Receiver.exp_ab = 0;
byte Receiver.triple = 0;
state {init_state(0), idle(1), next_frame(2), wait_ack(3), success(4), error(5)} Sender.state = 0;
byte Sender.ab = 0;
byte Sender.i = 0;
byte Sender.rc = 0;
state {start(0), in_transit(1), BAD(2)} K.state = 0;
byte K.triple = 0;
state {start(0), in_transit(1), BAD(2)} L.state = 0;
state {ok(0), dk(1), nok(2), send_req(3), file_req(4)} SClient.state = 0;
state {ok(0), inc(1), nok(2)} RClient.state = 0;

  process clock
    guardBlock
      temp bool t_0 = clock.state == 0,
      temp bool t_1 = Receiver.state == 1,
      temp bool t_2 = not t_1,
      temp int t_3 = W + 1,
      temp bool t_4 = t_3 <= 0,
      temp bool t_5 = t_2 or t_4,
      temp bool t_6 = Receiver.state == 2,
      temp bool t_7 = not t_6,
      temp int t_8 = W + 1,
      temp bool t_9 = t_8 <= 0,
      temp bool t_10 = t_7 or t_9,
      temp bool t_11 = t_5 and t_10,
      temp bool t_12 = Receiver.state == 3,
      temp bool t_13 = not t_12,
      temp int t_14 = W + 1,
      temp bool t_15 = t_14 <= 0,
      temp bool t_16 = t_13 or t_15,
      temp bool t_17 = t_11 and t_16,
      temp bool t_18 = Receiver.state == 4,
      temp bool t_19 = not t_18,
      temp int t_20 = Z + 1,
      temp bool t_21 = t_20 <= 30,
      temp bool t_22 = t_19 or t_21,
      temp bool t_23 = t_17 and t_22,
      temp bool t_24 = Sender.state == 2,
      temp bool t_25 = not t_24,
      temp int t_26 = X + 1,
      temp bool t_27 = t_26 <= 0,
      temp bool t_28 = t_25 or t_27,
      temp bool t_29 = t_23 and t_28,
      temp bool t_30 = Sender.state == 3,
      temp bool t_31 = not t_30,
      temp int t_32 = X + 1,
      temp bool t_33 = t_32 <= 5,
      temp bool t_34 = t_31 or t_33,
      temp bool t_35 = t_29 and t_34,
      temp bool t_36 = Sender.state == 4,
      temp bool t_37 = not t_36,
      temp int t_38 = X + 1,
      temp bool t_39 = t_38 <= 0,
      temp bool t_40 = t_37 or t_39,
      temp bool t_41 = t_35 and t_40,
      temp bool t_42 = Sender.state == 5,
      temp bool t_43 = not t_42,
      temp int t_44 = X + 1,
      temp bool t_45 = t_44 <= SYNC,
      temp bool t_46 = t_43 or t_45,
      temp bool t_47 = t_41 and t_46,
      temp bool t_48 = K.state == 1,
      temp bool t_49 = not t_48,
      temp int t_50 = U + 1,
      temp bool t_51 = t_50 <= 2,
      temp bool t_52 = t_49 or t_51,
      temp bool t_53 = t_47 and t_52,
      temp bool t_54 = L.state == 1,
      temp bool t_55 = not t_54,
      temp int t_56 = V + 1,
      temp bool t_57 = t_56 <= 2,
      temp bool t_58 = t_55 or t_57,
      temp bool t_59 = t_53 and t_58,
      temp bool t_60 = X < maxtime,
      temp bool t_61 = U < maxtime,
      temp bool t_62 = t_60 or t_61,
      temp bool t_63 = V < maxtime,
      temp bool t_64 = t_62 or t_63,
      temp bool t_65 = W < maxtime,
      temp bool t_66 = t_64 or t_65,
      temp bool t_67 = Z < maxtime,
      temp bool t_68 = t_66 or t_67,
      temp bool t_69 = t_59 and t_68,
      temp bool t_70 = t_0 and t_69;
    guardCondition t_70;
    effect
      clock.state = 0,
      temp bool t_71 = X < maxtime,
      temp int t_72 = X + t_71,
      X = t_72,
      temp bool t_73 = U < maxtime,
      temp int t_74 = U + t_73,
      U = t_74,
      temp bool t_75 = V < maxtime,
      temp int t_76 = V + t_75,
      V = t_76,
      temp bool t_77 = W < maxtime,
      temp int t_78 = W + t_77,
      W = t_78,
      temp bool t_79 = Z < maxtime,
      temp int t_80 = Z + t_79,
      Z = t_80;

  process Receiver
    guardBlock
      temp bool t_81 = Receiver.state == 1;
    guardCondition t_81;
    effect
      Receiver.state = 2,
      temp byte t_82 = Receiver.triple & 1,
      Receiver.exp_ab = t_82;

  process Receiver
    guardBlock
      temp bool t_83 = Receiver.state == 4,
      temp bool t_84 = Z == 30,
      temp byte t_85 = Receiver.triple & 2,
      temp bool t_86 = t_85 == 2,
      temp bool t_87 = t_84 and t_86,
      temp bool t_88 = t_83 and t_87;
    guardCondition t_88;
    effect
      Receiver.state = 0;

  process Sender
    guardBlock
      temp bool t_89 = Sender.state == 0;
    guardCondition t_89;
    effect
      Sender.state = 1,
      Sender.ab = 0;

  process Sender
    guardBlock
      temp bool t_90 = Sender.state == 4,
      temp bool t_91 = Sender.i < n,
      temp bool t_92 = t_90 and t_91;
    guardCondition t_92;
    effect
      Sender.state = 2,
      temp int t_93 = Sender.i + 1,
      Sender.i = t_93;

  process Sender
    guardBlock
      temp bool t_94 = Sender.state == 5,
      temp bool t_95 = X == SYNC,
      temp bool t_96 = t_94 and t_95;
    guardCondition t_96;
    effect
      Sender.state = 1,
      Sender.ab = 0;

  process K
    guardBlock
      temp bool t_97 = K.state == 1,
      temp bool t_98 = U > 0,
      temp bool t_99 = U <= 2,
      temp bool t_100 = t_98 and t_99,
      temp bool t_101 = t_97 and t_100;
    guardCondition t_101;
    effect
      K.state = 0;

  process L
    guardBlock
      temp bool t_102 = L.state == 1,
      temp bool t_103 = V > 0,
      temp bool t_104 = V <= 2,
      temp bool t_105 = t_103 and t_104,
      temp bool t_106 = t_102 and t_105;
    guardCondition t_106;
    effect
      L.state = 0;

  process SClient
    guardBlock
      temp bool t_107 = SClient.state == 0;
    guardCondition t_107;
    effect
      SClient.state = 3,
      File = OTHER;

  process SClient
    guardBlock
      temp bool t_108 = SClient.state == 1;
    guardCondition t_108;
    effect
      SClient.state = 3,
      File = OTHER;

  process SClient
    guardBlock
      temp bool t_109 = SClient.state == 2;
    guardCondition t_109;
    effect
      SClient.state = 3,
      File = OTHER;

  process K_Receiver
    guardBlock
      temp bool t_110 = K.state == 1,
      temp bool t_111 = U > 0,
      temp bool t_112 = U <= 2,
      temp bool t_113 = t_111 and t_112,
      temp bool t_114 = t_110 and t_113,
      temp bool t_115 = Receiver.state == 0,
      temp bool t_116 = t_114 and t_115;
    guardCondition t_116;
    effect
      K.state = 0,
      Receiver.triple = K.triple,
      Receiver.state = 1,
      W = 0,
      Z = 0;

  process K_Receiver
    guardBlock
      temp bool t_117 = K.state == 1,
      temp bool t_118 = U > 0,
      temp bool t_119 = U <= 2,
      temp bool t_120 = t_118 and t_119,
      temp bool t_121 = t_117 and t_120,
      temp bool t_122 = Receiver.state == 4,
      temp bool t_123 = Z < 30,
      temp bool t_124 = t_122 and t_123,
      temp bool t_125 = t_121 and t_124;
    guardCondition t_125;
    effect
      K.state = 0,
      Receiver.triple = K.triple,
      Receiver.state = 2,
      W = 0;

  process Receiver_RClient
    guardBlock
      temp bool t_126 = Receiver.state == 2,
      temp byte t_127 = Receiver.triple & 1,
      temp bool t_128 = t_127 == Receiver.exp_ab,
      temp byte t_129 = Receiver.triple & 6,
      temp bool t_130 = t_129 == 4,
      temp bool t_131 = t_128 and t_130,
      temp bool t_132 = t_126 and t_131,
      temp bool t_133 = RClient.state == 0,
      temp bool t_134 = t_132 and t_133;
    guardCondition t_134;
    effect
      Receiver.state = 3,
      RClient.state = 1,
      File = SAME;

  process Receiver_RClient
    guardBlock
      temp bool t_135 = Receiver.state == 2,
      temp byte t_136 = Receiver.triple & 1,
      temp bool t_137 = t_136 == Receiver.exp_ab,
      temp byte t_138 = Receiver.triple & 6,
      temp bool t_139 = t_138 == 4,
      temp bool t_140 = t_137 and t_139,
      temp bool t_141 = t_135 and t_140,
      temp bool t_142 = RClient.state == 2,
      temp bool t_143 = t_141 and t_142;
    guardCondition t_143;
    effect
      Receiver.state = 3,
      RClient.state = 1,
      File = SAME;

  process Sender_SClient
    guardBlock
      temp bool t_144 = Sender.state == 3,
      temp bool t_145 = X == 5,
      temp bool t_146 = Sender.rc == 3,
      temp bool t_147 = t_145 and t_146,
      temp bool t_148 = Sender.i == n,
      temp bool t_149 = t_147 and t_148,
      temp bool t_150 = t_144 and t_149,
      temp bool t_151 = SClient.state == 4,
      temp bool t_152 = t_150 and t_151;
    guardCondition t_152;
    effect
      Sender.state = 5,
      X = 0,
      SClient.state = 1;

  process SClient_Sender
    guardBlock
      temp bool t_153 = SClient.state == 3,
      temp bool t_154 = Sender.state == 1,
      temp bool t_155 = t_153 and t_154;
    guardCondition t_155;
    effect
      SClient.state = 4,
      Sender.state = 2,
      X = 0,
      Sender.i = 1;

  process Sender_K
    guardBlock
      temp bool t_156 = Sender.state == 2,
      temp bool t_157 = K.state == 0,
      temp bool t_158 = t_156 and t_157;
    guardCondition t_158;
    effect
      Sender.state = 3,
      Sender.rc = 0,
      temp bool t_159 = Sender.i == 1,
      temp int t_160 = t_159 * 4,
      temp bool t_161 = Sender.i == n,
      temp int t_162 = t_161 * 2,
      temp int t_163 = t_160 + t_162,
      temp int t_164 = t_163 + Sender.ab,
      K.triple = t_164,
      K.state = 1,
      U = 0;

  process Sender_K
    guardBlock
      temp bool t_165 = Sender.state == 2,
      temp bool t_166 = K.state == 1,
      temp bool t_167 = t_165 and t_166;
    guardCondition t_167;
    effect
      Sender.state = 3,
      Sender.rc = 0,
      temp bool t_168 = Sender.i == 1,
      temp int t_169 = t_168 * 4,
      temp bool t_170 = Sender.i == n,
      temp int t_171 = t_170 * 2,
      temp int t_172 = t_169 + t_171,
      temp int t_173 = t_172 + Sender.ab,
      K.triple = t_173,
      K.state = 2;

  process Sender_K
    guardBlock
      temp bool t_174 = Sender.state == 3,
      temp bool t_175 = X == 5,
      temp bool t_176 = Sender.rc < 3,
      temp bool t_177 = t_175 and t_176,
      temp bool t_178 = t_174 and t_177,
      temp bool t_179 = K.state == 0,
      temp bool t_180 = t_178 and t_179;
    guardCondition t_180;
    effect
      Sender.state = 3,
      X = 0,
      temp int t_181 = Sender.rc + 1,
      Sender.rc = t_181,
      temp bool t_182 = Sender.i == 1,
      temp int t_183 = t_182 * 4,
      temp bool t_184 = Sender.i == n,
      temp int t_185 = t_184 * 2,
      temp int t_186 = t_183 + t_185,
      temp int t_187 = t_186 + Sender.ab,
      K.triple = t_187,
      K.state = 1,
      U = 0;

  process Sender_K
    guardBlock
      temp bool t_188 = Sender.state == 3,
      temp bool t_189 = X == 5,
      temp bool t_190 = Sender.rc < 3,
      temp bool t_191 = t_189 and t_190,
      temp bool t_192 = t_188 and t_191,
      temp bool t_193 = K.state == 1,
      temp bool t_194 = t_192 and t_193;
    guardCondition t_194;
    effect
      Sender.state = 3,
      X = 0,
      temp int t_195 = Sender.rc + 1,
      Sender.rc = t_195,
      temp bool t_196 = Sender.i == 1,
      temp int t_197 = t_196 * 4,
      temp bool t_198 = Sender.i == n,
      temp int t_199 = t_198 * 2,
      temp int t_200 = t_197 + t_199,
      temp int t_201 = t_200 + Sender.ab,
      K.triple = t_201,
      K.state = 2;

  process Receiver_RClient
    guardBlock
      temp bool t_202 = Receiver.state == 2,
      temp byte t_203 = Receiver.triple & 1,
      temp bool t_204 = t_203 == Receiver.exp_ab,
      temp byte t_205 = Receiver.triple & 2,
      temp bool t_206 = t_205 == 2,
      temp bool t_207 = t_204 and t_206,
      temp bool t_208 = t_202 and t_207,
      temp bool t_209 = RClient.state == 0,
      temp bool t_210 = t_208 and t_209;
    guardCondition t_210;
    effect
      Receiver.state = 3,
      RClient.state = 0,
      File = SAME;

  process Receiver_RClient
    guardBlock
      temp bool t_211 = Receiver.state == 2,
      temp byte t_212 = Receiver.triple & 1,
      temp bool t_213 = t_212 == Receiver.exp_ab,
      temp byte t_214 = Receiver.triple & 2,
      temp bool t_215 = t_214 == 2,
      temp bool t_216 = t_213 and t_215,
      temp bool t_217 = t_211 and t_216,
      temp bool t_218 = RClient.state == 1,
      temp bool t_219 = t_217 and t_218;
    guardCondition t_219;
    effect
      Receiver.state = 3,
      RClient.state = 0;

  process Receiver_RClient
    guardBlock
      temp bool t_220 = Receiver.state == 2,
      temp byte t_221 = Receiver.triple & 1,
      temp bool t_222 = t_221 == Receiver.exp_ab,
      temp byte t_223 = Receiver.triple & 2,
      temp bool t_224 = t_223 == 2,
      temp bool t_225 = t_222 and t_224,
      temp bool t_226 = t_220 and t_225,
      temp bool t_227 = RClient.state == 2,
      temp bool t_228 = t_226 and t_227;
    guardCondition t_228;
    effect
      Receiver.state = 3,
      RClient.state = 0,
      File = SAME;

  process Receiver_RClient
    guardBlock
      temp bool t_229 = Receiver.state == 2,
      temp byte t_230 = Receiver.triple & 1,
      temp bool t_231 = t_230 == Receiver.exp_ab,
      temp byte t_232 = Receiver.triple & 6,
      temp bool t_233 = t_232 == 0,
      temp bool t_234 = t_231 and t_233,
      temp bool t_235 = t_229 and t_234,
      temp bool t_236 = RClient.state == 1,
      temp bool t_237 = t_235 and t_236;
    guardCondition t_237;
    effect
      Receiver.state = 3,
      RClient.state = 1;

  process Receiver_L
    guardBlock
      temp bool t_238 = Receiver.state == 2,
      temp byte t_239 = Receiver.triple & 1,
      temp bool t_240 = t_239 != Receiver.exp_ab,
      temp bool t_241 = t_238 and t_240,
      temp bool t_242 = L.state == 0,
      temp bool t_243 = t_241 and t_242;
    guardCondition t_243;
    effect
      Receiver.state = 4,
      L.state = 1,
      V = 0;

  process Receiver_L
    guardBlock
      temp bool t_244 = Receiver.state == 2,
      temp byte t_245 = Receiver.triple & 1,
      temp bool t_246 = t_245 != Receiver.exp_ab,
      temp bool t_247 = t_244 and t_246,
      temp bool t_248 = L.state == 1,
      temp bool t_249 = t_247 and t_248;
    guardCondition t_249;
    effect
      Receiver.state = 4,
      L.state = 2;

  process Receiver_L
    guardBlock
      temp bool t_250 = Receiver.state == 3,
      temp bool t_251 = L.state == 0,
      temp bool t_252 = t_250 and t_251;
    guardCondition t_252;
    effect
      Receiver.state = 4,
      Z = 0,
      temp int t_253 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_253,
      L.state = 1,
      V = 0;

  process Receiver_L
    guardBlock
      temp bool t_254 = Receiver.state == 3,
      temp bool t_255 = L.state == 1,
      temp bool t_256 = t_254 and t_255;
    guardCondition t_256;
    effect
      Receiver.state = 4,
      Z = 0,
      temp int t_257 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_257,
      L.state = 2;

  process L_Sender
    guardBlock
      temp bool t_258 = L.state == 1,
      temp bool t_259 = V > 0,
      temp bool t_260 = V <= 2,
      temp bool t_261 = t_259 and t_260,
      temp bool t_262 = t_258 and t_261,
      temp bool t_263 = Sender.state == 3,
      temp bool t_264 = X < 5,
      temp bool t_265 = t_263 and t_264,
      temp bool t_266 = t_262 and t_265;
    guardCondition t_266;
    effect
      L.state = 0,
      Sender.state = 4,
      X = 0,
      temp int t_267 = 1 - Sender.ab,
      Sender.ab = t_267;

  process Sender_SClient
    guardBlock
      temp bool t_268 = Sender.state == 4,
      temp bool t_269 = Sender.i == n,
      temp bool t_270 = t_268 and t_269,
      temp bool t_271 = SClient.state == 4,
      temp bool t_272 = t_270 and t_271;
    guardCondition t_272;
    effect
      Sender.state = 1,
      SClient.state = 0;

  process Sender_SClient
    guardBlock
      temp bool t_273 = Sender.state == 3,
      temp bool t_274 = X == 5,
      temp bool t_275 = Sender.rc == 3,
      temp bool t_276 = t_274 and t_275,
      temp bool t_277 = Sender.i < n,
      temp bool t_278 = t_276 and t_277,
      temp bool t_279 = t_273 and t_278,
      temp bool t_280 = SClient.state == 4,
      temp bool t_281 = t_279 and t_280;
    guardCondition t_281;
    effect
      Sender.state = 5,
      X = 0,
      SClient.state = 2;

  process Receiver_RClient
    guardBlock
      temp bool t_282 = Receiver.state == 4,
      temp bool t_283 = Z == 30,
      temp byte t_284 = Receiver.triple & 2,
      temp bool t_285 = t_284 == 0,
      temp bool t_286 = t_283 and t_285,
      temp bool t_287 = t_282 and t_286,
      temp bool t_288 = RClient.state == 1,
      temp bool t_289 = t_287 and t_288;
    guardCondition t_289;
    effect
      Receiver.state = 0,
      RClient.state = 2;

 
