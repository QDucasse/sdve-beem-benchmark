const int n = 3;
const int SYNC = 63;
const int maxtime = 64;
const byte SAME = 0;
const byte OTHER = 1;
int X = 0;
int U = 0;
int V = 0;
int W = 0;
int Z = 0;
byte File = SAME;
state {time(0)} clock.state = 0;
state {new_file(0), first_safe_frame(1), frame_received(2), frame_reported(3), idle(4)} Receiver.state = 0;
byte Receiver.exp_ab = 0;
byte Receiver.triple = 0;
state {init_state(0), idle(1), next_frame(2), wait_ack(3), success(4), error(5)} Sender.state = 0;
byte Sender.ab = 0;
byte Sender.i = 0;
byte Sender.rc = 0;
state {start(0), in_transit(1), BAD(2)} K.state = 0;
byte K.triple = 0;
state {start(0), in_transit(1), BAD(2)} L.state = 0;
state {ok(0), dk(1), nok(2), send_req(3), file_req(4)} SClient.state = 0;
state {ok(0), inc(1), nok(2)} RClient.state = 0;

  process clock
    guardBlock
      temp bool t_0 = clock.state == 0,
      temp bool t_1 = Receiver.state == 1,
      temp bool t_2 = not t_1,
      temp int t_3 = W + 1,
      temp bool t_4 = t_3 <= 0,
      temp bool t_5 = t_2 or t_4,
      temp bool t_6 = Receiver.state == 2,
      temp bool t_7 = not t_6,
      temp int t_8 = W + 1,
      temp bool t_9 = t_8 <= 0,
      temp bool t_10 = t_7 or t_9,
      temp bool t_11 = t_5 and t_10,
      temp bool t_12 = Receiver.state == 3,
      temp bool t_13 = not t_12,
      temp int t_14 = W + 1,
      temp bool t_15 = t_14 <= 0,
      temp bool t_16 = t_13 or t_15,
      temp bool t_17 = t_11 and t_16,
      temp bool t_18 = Receiver.state == 4,
      temp bool t_19 = not t_18,
      temp int t_20 = Z + 1,
      temp bool t_21 = t_20 <= 63,
      temp bool t_22 = t_19 or t_21,
      temp bool t_23 = t_17 and t_22,
      temp bool t_24 = Sender.state == 2,
      temp bool t_25 = not t_24,
      temp int t_26 = X + 1,
      temp bool t_27 = t_26 <= 0,
      temp bool t_28 = t_25 or t_27,
      temp bool t_29 = t_23 and t_28,
      temp bool t_30 = Sender.state == 3,
      temp bool t_31 = not t_30,
      temp int t_32 = X + 1,
      temp bool t_33 = t_32 <= 5,
      temp bool t_34 = t_31 or t_33,
      temp bool t_35 = t_29 and t_34,
      temp bool t_36 = Sender.state == 4,
      temp bool t_37 = not t_36,
      temp int t_38 = X + 1,
      temp bool t_39 = t_38 <= 0,
      temp bool t_40 = t_37 or t_39,
      temp bool t_41 = t_35 and t_40,
      temp bool t_42 = Sender.state == 5,
      temp bool t_43 = not t_42,
      temp int t_44 = X + 1,
      temp bool t_45 = t_44 <= 63,
      temp bool t_46 = t_43 or t_45,
      temp bool t_47 = t_41 and t_46,
      temp bool t_48 = K.state == 1,
      temp bool t_49 = not t_48,
      temp int t_50 = U + 1,
      temp bool t_51 = t_50 <= 2,
      temp bool t_52 = t_49 or t_51,
      temp bool t_53 = t_47 and t_52,
      temp bool t_54 = L.state == 1,
      temp bool t_55 = not t_54,
      temp int t_56 = V + 1,
      temp bool t_57 = t_56 <= 2,
      temp bool t_58 = t_55 or t_57,
      temp bool t_59 = t_53 and t_58,
      temp bool t_60 = X < 64,
      temp bool t_61 = U < 64,
      temp bool t_62 = t_60 or t_61,
      temp bool t_63 = V < 64,
      temp bool t_64 = t_62 or t_63,
      temp bool t_65 = W < 64,
      temp bool t_66 = t_64 or t_65,
      temp bool t_67 = Z < 64,
      temp bool t_68 = t_66 or t_67,
      temp bool t_69 = t_59 and t_68,
      temp bool t_70 = t_0 and t_69;
    guardCondition t_70;
    effect
      clock.state = 0,
      temp bool t_71 = X < 64,
      temp int t_72 = X + t_71,
      X = t_72,
      temp bool t_73 = U < 64,
      temp int t_74 = U + t_73,
      U = t_74,
      temp bool t_75 = V < 64,
      temp int t_76 = V + t_75,
      V = t_76,
      temp bool t_77 = W < 64,
      temp int t_78 = W + t_77,
      W = t_78,
      temp bool t_79 = Z < 64,
      temp int t_80 = Z + t_79,
      Z = t_80;

  process Receiver
    guardBlock
      temp bool t_81 = Receiver.state == 1;
    guardCondition t_81;
    effect
      Receiver.state = 2,
      temp byte t_82 = Receiver.triple & 1,
      Receiver.exp_ab = t_82;

  process Receiver
    guardBlock
      temp bool t_83 = Receiver.state == 4,
      temp bool t_84 = Z == 63,
      temp byte t_85 = Receiver.triple & 2,
      temp bool t_86 = t_85 == 2,
      temp bool t_87 = t_84 and t_86,
      temp bool t_88 = t_83 and t_87;
    guardCondition t_88;
    effect
      Receiver.state = 0;

  process Sender
    guardBlock
      temp bool t_89 = Sender.state == 0;
    guardCondition t_89;
    effect
      Sender.state = 1,
      Sender.ab = 0;

  process Sender
    guardBlock
      temp bool t_90 = Sender.state == 4,
      temp bool t_91 = Sender.i < n,
      temp bool t_92 = t_90 and t_91;
    guardCondition t_92;
    effect
      Sender.state = 2,
      temp int t_93 = Sender.i + 1,
      Sender.i = t_93;

  process Sender
    guardBlock
      temp bool t_94 = Sender.state == 5,
      temp bool t_95 = X == 63,
      temp bool t_96 = t_94 and t_95;
    guardCondition t_96;
    effect
      Sender.state = 1,
      Sender.ab = 0;

  process K
    guardBlock
      temp bool t_97 = K.state == 1,
      temp bool t_98 = U > 0,
      temp bool t_99 = U <= 2,
      temp bool t_100 = t_98 and t_99,
      temp bool t_101 = t_97 and t_100;
    guardCondition t_101;
    effect
      K.state = 0;

  process L
    guardBlock
      temp bool t_102 = L.state == 1,
      temp bool t_103 = V > 0,
      temp bool t_104 = V <= 2,
      temp bool t_105 = t_103 and t_104,
      temp bool t_106 = t_102 and t_105;
    guardCondition t_106;
    effect
      L.state = 0;

  process SClient
    guardBlock
      temp bool t_107 = SClient.state == 0;
    guardCondition t_107;
    effect
      SClient.state = 3,
      File = OTHER;

  process SClient
    guardBlock
      temp bool t_108 = SClient.state == 1;
    guardCondition t_108;
    effect
      SClient.state = 3,
      File = OTHER;

  process SClient
    guardBlock
      temp bool t_109 = SClient.state == 2;
    guardCondition t_109;
    effect
      SClient.state = 3,
      File = OTHER;

  process Sender_SClient
    guardBlock
      temp bool t_110 = Sender.state == 3,
      temp bool t_111 = X == 5,
      temp bool t_112 = Sender.rc == 7,
      temp bool t_113 = t_111 and t_112,
      temp bool t_114 = Sender.i == n,
      temp bool t_115 = t_113 and t_114,
      temp bool t_116 = t_110 and t_115,
      temp bool t_117 = SClient.state == 4,
      temp bool t_118 = t_116 and t_117;
    guardCondition t_118;
    effect
      Sender.state = 5,
      X = 0,
      SClient.state = 1;

  process L_Sender
    guardBlock
      temp bool t_119 = L.state == 1,
      temp bool t_120 = V > 0,
      temp bool t_121 = V <= 2,
      temp bool t_122 = t_120 and t_121,
      temp bool t_123 = t_119 and t_122,
      temp bool t_124 = Sender.state == 3,
      temp bool t_125 = X < 5,
      temp bool t_126 = t_124 and t_125,
      temp bool t_127 = t_123 and t_126;
    guardCondition t_127;
    effect
      L.state = 0,
      Sender.state = 4,
      X = 0,
      temp int t_128 = 1 - Sender.ab,
      Sender.ab = t_128;

  process SClient_Sender
    guardBlock
      temp bool t_129 = SClient.state == 3,
      temp bool t_130 = Sender.state == 1,
      temp bool t_131 = t_129 and t_130;
    guardCondition t_131;
    effect
      SClient.state = 4,
      Sender.state = 2,
      X = 0,
      Sender.i = 1;

  process Receiver_RClient
    guardBlock
      temp bool t_132 = Receiver.state == 2,
      temp byte t_133 = Receiver.triple & 1,
      temp bool t_134 = t_133 == Receiver.exp_ab,
      temp byte t_135 = Receiver.triple & 6,
      temp bool t_136 = t_135 == 4,
      temp bool t_137 = t_134 and t_136,
      temp bool t_138 = t_132 and t_137,
      temp bool t_139 = RClient.state == 0,
      temp bool t_140 = t_138 and t_139;
    guardCondition t_140;
    effect
      Receiver.state = 3,
      RClient.state = 1,
      File = SAME;

  process Receiver_RClient
    guardBlock
      temp bool t_141 = Receiver.state == 2,
      temp byte t_142 = Receiver.triple & 1,
      temp bool t_143 = t_142 == Receiver.exp_ab,
      temp byte t_144 = Receiver.triple & 6,
      temp bool t_145 = t_144 == 4,
      temp bool t_146 = t_143 and t_145,
      temp bool t_147 = t_141 and t_146,
      temp bool t_148 = RClient.state == 2,
      temp bool t_149 = t_147 and t_148;
    guardCondition t_149;
    effect
      Receiver.state = 3,
      RClient.state = 1,
      File = SAME;

  process K_Receiver
    guardBlock
      temp bool t_150 = K.state == 1,
      temp bool t_151 = U > 0,
      temp bool t_152 = U <= 2,
      temp bool t_153 = t_151 and t_152,
      temp bool t_154 = t_150 and t_153,
      temp bool t_155 = Receiver.state == 0,
      temp bool t_156 = t_154 and t_155;
    guardCondition t_156;
    effect
      K.state = 0,
      Receiver.triple = K.triple,
      Receiver.state = 1,
      W = 0,
      Z = 0;

  process K_Receiver
    guardBlock
      temp bool t_157 = K.state == 1,
      temp bool t_158 = U > 0,
      temp bool t_159 = U <= 2,
      temp bool t_160 = t_158 and t_159,
      temp bool t_161 = t_157 and t_160,
      temp bool t_162 = Receiver.state == 4,
      temp bool t_163 = Z < 63,
      temp bool t_164 = t_162 and t_163,
      temp bool t_165 = t_161 and t_164;
    guardCondition t_165;
    effect
      K.state = 0,
      Receiver.triple = K.triple,
      Receiver.state = 2,
      W = 0;

  process Receiver_RClient
    guardBlock
      temp bool t_166 = Receiver.state == 4,
      temp bool t_167 = Z == 63,
      temp byte t_168 = Receiver.triple & 2,
      temp bool t_169 = t_168 == 0,
      temp bool t_170 = t_167 and t_169,
      temp bool t_171 = t_166 and t_170,
      temp bool t_172 = RClient.state == 1,
      temp bool t_173 = t_171 and t_172;
    guardCondition t_173;
    effect
      Receiver.state = 0,
      RClient.state = 2;

  process Receiver_L
    guardBlock
      temp bool t_174 = Receiver.state == 2,
      temp byte t_175 = Receiver.triple & 1,
      temp bool t_176 = t_175 != Receiver.exp_ab,
      temp bool t_177 = t_174 and t_176,
      temp bool t_178 = L.state == 0,
      temp bool t_179 = t_177 and t_178;
    guardCondition t_179;
    effect
      Receiver.state = 4,
      L.state = 1,
      V = 0;

  process Receiver_L
    guardBlock
      temp bool t_180 = Receiver.state == 2,
      temp byte t_181 = Receiver.triple & 1,
      temp bool t_182 = t_181 != Receiver.exp_ab,
      temp bool t_183 = t_180 and t_182,
      temp bool t_184 = L.state == 1,
      temp bool t_185 = t_183 and t_184;
    guardCondition t_185;
    effect
      Receiver.state = 4,
      L.state = 2;

  process Receiver_L
    guardBlock
      temp bool t_186 = Receiver.state == 3,
      temp bool t_187 = L.state == 0,
      temp bool t_188 = t_186 and t_187;
    guardCondition t_188;
    effect
      Receiver.state = 4,
      Z = 0,
      temp int t_189 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_189,
      L.state = 1,
      V = 0;

  process Receiver_L
    guardBlock
      temp bool t_190 = Receiver.state == 3,
      temp bool t_191 = L.state == 1,
      temp bool t_192 = t_190 and t_191;
    guardCondition t_192;
    effect
      Receiver.state = 4,
      Z = 0,
      temp int t_193 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_193,
      L.state = 2;

  process Sender_SClient
    guardBlock
      temp bool t_194 = Sender.state == 4,
      temp bool t_195 = Sender.i == n,
      temp bool t_196 = t_194 and t_195,
      temp bool t_197 = SClient.state == 4,
      temp bool t_198 = t_196 and t_197;
    guardCondition t_198;
    effect
      Sender.state = 1,
      SClient.state = 0;

  process Receiver_RClient
    guardBlock
      temp bool t_199 = Receiver.state == 2,
      temp byte t_200 = Receiver.triple & 1,
      temp bool t_201 = t_200 == Receiver.exp_ab,
      temp byte t_202 = Receiver.triple & 6,
      temp bool t_203 = t_202 == 0,
      temp bool t_204 = t_201 and t_203,
      temp bool t_205 = t_199 and t_204,
      temp bool t_206 = RClient.state == 1,
      temp bool t_207 = t_205 and t_206;
    guardCondition t_207;
    effect
      Receiver.state = 3,
      RClient.state = 1;

  process Sender_SClient
    guardBlock
      temp bool t_208 = Sender.state == 3,
      temp bool t_209 = X == 5,
      temp bool t_210 = Sender.rc == 7,
      temp bool t_211 = t_209 and t_210,
      temp bool t_212 = Sender.i < n,
      temp bool t_213 = t_211 and t_212,
      temp bool t_214 = t_208 and t_213,
      temp bool t_215 = SClient.state == 4,
      temp bool t_216 = t_214 and t_215;
    guardCondition t_216;
    effect
      Sender.state = 5,
      X = 0,
      SClient.state = 2;

  process Receiver_RClient
    guardBlock
      temp bool t_217 = Receiver.state == 2,
      temp byte t_218 = Receiver.triple & 1,
      temp bool t_219 = t_218 == Receiver.exp_ab,
      temp byte t_220 = Receiver.triple & 2,
      temp bool t_221 = t_220 == 2,
      temp bool t_222 = t_219 and t_221,
      temp bool t_223 = t_217 and t_222,
      temp bool t_224 = RClient.state == 0,
      temp bool t_225 = t_223 and t_224;
    guardCondition t_225;
    effect
      Receiver.state = 3,
      RClient.state = 0,
      File = SAME;

  process Receiver_RClient
    guardBlock
      temp bool t_226 = Receiver.state == 2,
      temp byte t_227 = Receiver.triple & 1,
      temp bool t_228 = t_227 == Receiver.exp_ab,
      temp byte t_229 = Receiver.triple & 2,
      temp bool t_230 = t_229 == 2,
      temp bool t_231 = t_228 and t_230,
      temp bool t_232 = t_226 and t_231,
      temp bool t_233 = RClient.state == 1,
      temp bool t_234 = t_232 and t_233;
    guardCondition t_234;
    effect
      Receiver.state = 3,
      RClient.state = 0;

  process Receiver_RClient
    guardBlock
      temp bool t_235 = Receiver.state == 2,
      temp byte t_236 = Receiver.triple & 1,
      temp bool t_237 = t_236 == Receiver.exp_ab,
      temp byte t_238 = Receiver.triple & 2,
      temp bool t_239 = t_238 == 2,
      temp bool t_240 = t_237 and t_239,
      temp bool t_241 = t_235 and t_240,
      temp bool t_242 = RClient.state == 2,
      temp bool t_243 = t_241 and t_242;
    guardCondition t_243;
    effect
      Receiver.state = 3,
      RClient.state = 0,
      File = SAME;

  process Sender_K
    guardBlock
      temp bool t_244 = Sender.state == 2,
      temp bool t_245 = K.state == 0,
      temp bool t_246 = t_244 and t_245;
    guardCondition t_246;
    effect
      Sender.state = 3,
      Sender.rc = 0,
      temp bool t_247 = Sender.i == 1,
      temp int t_248 = t_247 * 4,
      temp bool t_249 = Sender.i == n,
      temp int t_250 = t_249 * 2,
      temp int t_251 = t_248 + t_250,
      temp int t_252 = t_251 + Sender.ab,
      K.triple = t_252,
      K.state = 1,
      U = 0;

  process Sender_K
    guardBlock
      temp bool t_253 = Sender.state == 2,
      temp bool t_254 = K.state == 1,
      temp bool t_255 = t_253 and t_254;
    guardCondition t_255;
    effect
      Sender.state = 3,
      Sender.rc = 0,
      temp bool t_256 = Sender.i == 1,
      temp int t_257 = t_256 * 4,
      temp bool t_258 = Sender.i == n,
      temp int t_259 = t_258 * 2,
      temp int t_260 = t_257 + t_259,
      temp int t_261 = t_260 + Sender.ab,
      K.triple = t_261,
      K.state = 2;

  process Sender_K
    guardBlock
      temp bool t_262 = Sender.state == 3,
      temp bool t_263 = X == 5,
      temp bool t_264 = Sender.rc < 7,
      temp bool t_265 = t_263 and t_264,
      temp bool t_266 = t_262 and t_265,
      temp bool t_267 = K.state == 0,
      temp bool t_268 = t_266 and t_267;
    guardCondition t_268;
    effect
      Sender.state = 3,
      X = 0,
      temp int t_269 = Sender.rc + 1,
      Sender.rc = t_269,
      temp bool t_270 = Sender.i == 1,
      temp int t_271 = t_270 * 4,
      temp bool t_272 = Sender.i == n,
      temp int t_273 = t_272 * 2,
      temp int t_274 = t_271 + t_273,
      temp int t_275 = t_274 + Sender.ab,
      K.triple = t_275,
      K.state = 1,
      U = 0;

  process Sender_K
    guardBlock
      temp bool t_276 = Sender.state == 3,
      temp bool t_277 = X == 5,
      temp bool t_278 = Sender.rc < 7,
      temp bool t_279 = t_277 and t_278,
      temp bool t_280 = t_276 and t_279,
      temp bool t_281 = K.state == 1,
      temp bool t_282 = t_280 and t_281;
    guardCondition t_282;
    effect
      Sender.state = 3,
      X = 0,
      temp int t_283 = Sender.rc + 1,
      Sender.rc = t_283,
      temp bool t_284 = Sender.i == 1,
      temp int t_285 = t_284 * 4,
      temp bool t_286 = Sender.i == n,
      temp int t_287 = t_286 * 2,
      temp int t_288 = t_285 + t_287,
      temp int t_289 = t_288 + Sender.ab,
      K.triple = t_289,
      K.state = 2;
