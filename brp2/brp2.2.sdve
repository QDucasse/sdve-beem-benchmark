int n = 3;
int SYNC = 22;
int maxtime = 23;
int X = 0;
int U = 0;
int V = 0;
int W = 0;
int Z = 0;
state {time(0)} clock.state = 0;
state {new_file(0), first_safe_frame(1), frame_received(2), frame_reported(3), idle(4)} Receiver.state = 0;
state {init_state(0), idle(1), next_frame(2), wait_ack(3), success(4), error(5)} Sender.state = 0;
state {start(0), in_transit(1), BAD(2)} K.state = 0;
state {start(0), in_transit(1), BAD(2)} L.state = 0;
state {ok(0), dk(1), nok(2), send_req(3), file_req(4)} SClient.state = 0;
state {ok(0), inc(1), nok(2)} RClient.state = 0;
byte SAME = 0;
byte OTHER = 1;
byte File = 0;
byte Receiver.exp_ab = 0;
byte Receiver.triple = 0;
byte Sender.ab = 0;
byte Sender.i = 0;
byte Sender.rc = 0;
byte K.triple = 0;

  process clock
    guardBlock
      temp bool t_0 = clock.state == 0,
      temp bool t_1 = Receiver.state == 1,
      temp bool t_2 = not t_1,
      temp int t_3 = W + 1,
      temp bool t_4 = t_3 <= 0,
      temp bool t_5 = t_2 or t_4,
      temp bool t_6 = Receiver.state == 2,
      temp bool t_7 = not t_6,
      temp int t_8 = W + 1,
      temp bool t_9 = t_8 <= 0,
      temp bool t_10 = t_7 or t_9,
      temp bool t_11 = t_5 and t_10,
      temp bool t_12 = Receiver.state == 3,
      temp bool t_13 = not t_12,
      temp int t_14 = W + 1,
      temp bool t_15 = t_14 <= 0,
      temp bool t_16 = t_13 or t_15,
      temp bool t_17 = t_11 and t_16,
      temp bool t_18 = Receiver.state == 4,
      temp bool t_19 = not t_18,
      temp int t_20 = Z + 1,
      temp bool t_21 = t_20 <= 22,
      temp bool t_22 = t_19 or t_21,
      temp bool t_23 = t_17 and t_22,
      temp bool t_24 = Sender.state == 2,
      temp bool t_25 = not t_24,
      temp int t_26 = X + 1,
      temp bool t_27 = t_26 <= 0,
      temp bool t_28 = t_25 or t_27,
      temp bool t_29 = t_23 and t_28,
      temp bool t_30 = Sender.state == 3,
      temp bool t_31 = not t_30,
      temp int t_32 = X + 1,
      temp bool t_33 = t_32 <= 4,
      temp bool t_34 = t_31 or t_33,
      temp bool t_35 = t_29 and t_34,
      temp bool t_36 = Sender.state == 4,
      temp bool t_37 = not t_36,
      temp int t_38 = X + 1,
      temp bool t_39 = t_38 <= 0,
      temp bool t_40 = t_37 or t_39,
      temp bool t_41 = t_35 and t_40,
      temp bool t_42 = Sender.state == 5,
      temp bool t_43 = not t_42,
      temp int t_44 = X + 1,
      temp bool t_45 = t_44 <= 22,
      temp bool t_46 = t_43 or t_45,
      temp bool t_47 = t_41 and t_46,
      temp bool t_48 = K.state == 1,
      temp bool t_49 = not t_48,
      temp int t_50 = U + 1,
      temp bool t_51 = t_50 <= 2,
      temp bool t_52 = t_49 or t_51,
      temp bool t_53 = t_47 and t_52,
      temp bool t_54 = L.state == 1,
      temp bool t_55 = not t_54,
      temp int t_56 = V + 1,
      temp bool t_57 = t_56 <= 2,
      temp bool t_58 = t_55 or t_57,
      temp bool t_59 = t_53 and t_58,
      temp bool t_60 = X < 23,
      temp bool t_61 = U < 23,
      temp bool t_62 = t_60 or t_61,
      temp bool t_63 = V < 23,
      temp bool t_64 = t_62 or t_63,
      temp bool t_65 = W < 23,
      temp bool t_66 = t_64 or t_65,
      temp bool t_67 = Z < 23,
      temp bool t_68 = t_66 or t_67,
      temp bool t_69 = t_59 and t_68,
      temp bool t_70 = t_0 and t_69;
    guardCondition t_70;
    effect
      clock.state = 0,
      temp bool t_71 = X < 23,
      temp int t_72 = X + t_71,
      X = t_72,
      temp bool t_73 = U < 23,
      temp int t_74 = U + t_73,
      U = t_74,
      temp bool t_75 = V < 23,
      temp int t_76 = V + t_75,
      V = t_76,
      temp bool t_77 = W < 23,
      temp int t_78 = W + t_77,
      W = t_78,
      temp bool t_79 = Z < 23,
      temp int t_80 = Z + t_79,
      Z = t_80;

  process Receiver
    guardBlock
      temp bool t_81 = Receiver.state == 1;
    guardCondition t_81;
    effect
      Receiver.state = 2,
      temp byte t_82 = Receiver.triple and 1,
      Receiver.exp_ab = t_82;

  process Receiver
    guardBlock
      temp bool t_83 = Receiver.state == 4,
      temp bool t_84 = Z == 22,
      temp byte t_85 = Receiver.triple and 2,
      temp bool t_86 = t_85 == 2,
      temp bool t_87 = t_84 and t_86,
      temp bool t_88 = t_83 and t_87;
    guardCondition t_88;
    effect
      Receiver.state = 0;

  process Sender
    guardBlock
      temp bool t_89 = Sender.state == 0;
    guardCondition t_89;
    effect
      Sender.state = 1,
      Sender.ab = 0;

  process Sender
    guardBlock
      temp bool t_90 = Sender.state == 4,
      temp bool t_91 = Sender.i < n,
      temp bool t_92 = t_90 and t_91;
    guardCondition t_92;
    effect
      Sender.state = 2,
      temp int t_93 = Sender.i + 1,
      Sender.i = t_93;

  process Sender
    guardBlock
      temp bool t_94 = Sender.state == 5,
      temp bool t_95 = X == 22,
      temp bool t_96 = t_94 and t_95;
    guardCondition t_96;
    effect
      Sender.state = 1,
      Sender.ab = 0;

  process K
    guardBlock
      temp bool t_97 = K.state == 1,
      temp bool t_98 = U > 0,
      temp bool t_99 = U <= 2,
      temp bool t_100 = t_98 and t_99,
      temp bool t_101 = t_97 and t_100;
    guardCondition t_101;
    effect
      K.state = 0;

  process L
    guardBlock
      temp bool t_102 = L.state == 1,
      temp bool t_103 = V > 0,
      temp bool t_104 = V <= 2,
      temp bool t_105 = t_103 and t_104,
      temp bool t_106 = t_102 and t_105;
    guardCondition t_106;
    effect
      L.state = 0;

  process SClient
    guardBlock
      temp bool t_107 = SClient.state == 0;
    guardCondition t_107;
    effect
      SClient.state = 3,
      File = OTHER;

  process SClient
    guardBlock
      temp bool t_108 = SClient.state == 1;
    guardCondition t_108;
    effect
      SClient.state = 3,
      File = OTHER;

  process SClient
    guardBlock
      temp bool t_109 = SClient.state == 2;
    guardCondition t_109;
    effect
      SClient.state = 3,
      File = OTHER;

  process Sender_K
    guardBlock
      temp bool t_110 = Sender.state == 2,
      temp bool t_111 = K.state == 0,
      temp bool t_112 = t_110 and t_111;
    guardCondition t_112;
    effect
      Sender.state = 3,
      Sender.rc = 0,
      temp bool t_113 = Sender.i == 1,
      temp int t_114 = t_113 * 4,
      temp bool t_115 = Sender.i == n,
      temp int t_116 = t_115 * 2,
      temp int t_117 = t_114 + t_116,
      temp int t_118 = t_117 + Sender.ab,
      K.triple = t_118,
      K.state = 1,
      U = 0;

  process Sender_K
    guardBlock
      temp bool t_119 = Sender.state == 2,
      temp bool t_120 = K.state == 1,
      temp bool t_121 = t_119 and t_120;
    guardCondition t_121;
    effect
      Sender.state = 3,
      Sender.rc = 0,
      temp bool t_122 = Sender.i == 1,
      temp int t_123 = t_122 * 4,
      temp bool t_124 = Sender.i == n,
      temp int t_125 = t_124 * 2,
      temp int t_126 = t_123 + t_125,
      temp int t_127 = t_126 + Sender.ab,
      K.triple = t_127,
      K.state = 2;

  process Sender_K
    guardBlock
      temp bool t_128 = Sender.state == 3,
      temp bool t_129 = X == 4,
      temp bool t_130 = Sender.rc < 2,
      temp bool t_131 = t_129 and t_130,
      temp bool t_132 = t_128 and t_131,
      temp bool t_133 = K.state == 0,
      temp bool t_134 = t_132 and t_133;
    guardCondition t_134;
    effect
      Sender.state = 3,
      X = 0,
      temp int t_135 = Sender.rc + 1,
      Sender.rc = t_135,
      temp bool t_136 = Sender.i == 1,
      temp int t_137 = t_136 * 4,
      temp bool t_138 = Sender.i == n,
      temp int t_139 = t_138 * 2,
      temp int t_140 = t_137 + t_139,
      temp int t_141 = t_140 + Sender.ab,
      K.triple = t_141,
      K.state = 1,
      U = 0;

  process Sender_K
    guardBlock
      temp bool t_142 = Sender.state == 3,
      temp bool t_143 = X == 4,
      temp bool t_144 = Sender.rc < 2,
      temp bool t_145 = t_143 and t_144,
      temp bool t_146 = t_142 and t_145,
      temp bool t_147 = K.state == 1,
      temp bool t_148 = t_146 and t_147;
    guardCondition t_148;
    effect
      Sender.state = 3,
      X = 0,
      temp int t_149 = Sender.rc + 1,
      Sender.rc = t_149,
      temp bool t_150 = Sender.i == 1,
      temp int t_151 = t_150 * 4,
      temp bool t_152 = Sender.i == n,
      temp int t_153 = t_152 * 2,
      temp int t_154 = t_151 + t_153,
      temp int t_155 = t_154 + Sender.ab,
      K.triple = t_155,
      K.state = 2;

  process Sender_SClient
    guardBlock
      temp bool t_156 = Sender.state == 4,
      temp bool t_157 = Sender.i == n,
      temp bool t_158 = t_156 and t_157,
      temp bool t_159 = SClient.state == 4,
      temp bool t_160 = t_158 and t_159;
    guardCondition t_160;
    effect
      Sender.state = 1,
      SClient.state = 0;

  process Receiver_RClient
    guardBlock
      temp bool t_161 = Receiver.state == 2,
      temp byte t_162 = Receiver.triple and 1,
      temp bool t_163 = t_162 == Receiver.exp_ab,
      temp byte t_164 = Receiver.triple and 6,
      temp bool t_165 = t_164 == 0,
      temp bool t_166 = t_163 and t_165,
      temp bool t_167 = t_161 and t_166,
      temp bool t_168 = RClient.state == 1,
      temp bool t_169 = t_167 and t_168;
    guardCondition t_169;
    effect
      Receiver.state = 3,
      RClient.state = 1;

  process Receiver_RClient
    guardBlock
      temp bool t_170 = Receiver.state == 2,
      temp byte t_171 = Receiver.triple and 1,
      temp bool t_172 = t_171 == Receiver.exp_ab,
      temp byte t_173 = Receiver.triple and 6,
      temp bool t_174 = t_173 == 4,
      temp bool t_175 = t_172 and t_174,
      temp bool t_176 = t_170 and t_175,
      temp bool t_177 = RClient.state == 0,
      temp bool t_178 = t_176 and t_177;
    guardCondition t_178;
    effect
      Receiver.state = 3,
      RClient.state = 1,
      File = SAME;

  process Receiver_RClient
    guardBlock
      temp bool t_179 = Receiver.state == 2,
      temp byte t_180 = Receiver.triple and 1,
      temp bool t_181 = t_180 == Receiver.exp_ab,
      temp byte t_182 = Receiver.triple and 6,
      temp bool t_183 = t_182 == 4,
      temp bool t_184 = t_181 and t_183,
      temp bool t_185 = t_179 and t_184,
      temp bool t_186 = RClient.state == 2,
      temp bool t_187 = t_185 and t_186;
    guardCondition t_187;
    effect
      Receiver.state = 3,
      RClient.state = 1,
      File = SAME;

  process Receiver_L
    guardBlock
      temp bool t_188 = Receiver.state == 2,
      temp byte t_189 = Receiver.triple and 1,
      temp bool t_190 = t_189 != Receiver.exp_ab,
      temp bool t_191 = t_188 and t_190,
      temp bool t_192 = L.state == 0,
      temp bool t_193 = t_191 and t_192;
    guardCondition t_193;
    effect
      Receiver.state = 4,
      L.state = 1,
      V = 0;

  process Receiver_L
    guardBlock
      temp bool t_194 = Receiver.state == 2,
      temp byte t_195 = Receiver.triple and 1,
      temp bool t_196 = t_195 != Receiver.exp_ab,
      temp bool t_197 = t_194 and t_196,
      temp bool t_198 = L.state == 1,
      temp bool t_199 = t_197 and t_198;
    guardCondition t_199;
    effect
      Receiver.state = 4,
      L.state = 2;

  process Receiver_L
    guardBlock
      temp bool t_200 = Receiver.state == 3,
      temp bool t_201 = L.state == 0,
      temp bool t_202 = t_200 and t_201;
    guardCondition t_202;
    effect
      Receiver.state = 4,
      Z = 0,
      temp int t_203 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_203,
      L.state = 1,
      V = 0;

  process Receiver_L
    guardBlock
      temp bool t_204 = Receiver.state == 3,
      temp bool t_205 = L.state == 1,
      temp bool t_206 = t_204 and t_205;
    guardCondition t_206;
    effect
      Receiver.state = 4,
      Z = 0,
      temp int t_207 = 1 - Receiver.exp_ab,
      Receiver.exp_ab = t_207,
      L.state = 2;

  process Receiver_RClient
    guardBlock
      temp bool t_208 = Receiver.state == 4,
      temp bool t_209 = Z == 22,
      temp byte t_210 = Receiver.triple and 2,
      temp bool t_211 = t_210 == 0,
      temp bool t_212 = t_209 and t_211,
      temp bool t_213 = t_208 and t_212,
      temp bool t_214 = RClient.state == 1,
      temp bool t_215 = t_213 and t_214;
    guardCondition t_215;
    effect
      Receiver.state = 0,
      RClient.state = 2;

  process Receiver_RClient
    guardBlock
      temp bool t_216 = Receiver.state == 2,
      temp byte t_217 = Receiver.triple and 1,
      temp bool t_218 = t_217 == Receiver.exp_ab,
      temp byte t_219 = Receiver.triple and 2,
      temp bool t_220 = t_219 == 2,
      temp bool t_221 = t_218 and t_220,
      temp bool t_222 = t_216 and t_221,
      temp bool t_223 = RClient.state == 0,
      temp bool t_224 = t_222 and t_223;
    guardCondition t_224;
    effect
      Receiver.state = 3,
      RClient.state = 0,
      File = SAME;

  process Receiver_RClient
    guardBlock
      temp bool t_225 = Receiver.state == 2,
      temp byte t_226 = Receiver.triple and 1,
      temp bool t_227 = t_226 == Receiver.exp_ab,
      temp byte t_228 = Receiver.triple and 2,
      temp bool t_229 = t_228 == 2,
      temp bool t_230 = t_227 and t_229,
      temp bool t_231 = t_225 and t_230,
      temp bool t_232 = RClient.state == 1,
      temp bool t_233 = t_231 and t_232;
    guardCondition t_233;
    effect
      Receiver.state = 3,
      RClient.state = 0;

  process Receiver_RClient
    guardBlock
      temp bool t_234 = Receiver.state == 2,
      temp byte t_235 = Receiver.triple and 1,
      temp bool t_236 = t_235 == Receiver.exp_ab,
      temp byte t_237 = Receiver.triple and 2,
      temp bool t_238 = t_237 == 2,
      temp bool t_239 = t_236 and t_238,
      temp bool t_240 = t_234 and t_239,
      temp bool t_241 = RClient.state == 2,
      temp bool t_242 = t_240 and t_241;
    guardCondition t_242;
    effect
      Receiver.state = 3,
      RClient.state = 0,
      File = SAME;

  process K_Receiver
    guardBlock
      temp bool t_243 = K.state == 1,
      temp bool t_244 = U > 0,
      temp bool t_245 = U <= 2,
      temp bool t_246 = t_244 and t_245,
      temp bool t_247 = t_243 and t_246,
      temp bool t_248 = Receiver.state == 0,
      temp bool t_249 = t_247 and t_248;
    guardCondition t_249;
    effect
      K.state = 0,
      Receiver.triple = K.triple,
      Receiver.state = 1,
      W = 0,
      Z = 0;

  process K_Receiver
    guardBlock
      temp bool t_250 = K.state == 1,
      temp bool t_251 = U > 0,
      temp bool t_252 = U <= 2,
      temp bool t_253 = t_251 and t_252,
      temp bool t_254 = t_250 and t_253,
      temp bool t_255 = Receiver.state == 4,
      temp bool t_256 = Z < 22,
      temp bool t_257 = t_255 and t_256,
      temp bool t_258 = t_254 and t_257;
    guardCondition t_258;
    effect
      K.state = 0,
      Receiver.triple = K.triple,
      Receiver.state = 2,
      W = 0;

  process L_Sender
    guardBlock
      temp bool t_259 = L.state == 1,
      temp bool t_260 = V > 0,
      temp bool t_261 = V <= 2,
      temp bool t_262 = t_260 and t_261,
      temp bool t_263 = t_259 and t_262,
      temp bool t_264 = Sender.state == 3,
      temp bool t_265 = X < 4,
      temp bool t_266 = t_264 and t_265,
      temp bool t_267 = t_263 and t_266;
    guardCondition t_267;
    effect
      L.state = 0,
      Sender.state = 4,
      X = 0,
      temp int t_268 = 1 - Sender.ab,
      Sender.ab = t_268;

  process Sender_SClient
    guardBlock
      temp bool t_269 = Sender.state == 3,
      temp bool t_270 = X == 4,
      temp bool t_271 = Sender.rc == 2,
      temp bool t_272 = t_270 and t_271,
      temp bool t_273 = Sender.i < n,
      temp bool t_274 = t_272 and t_273,
      temp bool t_275 = t_269 and t_274,
      temp bool t_276 = SClient.state == 4,
      temp bool t_277 = t_275 and t_276;
    guardCondition t_277;
    effect
      Sender.state = 5,
      X = 0,
      SClient.state = 2;

  process SClient_Sender
    guardBlock
      temp bool t_278 = SClient.state == 3,
      temp bool t_279 = Sender.state == 1,
      temp bool t_280 = t_278 and t_279;
    guardCondition t_280;
    effect
      SClient.state = 4,
      Sender.state = 2,
      X = 0,
      Sender.i = 1;

  process Sender_SClient
    guardBlock
      temp bool t_281 = Sender.state == 3,
      temp bool t_282 = X == 4,
      temp bool t_283 = Sender.rc == 2,
      temp bool t_284 = t_282 and t_283,
      temp bool t_285 = Sender.i == n,
      temp bool t_286 = t_284 and t_285,
      temp bool t_287 = t_281 and t_286,
      temp bool t_288 = SClient.state == 4,
      temp bool t_289 = t_287 and t_288;
    guardCondition t_289;
    effect
      Sender.state = 5,
      X = 0,
      SClient.state = 1;
