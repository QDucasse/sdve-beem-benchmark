state {tick(0)} Timer.state = 0;
state {wait(0), produce(1)} Producer.state = 0;
state {wait(0), consume(1)} Consumer.state = 0;
state {wait(0), data(1), ack(2), nak(3), dataOk(4), ackOk(5), nakOk(6)} Medium.state = 0;
state {wait(0), data(1), ack(2), nak(3), timeout(4)} Sender.state = 0;
state {wait(0), data(1), put_data(2), send_naks(3), corr_data(4), on_timeout(5), timeout_ack(6)} Receiver.state = 0;
byte Producer.message = 0;
byte Consumer.message = 0;
byte Medium.value = 0;
byte Sender.sendseq = 1;
byte Sender.rack = 0;
byte Sender.value = 0;
byte Receiver.i = 0;
byte Receiver.value = 0;
byte Receiver.sent = 0;
byte Receiver.recseq = 0;
byte Receiver.lack = 0;
byte Receiver.recbuf[4] =  {0, 0, 0};
byte Receiver.nakd[4] =  {0, 0, 0};

  process Producer
    guardBlock
      temp bool t_0 = Producer.state == 0;
    guardCondition t_0;
    effect
      Producer.state = 1;

  process Consumer
    guardBlock
      temp bool t_1 = Consumer.state == 1;
    guardCondition t_1;
    effect
      Consumer.state = 0;

  process Medium
    guardBlock
      temp bool t_2 = Medium.state == 1;
    guardCondition t_2;
    effect
      Medium.state = 0;

  process Medium
    guardBlock
      temp bool t_3 = Medium.state == 2;
    guardCondition t_3;
    effect
      Medium.state = 0;

  process Medium
    guardBlock
      temp bool t_4 = Medium.state == 3;
    guardCondition t_4;
    effect
      Medium.state = 0;

  process Medium
    guardBlock
      temp bool t_5 = Medium.state == 4;
    guardCondition t_5;
    effect
      Medium.state = 0;

  process Medium
    guardBlock
      temp bool t_6 = Medium.state == 5;
    guardCondition t_6;
    effect
      Medium.state = 0;

  process Medium
    guardBlock
      temp bool t_7 = Medium.state == 6;
    guardCondition t_7;
    effect
      Medium.state = 0;

  process Sender
    guardBlock
      temp bool t_8 = Sender.state == 2,
      temp bool t_9 = Sender.rack < Sender.sendseq,
      temp bool t_10 = Sender.rack < Sender.value,
      temp bool t_11 = t_9 and t_10,
      temp bool t_12 = Sender.value < Sender.sendseq,
      temp bool t_13 = t_11 and t_12,
      temp bool t_14 = Sender.rack > Sender.sendseq,
      temp bool t_15 = Sender.sendseq < Sender.value,
      temp bool t_16 = t_14 and t_15,
      temp bool t_17 = Sender.value < Sender.rack,
      temp bool t_18 = t_16 and t_17,
      temp bool t_19 = t_13 or t_18,
      temp bool t_20 = t_8 and t_19;
    guardCondition t_20;
    effect
      Sender.state = 0,
      Sender.rack = Sender.value;

  process Sender
    guardBlock
      temp bool t_21 = Sender.state == 2,
      temp bool t_22 = Sender.rack >= Sender.sendseq,
      temp bool t_23 = Sender.rack >= Sender.value,
      temp bool t_24 = t_22 or t_23,
      temp bool t_25 = Sender.value >= Sender.sendseq,
      temp bool t_26 = t_24 or t_25,
      temp bool t_27 = Sender.rack <= Sender.sendseq,
      temp bool t_28 = Sender.sendseq >= Sender.value,
      temp bool t_29 = t_27 or t_28,
      temp bool t_30 = Sender.value >= Sender.rack,
      temp bool t_31 = t_29 or t_30,
      temp bool t_32 = t_26 and t_31,
      temp bool t_33 = t_21 and t_32;
    guardCondition t_33;
    effect
      Sender.state = 0;

  process Sender
    guardBlock
      temp bool t_34 = Sender.state == 3,
      temp bool t_35 = Sender.rack >= Sender.sendseq,
      temp bool t_36 = Sender.rack >= Sender.value,
      temp bool t_37 = t_35 or t_36,
      temp bool t_38 = Sender.value >= Sender.sendseq,
      temp bool t_39 = t_37 or t_38,
      temp bool t_40 = Sender.rack <= Sender.sendseq,
      temp bool t_41 = Sender.sendseq >= Sender.value,
      temp bool t_42 = t_40 or t_41,
      temp bool t_43 = Sender.value >= Sender.rack,
      temp bool t_44 = t_42 or t_43,
      temp bool t_45 = t_39 and t_44,
      temp bool t_46 = t_34 and t_45;
    guardCondition t_46;
    effect
      Sender.state = 0;

  process Sender
    guardBlock
      temp bool t_47 = Sender.state == 4,
      temp int t_48 = Sender.rack + 1,
      temp int t_49 = t_48 % 3,
      temp bool t_50 = t_49 == Sender.sendseq,
      temp bool t_51 = t_47 and t_50;
    guardCondition t_51;
    effect
      Sender.state = 0;

  process Receiver
    guardBlock
      temp bool t_52 = Receiver.state == 1,
      temp int t_53 = Receiver.recseq + 1,
      temp int t_54 = t_53 % 3,
      temp bool t_55 = Receiver.value != t_54,
      temp bool t_56 = t_52 and t_55;
    guardCondition t_56;
    effect
      Receiver.state = 3,
      Receiver.recbuf[Receiver.value] = 1,
      temp int t_57 = Receiver.recseq + 1,
      temp int t_58 = t_57 % 3,
      Receiver.i = t_58;

  process Receiver
    guardBlock
      temp bool t_59 = Receiver.state == 3,
      temp bool t_60 = Receiver.i != Receiver.value,
      temp byte t_61 = Receiver.nakd[Receiver.i],
      temp bool t_62 = t_61 == 1,
      temp bool t_63 = t_60 and t_62,
      temp bool t_64 = t_59 and t_63;
    guardCondition t_64;
    effect
      Receiver.state = 3,
      temp int t_65 = Receiver.i + 1,
      temp int t_66 = t_65 % 3,
      Receiver.i = t_66;

  process Receiver
    guardBlock
      temp bool t_67 = Receiver.state == 3,
      temp bool t_68 = Receiver.i == Receiver.value,
      temp bool t_69 = t_67 and t_68;
    guardCondition t_69;
    effect
      Receiver.state = 0;

  process Receiver
    guardBlock
      temp bool t_70 = Receiver.state == 2,
      temp bool t_71 = Receiver.sent != 1,
      temp int t_72 = Receiver.recseq + 1,
      temp int t_73 = t_72 % 3,
      temp byte t_74 = Receiver.recbuf[t_73],
      temp bool t_75 = t_74 == 0,
      temp bool t_76 = t_71 and t_75,
      temp bool t_77 = t_70 and t_76;
    guardCondition t_77;
    effect
      Receiver.state = 0;

  process Receiver
    guardBlock
      temp bool t_78 = Receiver.state == 4,
      temp byte t_79 = Receiver.nakd[Receiver.value],
      temp bool t_80 = t_79 == 1,
      temp bool t_81 = t_78 and t_80;
    guardCondition t_81;
    effect
      Receiver.state = 0;

  process Receiver
    guardBlock
      temp bool t_82 = Receiver.state == 5,
      temp bool t_83 = Receiver.i < 3,
      temp bool t_84 = t_82 and t_83;
    guardCondition t_84;
    effect
      Receiver.state = 5,
      Receiver.nakd[Receiver.i] = 0,
      temp int t_85 = Receiver.i + 1,
      Receiver.i = t_85;

  process Receiver_Medium
    guardBlock
      temp bool t_86 = Receiver.state == 2,
      temp bool t_87 = Receiver.sent == 1,
      temp bool t_88 = t_86 and t_87,
      temp bool t_89 = Medium.state == 0,
      temp bool t_90 = t_88 and t_89;
    guardCondition t_90;
    effect
      Receiver.state = 2,
      Receiver.lack = Receiver.recseq,
      Receiver.sent = 0,
      Medium.value = Receiver.recseq,
      Medium.state = 2;

  process Receiver_Medium
    guardBlock
      temp bool t_91 = Receiver.state == 6,
      temp bool t_92 = Medium.state == 0,
      temp bool t_93 = t_91 and t_92;
    guardCondition t_93;
    effect
      Receiver.state = 0,
      Medium.value = Receiver.lack,
      Medium.state = 2;

  process Timer_Sender
    guardBlock
      temp bool t_94 = Timer.state == 0,
      temp bool t_95 = Sender.state == 0,
      temp bool t_96 = t_94 and t_95;
    guardCondition t_96;
    effect
      Timer.state = 0,
      Sender.state = 4;

  process Timer_Receiver
    guardBlock
      temp bool t_97 = Timer.state == 0,
      temp bool t_98 = Receiver.state == 0,
      temp bool t_99 = t_97 and t_98;
    guardCondition t_99;
    effect
      Timer.state = 0,
      Receiver.state = 5,
      Receiver.i = 0;

  process Medium_Sender
    guardBlock
      temp bool t_100 = Medium.state == 2,
      temp bool t_101 = Sender.state == 0,
      temp bool t_102 = t_100 and t_101;
    guardCondition t_102;
    effect
      Medium.state = 5,
      Sender.value = Medium.value,
      Sender.state = 2;

  process Producer_Sender
    guardBlock
      temp bool t_103 = Producer.state == 1,
      temp bool t_104 = Sender.state == 0,
      temp int t_105 = Sender.rack + 2,
      temp int t_106 = t_105 % 3,
      temp bool t_107 = t_106 > Sender.sendseq,
      temp bool t_108 = t_104 and t_107,
      temp bool t_109 = t_103 and t_108;
    guardCondition t_109;
    effect
      Producer.state = 0,
      temp int t_110 = Producer.message + 1,
      temp int t_111 = t_110 % 3,
      Producer.message = t_111,
      Sender.value = Producer.message,
      Sender.state = 1;

  process Sender_Medium
    guardBlock
      temp bool t_112 = Sender.state == 3,
      temp bool t_113 = Sender.rack < Sender.sendseq,
      temp bool t_114 = Sender.rack < Sender.value,
      temp bool t_115 = t_113 and t_114,
      temp bool t_116 = Sender.value < Sender.sendseq,
      temp bool t_117 = t_115 and t_116,
      temp bool t_118 = Sender.rack > Sender.sendseq,
      temp bool t_119 = Sender.sendseq < Sender.value,
      temp bool t_120 = t_118 and t_119,
      temp bool t_121 = Sender.value < Sender.rack,
      temp bool t_122 = t_120 and t_121,
      temp bool t_123 = t_117 or t_122,
      temp bool t_124 = t_112 and t_123,
      temp bool t_125 = Medium.state == 0,
      temp bool t_126 = t_124 and t_125;
    guardCondition t_126;
    effect
      Sender.state = 0,
      Medium.value = Sender.value,
      Medium.state = 1;

  process Sender_Medium
    guardBlock
      temp bool t_127 = Sender.state == 4,
      temp int t_128 = Sender.rack + 1,
      temp int t_129 = t_128 % 3,
      temp bool t_130 = t_129 != Sender.sendseq,
      temp bool t_131 = t_127 and t_130,
      temp bool t_132 = Medium.state == 0,
      temp bool t_133 = t_131 and t_132;
    guardCondition t_133;
    effect
      Sender.state = 0,
      temp int t_134 = Sender.rack + 1,
      temp int t_135 = t_134 % 3,
      Medium.value = t_135,
      Medium.state = 1;

  process Sender_Medium
    guardBlock
      temp bool t_136 = Sender.state == 1,
      temp bool t_137 = Medium.state == 0,
      temp bool t_138 = t_136 and t_137;
    guardCondition t_138;
    effect
      Sender.state = 0,
      temp int t_139 = Sender.sendseq + 1,
      temp int t_140 = t_139 % 3,
      Sender.sendseq = t_140,
      Medium.value = Sender.sendseq,
      Medium.state = 1;

  process Medium_Receiver
    guardBlock
      temp bool t_141 = Medium.state == 1,
      temp bool t_142 = Receiver.state == 0,
      temp bool t_143 = t_141 and t_142;
    guardCondition t_143;
    effect
      Medium.state = 4,
      Receiver.value = Medium.value,
      Receiver.state = 1;

  process Receiver_Medium
    guardBlock
      temp bool t_144 = Receiver.state == 3,
      temp bool t_145 = Receiver.i != Receiver.value,
      temp byte t_146 = Receiver.nakd[Receiver.i],
      temp bool t_147 = t_146 == 0,
      temp bool t_148 = t_145 and t_147,
      temp bool t_149 = t_144 and t_148,
      temp bool t_150 = Medium.state == 0,
      temp bool t_151 = t_149 and t_150;
    guardCondition t_151;
    effect
      Receiver.state = 3,
      Receiver.nakd[Receiver.i] = 1,
      temp int t_152 = Receiver.i + 1,
      temp int t_153 = t_152 % 3,
      Receiver.i = t_153,
      Medium.value = Receiver.i,
      Medium.state = 3;

  process Receiver_Medium
    guardBlock
      temp bool t_154 = Receiver.state == 4,
      temp byte t_155 = Receiver.nakd[Receiver.value],
      temp bool t_156 = t_155 == 0,
      temp bool t_157 = t_154 and t_156,
      temp bool t_158 = Medium.state == 0,
      temp bool t_159 = t_157 and t_158;
    guardCondition t_159;
    effect
      Receiver.state = 0,
      Medium.value = Receiver.value,
      Medium.state = 3;

  process Receiver_Medium
    guardBlock
      temp bool t_160 = Receiver.state == 5,
      temp bool t_161 = Receiver.i == 3,
      temp bool t_162 = t_160 and t_161,
      temp bool t_163 = Medium.state == 0,
      temp bool t_164 = t_162 and t_163;
    guardCondition t_164;
    effect
      Receiver.state = 6,
      temp int t_165 = Receiver.recseq + 1,
      temp int t_166 = t_165 % 3,
      Receiver.nakd[t_166] = 1,
      temp int t_167 = Receiver.recseq + 1,
      temp int t_168 = t_167 % 3,
      Medium.value = t_168,
      Medium.state = 3;

  process Medium_Sender
    guardBlock
      temp bool t_169 = Medium.state == 3,
      temp bool t_170 = Sender.state == 0,
      temp bool t_171 = t_169 and t_170;
    guardCondition t_171;
    effect
      Medium.state = 6,
      Sender.value = Medium.value,
      Sender.state = 3;

  process Receiver_Consumer
    guardBlock
      temp bool t_172 = Receiver.state == 1,
      temp int t_173 = Receiver.recseq + 1,
      temp int t_174 = t_173 % 3,
      temp bool t_175 = Receiver.value == t_174,
      temp bool t_176 = t_172 and t_175,
      temp bool t_177 = Consumer.state == 0,
      temp bool t_178 = t_176 and t_177;
    guardCondition t_178;
    effect
      Receiver.state = 2,
      temp int t_179 = Receiver.recseq + 1,
      temp int t_180 = t_179 % 3,
      Receiver.recseq = t_180,
      temp int t_181 = Receiver.sent + 1,
      temp int t_182 = t_181 % 3,
      Receiver.sent = t_182,
      Consumer.message = Receiver.value,
      Consumer.state = 1;

  process Receiver_Consumer
    guardBlock
      temp bool t_183 = Receiver.state == 2,
      temp bool t_184 = Receiver.sent != 1,
      temp int t_185 = Receiver.recseq + 1,
      temp int t_186 = t_185 % 3,
      temp byte t_187 = Receiver.recbuf[t_186],
      temp bool t_188 = t_187 == 1,
      temp bool t_189 = t_184 and t_188,
      temp bool t_190 = t_183 and t_189,
      temp bool t_191 = Consumer.state == 0,
      temp bool t_192 = t_190 and t_191;
    guardCondition t_192;
    effect
      Receiver.state = 2,
      temp int t_193 = Receiver.recseq + 1,
      temp int t_194 = t_193 % 3,
      Receiver.recseq = t_194,
      Receiver.recbuf[Receiver.recseq] = 0,
      temp int t_195 = Receiver.recseq + 1,
      temp int t_196 = t_195 % 3,
      Consumer.message = t_196,
      Consumer.state = 1;

  process Medium_Receiver
    guardBlock
      temp bool t_197 = Medium.state == 1,
      temp bool t_198 = Receiver.state == 0,
      temp bool t_199 = t_197 and t_198;
    guardCondition t_199;
    effect
      Medium.state = 0,
      Receiver.value = Medium.value,
      Receiver.state = 4;
