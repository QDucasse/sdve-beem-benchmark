state {tick(0)} Timer.state = 0;
state {wait(0), produce(1)} Producer.state = 0;
state {wait(0), consume(1)} Consumer.state = 0;
state {wait(0), data(1), ack(2), nak(3), dataOk(4), ackOk(5), nakOk(6)} Medium.state = 0;
state {wait(0), data(1), ack(2), nak(3), timeout(4)} Sender.state = 0;
state {wait(0), data(1), put_data(2), send_naks(3), corr_data(4), on_timeout(5), timeout_ack(6)} Receiver.state = 0;
state {q1(0), q2(1)} LTL_property.state = 0;
byte Producer.message = 0;
byte Consumer.message = 0;
byte Medium.value = 0;
byte Sender.sendseq = 1;
byte Sender.rack = 0;
byte Sender.value = 0;
byte Receiver.i = 0;
byte Receiver.value = 0;
byte Receiver.sent = 0;
byte Receiver.recseq = 0;
byte Receiver.lack = 0;
byte Receiver.recbuf[7] =  {0, 0, 0, 0, 0, 0};
byte Receiver.nakd[7] =  {0, 0, 0, 0, 0, 0};

  process Producer
    guardBlock
      temp bool t_0 = Producer.state == 0;
    guardCondition t_0;
    effect
      Producer.state = 1;

  process Consumer
    guardBlock
      temp bool t_1 = Consumer.state == 1;
    guardCondition t_1;
    effect
      Consumer.state = 0;

  process Medium
    guardBlock
      temp bool t_2 = Medium.state == 1;
    guardCondition t_2;
    effect
      Medium.state = 0;

  process Medium
    guardBlock
      temp bool t_3 = Medium.state == 2;
    guardCondition t_3;
    effect
      Medium.state = 0;

  process Medium
    guardBlock
      temp bool t_4 = Medium.state == 3;
    guardCondition t_4;
    effect
      Medium.state = 0;

  process Medium
    guardBlock
      temp bool t_5 = Medium.state == 4;
    guardCondition t_5;
    effect
      Medium.state = 0;

  process Medium
    guardBlock
      temp bool t_6 = Medium.state == 5;
    guardCondition t_6;
    effect
      Medium.state = 0;

  process Medium
    guardBlock
      temp bool t_7 = Medium.state == 6;
    guardCondition t_7;
    effect
      Medium.state = 0;

  process Sender
    guardBlock
      temp bool t_8 = Sender.state == 2,
      temp bool t_9 = Sender.rack < Sender.sendseq,
      temp bool t_10 = Sender.rack < Sender.value,
      temp bool t_11 = t_9 and t_10,
      temp bool t_12 = Sender.value < Sender.sendseq,
      temp bool t_13 = t_11 and t_12,
      temp bool t_14 = Sender.rack > Sender.sendseq,
      temp bool t_15 = Sender.sendseq < Sender.value,
      temp bool t_16 = t_14 and t_15,
      temp bool t_17 = Sender.value < Sender.rack,
      temp bool t_18 = t_16 and t_17,
      temp bool t_19 = t_13 or t_18,
      temp bool t_20 = t_8 and t_19;
    guardCondition t_20;
    effect
      Sender.state = 0,
      Sender.rack = Sender.value;

  process Sender
    guardBlock
      temp bool t_21 = Sender.state == 2,
      temp bool t_22 = Sender.rack >= Sender.sendseq,
      temp bool t_23 = Sender.rack >= Sender.value,
      temp bool t_24 = t_22 or t_23,
      temp bool t_25 = Sender.value >= Sender.sendseq,
      temp bool t_26 = t_24 or t_25,
      temp bool t_27 = Sender.rack <= Sender.sendseq,
      temp bool t_28 = Sender.sendseq >= Sender.value,
      temp bool t_29 = t_27 or t_28,
      temp bool t_30 = Sender.value >= Sender.rack,
      temp bool t_31 = t_29 or t_30,
      temp bool t_32 = t_26 and t_31,
      temp bool t_33 = t_21 and t_32;
    guardCondition t_33;
    effect
      Sender.state = 0;

  process Sender
    guardBlock
      temp bool t_34 = Sender.state == 3,
      temp bool t_35 = Sender.rack >= Sender.sendseq,
      temp bool t_36 = Sender.rack >= Sender.value,
      temp bool t_37 = t_35 or t_36,
      temp bool t_38 = Sender.value >= Sender.sendseq,
      temp bool t_39 = t_37 or t_38,
      temp bool t_40 = Sender.rack <= Sender.sendseq,
      temp bool t_41 = Sender.sendseq >= Sender.value,
      temp bool t_42 = t_40 or t_41,
      temp bool t_43 = Sender.value >= Sender.rack,
      temp bool t_44 = t_42 or t_43,
      temp bool t_45 = t_39 and t_44,
      temp bool t_46 = t_34 and t_45;
    guardCondition t_46;
    effect
      Sender.state = 0;

  process Sender
    guardBlock
      temp bool t_47 = Sender.state == 4,
      temp int t_48 = Sender.rack + 1,
      temp int t_49 = t_48 % 6,
      temp bool t_50 = t_49 == Sender.sendseq,
      temp bool t_51 = t_47 and t_50;
    guardCondition t_51;
    effect
      Sender.state = 0;

  process Receiver
    guardBlock
      temp bool t_52 = Receiver.state == 1,
      temp int t_53 = Receiver.recseq + 1,
      temp int t_54 = t_53 % 6,
      temp bool t_55 = Receiver.value != t_54,
      temp bool t_56 = t_52 and t_55;
    guardCondition t_56;
    effect
      Receiver.state = 3,
      Receiver.recbuf[Receiver.value] = 1,
      temp int t_57 = Receiver.recseq + 1,
      temp int t_58 = t_57 % 6,
      Receiver.i = t_58;

  process Receiver
    guardBlock
      temp bool t_59 = Receiver.state == 3,
      temp bool t_60 = Receiver.i != Receiver.value,
      temp byte t_61 = Receiver.nakd[Receiver.i],
      temp bool t_62 = t_61 == 1,
      temp bool t_63 = t_60 and t_62,
      temp bool t_64 = t_59 and t_63;
    guardCondition t_64;
    effect
      Receiver.state = 3,
      temp int t_65 = Receiver.i + 1,
      temp int t_66 = t_65 % 6,
      Receiver.i = t_66;

  process Receiver
    guardBlock
      temp bool t_67 = Receiver.state == 3,
      temp bool t_68 = Receiver.i == Receiver.value,
      temp bool t_69 = t_67 and t_68;
    guardCondition t_69;
    effect
      Receiver.state = 0;

  process Receiver
    guardBlock
      temp bool t_70 = Receiver.state == 2,
      temp bool t_71 = Receiver.sent != 1,
      temp int t_72 = Receiver.recseq + 1,
      temp int t_73 = t_72 % 6,
      temp byte t_74 = Receiver.recbuf[t_73],
      temp bool t_75 = t_74 == 0,
      temp bool t_76 = t_71 and t_75,
      temp bool t_77 = t_70 and t_76;
    guardCondition t_77;
    effect
      Receiver.state = 0;

  process Receiver
    guardBlock
      temp bool t_78 = Receiver.state == 4,
      temp byte t_79 = Receiver.nakd[Receiver.value],
      temp bool t_80 = t_79 == 1,
      temp bool t_81 = t_78 and t_80;
    guardCondition t_81;
    effect
      Receiver.state = 0;

  process Receiver
    guardBlock
      temp bool t_82 = Receiver.state == 5,
      temp bool t_83 = Receiver.i < 6,
      temp bool t_84 = t_82 and t_83;
    guardCondition t_84;
    effect
      Receiver.state = 5,
      Receiver.nakd[Receiver.i] = 0,
      temp int t_85 = Receiver.i + 1,
      Receiver.i = t_85;

  process LTL_property
    guardBlock
      temp bool t_86 = LTL_property.state == 0;
    guardCondition t_86;
    effect
      LTL_property.state = 0;

  process LTL_property
    guardBlock
      temp bool t_87 = LTL_property.state == 0,
      temp bool t_88 = Consumer.state == 1,
      temp bool t_89 = not t_88,
      temp bool t_90 = t_87 and t_89;
    guardCondition t_90;
    effect
      LTL_property.state = 1;

  process LTL_property
    guardBlock
      temp bool t_91 = LTL_property.state == 1,
      temp bool t_92 = Consumer.state == 1,
      temp bool t_93 = not t_92,
      temp bool t_94 = t_91 and t_93;
    guardCondition t_94;
    effect
      LTL_property.state = 1;

  process Medium_Receiver
    guardBlock
      temp bool t_95 = Medium.state == 1,
      temp bool t_96 = Receiver.state == 0,
      temp bool t_97 = t_95 and t_96;
    guardCondition t_97;
    effect
      Medium.state = 0,
      Receiver.value = Medium.value,
      Receiver.state = 4;

  process Receiver_Medium
    guardBlock
      temp bool t_98 = Receiver.state == 3,
      temp bool t_99 = Receiver.i != Receiver.value,
      temp byte t_100 = Receiver.nakd[Receiver.i],
      temp bool t_101 = t_100 == 0,
      temp bool t_102 = t_99 and t_101,
      temp bool t_103 = t_98 and t_102,
      temp bool t_104 = Medium.state == 0,
      temp bool t_105 = t_103 and t_104;
    guardCondition t_105;
    effect
      Receiver.state = 3,
      Receiver.nakd[Receiver.i] = 1,
      temp int t_106 = Receiver.i + 1,
      temp int t_107 = t_106 % 6,
      Receiver.i = t_107,
      Medium.value = Receiver.i,
      Medium.state = 3;

  process Receiver_Medium
    guardBlock
      temp bool t_108 = Receiver.state == 4,
      temp byte t_109 = Receiver.nakd[Receiver.value],
      temp bool t_110 = t_109 == 0,
      temp bool t_111 = t_108 and t_110,
      temp bool t_112 = Medium.state == 0,
      temp bool t_113 = t_111 and t_112;
    guardCondition t_113;
    effect
      Receiver.state = 0,
      Medium.value = Receiver.value,
      Medium.state = 3;

  process Receiver_Medium
    guardBlock
      temp bool t_114 = Receiver.state == 5,
      temp bool t_115 = Receiver.i == 6,
      temp bool t_116 = t_114 and t_115,
      temp bool t_117 = Medium.state == 0,
      temp bool t_118 = t_116 and t_117;
    guardCondition t_118;
    effect
      Receiver.state = 6,
      temp int t_119 = Receiver.recseq + 1,
      temp int t_120 = t_119 % 6,
      Receiver.nakd[t_120] = 1,
      temp int t_121 = Receiver.recseq + 1,
      temp int t_122 = t_121 % 6,
      Medium.value = t_122,
      Medium.state = 3;

  process Medium_Sender
    guardBlock
      temp bool t_123 = Medium.state == 3,
      temp bool t_124 = Sender.state == 0,
      temp bool t_125 = t_123 and t_124;
    guardCondition t_125;
    effect
      Medium.state = 6,
      Sender.value = Medium.value,
      Sender.state = 3;

  process Receiver_Medium
    guardBlock
      temp bool t_126 = Receiver.state == 2,
      temp bool t_127 = Receiver.sent == 1,
      temp bool t_128 = t_126 and t_127,
      temp bool t_129 = Medium.state == 0,
      temp bool t_130 = t_128 and t_129;
    guardCondition t_130;
    effect
      Receiver.state = 2,
      Receiver.lack = Receiver.recseq,
      Receiver.sent = 0,
      Medium.value = Receiver.recseq,
      Medium.state = 2;

  process Receiver_Medium
    guardBlock
      temp bool t_131 = Receiver.state == 6,
      temp bool t_132 = Medium.state == 0,
      temp bool t_133 = t_131 and t_132;
    guardCondition t_133;
    effect
      Receiver.state = 0,
      Medium.value = Receiver.lack,
      Medium.state = 2;

  process Receiver_Consumer
    guardBlock
      temp bool t_134 = Receiver.state == 1,
      temp int t_135 = Receiver.recseq + 1,
      temp int t_136 = t_135 % 6,
      temp bool t_137 = Receiver.value == t_136,
      temp bool t_138 = t_134 and t_137,
      temp bool t_139 = Consumer.state == 0,
      temp bool t_140 = t_138 and t_139;
    guardCondition t_140;
    effect
      Receiver.state = 2,
      temp int t_141 = Receiver.recseq + 1,
      temp int t_142 = t_141 % 6,
      Receiver.recseq = t_142,
      temp int t_143 = Receiver.sent + 1,
      temp int t_144 = t_143 % 6,
      Receiver.sent = t_144,
      Consumer.message = Receiver.value,
      Consumer.state = 1;

  process Receiver_Consumer
    guardBlock
      temp bool t_145 = Receiver.state == 2,
      temp bool t_146 = Receiver.sent != 1,
      temp int t_147 = Receiver.recseq + 1,
      temp int t_148 = t_147 % 6,
      temp byte t_149 = Receiver.recbuf[t_148],
      temp bool t_150 = t_149 == 1,
      temp bool t_151 = t_146 and t_150,
      temp bool t_152 = t_145 and t_151,
      temp bool t_153 = Consumer.state == 0,
      temp bool t_154 = t_152 and t_153;
    guardCondition t_154;
    effect
      Receiver.state = 2,
      temp int t_155 = Receiver.recseq + 1,
      temp int t_156 = t_155 % 6,
      Receiver.recseq = t_156,
      Receiver.recbuf[Receiver.recseq] = 0,
      temp int t_157 = Receiver.recseq + 1,
      temp int t_158 = t_157 % 6,
      Consumer.message = t_158,
      Consumer.state = 1;

  process Timer_Sender
    guardBlock
      temp bool t_159 = Timer.state == 0,
      temp bool t_160 = Sender.state == 0,
      temp bool t_161 = t_159 and t_160;
    guardCondition t_161;
    effect
      Timer.state = 0,
      Sender.state = 4;

  process Timer_Receiver
    guardBlock
      temp bool t_162 = Timer.state == 0,
      temp bool t_163 = Receiver.state == 0,
      temp bool t_164 = t_162 and t_163;
    guardCondition t_164;
    effect
      Timer.state = 0,
      Receiver.state = 5,
      Receiver.i = 0;

  process Medium_Sender
    guardBlock
      temp bool t_165 = Medium.state == 2,
      temp bool t_166 = Sender.state == 0,
      temp bool t_167 = t_165 and t_166;
    guardCondition t_167;
    effect
      Medium.state = 5,
      Sender.value = Medium.value,
      Sender.state = 2;

  process Sender_Medium
    guardBlock
      temp bool t_168 = Sender.state == 3,
      temp bool t_169 = Sender.rack < Sender.sendseq,
      temp bool t_170 = Sender.rack < Sender.value,
      temp bool t_171 = t_169 and t_170,
      temp bool t_172 = Sender.value < Sender.sendseq,
      temp bool t_173 = t_171 and t_172,
      temp bool t_174 = Sender.rack > Sender.sendseq,
      temp bool t_175 = Sender.sendseq < Sender.value,
      temp bool t_176 = t_174 and t_175,
      temp bool t_177 = Sender.value < Sender.rack,
      temp bool t_178 = t_176 and t_177,
      temp bool t_179 = t_173 or t_178,
      temp bool t_180 = t_168 and t_179,
      temp bool t_181 = Medium.state == 0,
      temp bool t_182 = t_180 and t_181;
    guardCondition t_182;
    effect
      Sender.state = 0,
      Medium.value = Sender.value,
      Medium.state = 1;

  process Sender_Medium
    guardBlock
      temp bool t_183 = Sender.state == 4,
      temp int t_184 = Sender.rack + 1,
      temp int t_185 = t_184 % 6,
      temp bool t_186 = t_185 != Sender.sendseq,
      temp bool t_187 = t_183 and t_186,
      temp bool t_188 = Medium.state == 0,
      temp bool t_189 = t_187 and t_188;
    guardCondition t_189;
    effect
      Sender.state = 0,
      temp int t_190 = Sender.rack + 1,
      temp int t_191 = t_190 % 6,
      Medium.value = t_191,
      Medium.state = 1;

  process Sender_Medium
    guardBlock
      temp bool t_192 = Sender.state == 1,
      temp bool t_193 = Medium.state == 0,
      temp bool t_194 = t_192 and t_193;
    guardCondition t_194;
    effect
      Sender.state = 0,
      temp int t_195 = Sender.sendseq + 1,
      temp int t_196 = t_195 % 6,
      Sender.sendseq = t_196,
      Medium.value = Sender.sendseq,
      Medium.state = 1;

  process Medium_Receiver
    guardBlock
      temp bool t_197 = Medium.state == 1,
      temp bool t_198 = Receiver.state == 0,
      temp bool t_199 = t_197 and t_198;
    guardCondition t_199;
    effect
      Medium.state = 4,
      Receiver.value = Medium.value,
      Receiver.state = 1;

  process Producer_Sender
    guardBlock
      temp bool t_200 = Producer.state == 1,
      temp bool t_201 = Sender.state == 0,
      temp int t_202 = Sender.rack + 3,
      temp int t_203 = t_202 % 6,
      temp bool t_204 = t_203 > Sender.sendseq,
      temp bool t_205 = t_201 and t_204,
      temp bool t_206 = t_200 and t_205;
    guardCondition t_206;
    effect
      Producer.state = 0,
      temp int t_207 = Producer.message + 1,
      temp int t_208 = t_207 % 6,
      Producer.message = t_208,
      Sender.value = Producer.message,
      Sender.state = 1;
      // accepting conditions
      // LTL_property.state == 1
