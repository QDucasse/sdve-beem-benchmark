state {tick(0)} Timer.state = 0;
state {wait(0), produce(1)} Producer.state = 0;
state {wait(0), consume(1)} Consumer.state = 0;
state {wait(0), data(1), ack(2), nak(3), dataOk(4), ackOk(5), nakOk(6)} Medium.state = 0;
state {wait(0), data(1), ack(2), nak(3), timeout(4)} Sender.state = 0;
state {wait(0), data(1), put_data(2), send_naks(3), corr_data(4), on_timeout(5), timeout_ack(6)} Receiver.state = 0;
state {q1(0)} LTL_property.state = 0;
byte Producer.message = 0;
byte Consumer.message = 0;
byte Medium.value = 0;
byte Sender.sendseq = 1;
byte Sender.rack = 0;
byte Sender.value = 0;
byte Receiver.i = 0;
byte Receiver.value = 0;
byte Receiver.sent = 0;
byte Receiver.recseq = 0;
byte Receiver.lack = 0;
byte Receiver.recbuf[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
byte Receiver.nakd[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

  process Producer 
    guardBlock
      temp bool t_0 = Producer.state == 0;

    guardCondition t_0;
    effect
      Producer.state = 1;

  process Consumer 
    guardBlock
      temp bool t_1 = Consumer.state == 1;

    guardCondition t_1;
    effect
      Consumer.state = 0;

  process Medium 
    guardBlock
      temp bool t_2 = Medium.state == 1;

    guardCondition t_2;
    effect
      Medium.state = 0;

  process Medium 
    guardBlock
      temp bool t_3 = Medium.state == 2;

    guardCondition t_3;
    effect
      Medium.state = 0;

  process Medium 
    guardBlock
      temp bool t_4 = Medium.state == 3;

    guardCondition t_4;
    effect
      Medium.state = 0;

  process Medium 
    guardBlock
      temp bool t_5 = Medium.state == 4;

    guardCondition t_5;
    effect
      Medium.state = 0;

  process Medium 
    guardBlock
      temp bool t_6 = Medium.state == 5;

    guardCondition t_6;
    effect
      Medium.state = 0;

  process Medium 
    guardBlock
      temp bool t_7 = Medium.state == 6;

    guardCondition t_7;
    effect
      Medium.state = 0;

  process Sender 
    guardBlock
      temp bool t_8 = Sender.state == 2,
      temp bool t_9 = Sender.rack < Sender.sendseq,
      temp bool t_10 = Sender.rack < Sender.value,
      temp bool t_11 = t_9 and t_10,
      temp bool t_12 = Sender.value < Sender.sendseq,
      temp bool t_13 = t_11 and t_12,
      temp bool t_14 = Sender.rack > Sender.sendseq,
      temp bool t_15 = Sender.sendseq < Sender.value,
      temp bool t_16 = t_14 and t_15,
      temp bool t_17 = Sender.value < Sender.rack,
      temp bool t_18 = t_16 and t_17,
      temp bool t_19 = t_13 or t_18,
      temp bool t_20 = t_8 and t_19;

    guardCondition t_20;
    effect
      Sender.state = 0,
      Sender.rack = Sender.value;

  process Sender 
    guardBlock
      temp bool t_21 = Sender.state == 2,
      temp bool t_22 = Sender.rack >= Sender.sendseq,
      temp bool t_23 = Sender.rack >= Sender.value,
      temp bool t_24 = t_22 or t_23,
      temp bool t_25 = Sender.value >= Sender.sendseq,
      temp bool t_26 = t_24 or t_25,
      temp bool t_27 = Sender.rack <= Sender.sendseq,
      temp bool t_28 = Sender.sendseq >= Sender.value,
      temp bool t_29 = t_27 or t_28,
      temp bool t_30 = Sender.value >= Sender.rack,
      temp bool t_31 = t_29 or t_30,
      temp bool t_32 = t_26 and t_31,
      temp bool t_33 = t_21 and t_32;

    guardCondition t_33;
    effect
      Sender.state = 0;

  process Sender 
    guardBlock
      temp bool t_34 = Sender.state == 3,
      temp bool t_35 = Sender.rack >= Sender.sendseq,
      temp bool t_36 = Sender.rack >= Sender.value,
      temp bool t_37 = t_35 or t_36,
      temp bool t_38 = Sender.value >= Sender.sendseq,
      temp bool t_39 = t_37 or t_38,
      temp bool t_40 = Sender.rack <= Sender.sendseq,
      temp bool t_41 = Sender.sendseq >= Sender.value,
      temp bool t_42 = t_40 or t_41,
      temp bool t_43 = Sender.value >= Sender.rack,
      temp bool t_44 = t_42 or t_43,
      temp bool t_45 = t_39 and t_44,
      temp bool t_46 = t_34 and t_45;

    guardCondition t_46;
    effect
      Sender.state = 0;

  process Sender 
    guardBlock
      temp bool t_47 = Sender.state == 4,
      temp byte t_48 = Sender.rack + 1,
      temp byte t_49 = t_48 % 10,
      temp bool t_50 = t_49 == Sender.sendseq,
      temp bool t_51 = t_47 and t_50;

    guardCondition t_51;
    effect
      Sender.state = 0;

  process Receiver 
    guardBlock
      temp bool t_52 = Receiver.state == 1,
      temp byte t_53 = Receiver.recseq + 1,
      temp byte t_54 = t_53 % 10,
      temp bool t_55 = Receiver.value != t_54,
      temp bool t_56 = t_52 and t_55;

    guardCondition t_56;
    effect
      Receiver.state = 3,
      Receiver.recbuf[Receiver.value] = 1,
      temp byte t_57 = Receiver.recseq + 1,
      temp byte t_58 = t_57 % 10,
      Receiver.i = t_58;

  process Receiver 
    guardBlock
      temp bool t_59 = Receiver.state == 3,
      temp bool t_60 = Receiver.i != Receiver.value,
      temp byte t_61 = Receiver.nakd[Receiver.i],
      temp bool t_62 = t_61 == 1,
      temp bool t_63 = t_60 and t_62,
      temp bool t_64 = t_59 and t_63;

    guardCondition t_64;
    effect
      Receiver.state = 3,
      temp byte t_65 = Receiver.i + 1,
      temp byte t_66 = t_65 % 10,
      Receiver.i = t_66;

  process Receiver 
    guardBlock
      temp bool t_67 = Receiver.state == 3,
      temp bool t_68 = Receiver.i == Receiver.value,
      temp bool t_69 = t_67 and t_68;

    guardCondition t_69;
    effect
      Receiver.state = 0;

  process Receiver 
    guardBlock
      temp bool t_70 = Receiver.state == 2,
      temp bool t_71 = Receiver.sent != 1,
      temp byte t_72 = Receiver.recseq + 1,
      temp byte t_73 = t_72 % 10,
      temp byte t_74 = Receiver.recbuf[t_73],
      temp bool t_75 = t_74 == 0,
      temp bool t_76 = t_71 and t_75,
      temp bool t_77 = t_70 and t_76;

    guardCondition t_77;
    effect
      Receiver.state = 0;

  process Receiver 
    guardBlock
      temp bool t_78 = Receiver.state == 4,
      temp byte t_79 = Receiver.nakd[Receiver.value],
      temp bool t_80 = t_79 == 1,
      temp bool t_81 = t_78 and t_80;

    guardCondition t_81;
    effect
      Receiver.state = 0;

  process Receiver 
    guardBlock
      temp bool t_82 = Receiver.state == 5,
      temp bool t_83 = Receiver.i < 10,
      temp bool t_84 = t_82 and t_83;

    guardCondition t_84;
    effect
      Receiver.state = 5,
      Receiver.nakd[Receiver.i] = 0,
      temp byte t_85 = Receiver.i + 1,
      Receiver.i = t_85;

  process LTL_property 
    guardBlock
      temp bool t_86 = LTL_property.state == 0,
      temp bool t_87 = Consumer.state == 1,
      temp bool t_88 = not t_87,
      temp bool t_89 = t_86 and t_88;

    guardCondition t_89;
    effect
      LTL_property.state = 0;

  process Medium_Receiver 
    guardBlock
      temp bool t_90 = Medium.state == 1,
      temp bool t_91 = Receiver.state == 0,
      temp bool t_92 = t_90 and t_91;

    guardCondition t_92;
    effect
      Medium.state = 0,
      Receiver.value = Medium.value,
      Receiver.state = 4;

  process Receiver_Consumer 
    guardBlock
      temp bool t_93 = Receiver.state == 1,
      temp byte t_94 = Receiver.recseq + 1,
      temp byte t_95 = t_94 % 10,
      temp bool t_96 = Receiver.value == t_95,
      temp bool t_97 = t_93 and t_96,
      temp bool t_98 = Consumer.state == 0,
      temp bool t_99 = t_97 and t_98;

    guardCondition t_99;
    effect
      Receiver.state = 2,
      temp byte t_100 = Receiver.recseq + 1,
      temp byte t_101 = t_100 % 10,
      Receiver.recseq = t_101,
      temp byte t_102 = Receiver.sent + 1,
      temp byte t_103 = t_102 % 10,
      Receiver.sent = t_103,
      Consumer.message = Receiver.value,
      Consumer.state = 1;

  process Receiver_Consumer 
    guardBlock
      temp bool t_104 = Receiver.state == 2,
      temp bool t_105 = Receiver.sent != 1,
      temp byte t_106 = Receiver.recseq + 1,
      temp byte t_107 = t_106 % 10,
      temp byte t_108 = Receiver.recbuf[t_107],
      temp bool t_109 = t_108 == 1,
      temp bool t_110 = t_105 and t_109,
      temp bool t_111 = t_104 and t_110,
      temp bool t_112 = Consumer.state == 0,
      temp bool t_113 = t_111 and t_112;

    guardCondition t_113;
    effect
      Receiver.state = 2,
      temp byte t_114 = Receiver.recseq + 1,
      temp byte t_115 = t_114 % 10,
      Receiver.recseq = t_115,
      Receiver.recbuf[Receiver.recseq] = 0,
      temp byte t_116 = Receiver.recseq + 1,
      temp byte t_117 = t_116 % 10,
      Consumer.message = t_117,
      Consumer.state = 1;

  process Sender_Medium 
    guardBlock
      temp bool t_118 = Sender.state == 3,
      temp bool t_119 = Sender.rack < Sender.sendseq,
      temp bool t_120 = Sender.rack < Sender.value,
      temp bool t_121 = t_119 and t_120,
      temp bool t_122 = Sender.value < Sender.sendseq,
      temp bool t_123 = t_121 and t_122,
      temp bool t_124 = Sender.rack > Sender.sendseq,
      temp bool t_125 = Sender.sendseq < Sender.value,
      temp bool t_126 = t_124 and t_125,
      temp bool t_127 = Sender.value < Sender.rack,
      temp bool t_128 = t_126 and t_127,
      temp bool t_129 = t_123 or t_128,
      temp bool t_130 = t_118 and t_129,
      temp bool t_131 = Medium.state == 0,
      temp bool t_132 = t_130 and t_131;

    guardCondition t_132;
    effect
      Sender.state = 0,
      Medium.value = Sender.value,
      Medium.state = 1;

  process Sender_Medium 
    guardBlock
      temp bool t_133 = Sender.state == 4,
      temp byte t_134 = Sender.rack + 1,
      temp byte t_135 = t_134 % 10,
      temp bool t_136 = t_135 != Sender.sendseq,
      temp bool t_137 = t_133 and t_136,
      temp bool t_138 = Medium.state == 0,
      temp bool t_139 = t_137 and t_138;

    guardCondition t_139;
    effect
      Sender.state = 0,
      temp byte t_140 = Sender.rack + 1,
      temp byte t_141 = t_140 % 10,
      Medium.value = t_141,
      Medium.state = 1;

  process Sender_Medium 
    guardBlock
      temp bool t_142 = Sender.state == 1,
      temp bool t_143 = Medium.state == 0,
      temp bool t_144 = t_142 and t_143;

    guardCondition t_144;
    effect
      Sender.state = 0,
      temp byte t_145 = Sender.sendseq + 1,
      temp byte t_146 = t_145 % 10,
      Sender.sendseq = t_146,
      Medium.value = Sender.sendseq,
      Medium.state = 1;

  process Medium_Sender 
    guardBlock
      temp bool t_147 = Medium.state == 3,
      temp bool t_148 = Sender.state == 0,
      temp bool t_149 = t_147 and t_148;

    guardCondition t_149;
    effect
      Medium.state = 6,
      Sender.value = Medium.value,
      Sender.state = 3;

  process Producer_Sender 
    guardBlock
      temp bool t_150 = Producer.state == 1,
      temp bool t_151 = Sender.state == 0,
      temp byte t_152 = Sender.rack + 3,
      temp byte t_153 = t_152 % 10,
      temp bool t_154 = t_153 > Sender.sendseq,
      temp bool t_155 = t_151 and t_154,
      temp bool t_156 = t_150 and t_155;

    guardCondition t_156;
    effect
      Producer.state = 0,
      temp byte t_157 = Producer.message + 1,
      temp byte t_158 = t_157 % 10,
      Producer.message = t_158,
      Sender.value = Producer.message,
      Sender.state = 1;

  process Receiver_Medium 
    guardBlock
      temp bool t_159 = Receiver.state == 3,
      temp bool t_160 = Receiver.i != Receiver.value,
      temp byte t_161 = Receiver.nakd[Receiver.i],
      temp bool t_162 = t_161 == 0,
      temp bool t_163 = t_160 and t_162,
      temp bool t_164 = t_159 and t_163,
      temp bool t_165 = Medium.state == 0,
      temp bool t_166 = t_164 and t_165;

    guardCondition t_166;
    effect
      Receiver.state = 3,
      Receiver.nakd[Receiver.i] = 1,
      temp byte t_167 = Receiver.i + 1,
      temp byte t_168 = t_167 % 10,
      Receiver.i = t_168,
      Medium.value = Receiver.i,
      Medium.state = 3;

  process Receiver_Medium 
    guardBlock
      temp bool t_169 = Receiver.state == 4,
      temp byte t_170 = Receiver.nakd[Receiver.value],
      temp bool t_171 = t_170 == 0,
      temp bool t_172 = t_169 and t_171,
      temp bool t_173 = Medium.state == 0,
      temp bool t_174 = t_172 and t_173;

    guardCondition t_174;
    effect
      Receiver.state = 0,
      Medium.value = Receiver.value,
      Medium.state = 3;

  process Receiver_Medium 
    guardBlock
      temp bool t_175 = Receiver.state == 5,
      temp bool t_176 = Receiver.i == 10,
      temp bool t_177 = t_175 and t_176,
      temp bool t_178 = Medium.state == 0,
      temp bool t_179 = t_177 and t_178;

    guardCondition t_179;
    effect
      Receiver.state = 6,
      temp byte t_180 = Receiver.recseq + 1,
      temp byte t_181 = t_180 % 10,
      Receiver.nakd[t_181] = 1,
      temp byte t_182 = Receiver.recseq + 1,
      temp byte t_183 = t_182 % 10,
      Medium.value = t_183,
      Medium.state = 3;

  process Timer_Sender 
    guardBlock
      temp bool t_184 = Timer.state == 0,
      temp bool t_185 = Sender.state == 0,
      temp bool t_186 = t_184 and t_185;

    guardCondition t_186;
    effect
      Timer.state = 0,
      Sender.state = 4;

  process Timer_Receiver 
    guardBlock
      temp bool t_187 = Timer.state == 0,
      temp bool t_188 = Receiver.state == 0,
      temp bool t_189 = t_187 and t_188;

    guardCondition t_189;
    effect
      Timer.state = 0,
      Receiver.state = 5,
      Receiver.i = 0;

  process Medium_Sender 
    guardBlock
      temp bool t_190 = Medium.state == 2,
      temp bool t_191 = Sender.state == 0,
      temp bool t_192 = t_190 and t_191;

    guardCondition t_192;
    effect
      Medium.state = 5,
      Sender.value = Medium.value,
      Sender.state = 2;

  process Receiver_Medium 
    guardBlock
      temp bool t_193 = Receiver.state == 2,
      temp bool t_194 = Receiver.sent == 1,
      temp bool t_195 = t_193 and t_194,
      temp bool t_196 = Medium.state == 0,
      temp bool t_197 = t_195 and t_196;

    guardCondition t_197;
    effect
      Receiver.state = 2,
      Receiver.lack = Receiver.recseq,
      Receiver.sent = 0,
      Medium.value = Receiver.recseq,
      Medium.state = 2;

  process Receiver_Medium 
    guardBlock
      temp bool t_198 = Receiver.state == 6,
      temp bool t_199 = Medium.state == 0,
      temp bool t_200 = t_198 and t_199;

    guardCondition t_200;
    effect
      Receiver.state = 0,
      Medium.value = Receiver.lack,
      Medium.state = 2;

  process Medium_Receiver 
    guardBlock
      temp bool t_201 = Medium.state == 1,
      temp bool t_202 = Receiver.state == 0,
      temp bool t_203 = t_201 and t_202;

    guardCondition t_203;
    effect
      Medium.state = 4,
      Receiver.value = Medium.value,
      Receiver.state = 1;

accepting conditions
  LTL_property.state == 0

