state {s0(0), s1(1), s0_1(2), s0_2(3), s0_3(4), s0_4(5), s0_5(6), s0_6(7), s1_1(8), s1_2(9)} sender.state = 0;
state {tick(0)} clock.state = 0;
state {e0(0), e0_1(1), e0_2(2), e1(3), e_odata(4), e_odata1(5), e_odata2(6), e_rdata(7), e_rdata1(8), e_rdata2(9), e_nak(10), e_spm(11), e_spm1(12), e_spm2(13)} element.state = 0;
state {r0(0), r1(1), r0_1(2), r0_2(3), r2(4), r3(5), r4(6), r_trail(7), r_out(8), r_tmp(9)} receiver.state = 0;
state {q_in_1(0), q_out_1(1), q_in_2(2), q_out_2(3), q_in_3(4), q_out_3(5), q(6)} SN.state = 6;
state {q_in_1(0), q_out_1(1), q(2)} NS.state = 2;
state {q_in_1(0), q_out_1(1), q(2)} RN.state = 2;
state {q_in_1(0), q_out_1(1), q_in_2(2), q_out_2(3), q_in_3(4), q_out_3(5), q(6)} NR.state = 6;
state {q1(0), q2(1)} LTL_property.state = 0;
byte SN_time[7] = {0, 0, 0, 0, 0, 0, 0};
byte SN_size = 0;
byte NS_time[7] = {0, 0, 0, 0, 0, 0, 0};
byte NS_size = 0;
byte NR_time[7] = {0, 0, 0, 0, 0, 0, 0};
byte NR_size = 0;
byte RN_time[7] = {0, 0, 0, 0, 0, 0, 0};
byte RN_size = 0;
byte x = 0;
byte sqn = 1;
byte c = 0;
byte packet = 0;
byte close = 1;
byte TXW_TRAIL = 1;
byte TXW_LEAD = 0;
byte RXW_LEAD = 0;
byte RXW_TRAIL = 1;
byte element.packet = 0;
byte element.nloss = 0;
byte element.i = 0;
byte element.rs_len = 0;
byte element.rs[5] = {0, 0, 0, 0, 0};
byte element.seq = 0;
byte element.trail = 0;
byte receiver.packet = 0;
byte receiver.sqn = 0;
byte receiver.trail = 0;
byte receiver.outloss = 0;
byte receiver.outdata = 0;
byte receiver.RXW[5] = {0, 0, 0, 0, 0};
byte SN.buf_0[7] = {0, 0, 0, 0, 0, 0, 0};
byte SN.buf_1[7] = {0, 0, 0, 0, 0, 0, 0};
byte SN.buf_2[7] = {0, 0, 0, 0, 0, 0, 0};
byte NS.buf_0[7] = {0, 0, 0, 0, 0, 0, 0};
byte RN.buf_0[7] = {0, 0, 0, 0, 0, 0, 0};
byte NR.buf_0[7] = {0, 0, 0, 0, 0, 0, 0};
byte NR.buf_1[7] = {0, 0, 0, 0, 0, 0, 0};
byte NR.buf_2[7] = {0, 0, 0, 0, 0, 0, 0};

  process sender 
    guardBlock
      temp bool t_0 = sender.state == 0,
      temp byte t_1 = TXW_LEAD - TXW_TRAIL,
      temp byte t_2 = t_1 + 1,
      temp bool t_3 = t_2 <= 5,
      temp bool t_4 = TXW_LEAD < 9,
      temp bool t_5 = t_3 and t_4,
      temp bool t_6 = x >= 3,
      temp bool t_7 = t_5 and t_6,
      temp bool t_8 = t_0 and t_7;

    guardCondition t_8;
    effect
      sender.state = 0,
      temp byte t_9 = TXW_LEAD + 1,
      temp byte t_10 = t_9 - TXW_TRAIL,
      temp bool t_11 = t_10 == 5,
      temp byte t_12 = TXW_TRAIL + t_11,
      TXW_TRAIL = t_12,
      temp byte t_13 = TXW_LEAD + 1,
      TXW_LEAD = t_13,
      temp byte t_14 = c + 1,
      c = t_14,
      x = 0;

  process sender 
    guardBlock
      temp bool t_15 = sender.state == 0,
      temp bool t_16 = not close,
      temp bool t_17 = x >= 3,
      temp bool t_18 = t_16 and t_17,
      temp bool t_19 = t_15 and t_18;

    guardCondition t_19;
    effect
      sender.state = 0,
      x = 0;

  process sender 
    guardBlock
      temp bool t_20 = sender.state == 0,
      temp bool t_21 = TXW_LEAD == 9,
      temp bool t_22 = close and t_21,
      temp byte t_23 = TXW_LEAD + 1,
      temp bool t_24 = TXW_TRAIL == t_23,
      temp bool t_25 = t_22 and t_24,
      temp bool t_26 = not t_25,
      temp bool t_27 = sqn <= TXW_LEAD,
      temp bool t_28 = not t_27,
      temp bool t_29 = t_26 and t_28,
      temp bool t_30 = c >= 2,
      temp bool t_31 = not t_30,
      temp bool t_32 = t_29 and t_31,
      temp byte t_33 = TXW_LEAD - TXW_TRAIL,
      temp byte t_34 = t_33 + 1,
      temp bool t_35 = t_34 <= 5,
      temp bool t_36 = TXW_LEAD < 9,
      temp bool t_37 = t_35 and t_36,
      temp bool t_38 = x >= 3,
      temp bool t_39 = t_37 and t_38,
      temp bool t_40 = not t_39,
      temp bool t_41 = t_32 and t_40,
      temp byte t_42 = TXW_LEAD + 1,
      temp bool t_43 = TXW_TRAIL < t_42,
      temp bool t_44 = t_41 and t_43,
      temp bool t_45 = TXW_LEAD == 9,
      temp bool t_46 = t_44 and t_45,
      temp bool t_47 = x >= 3,
      temp bool t_48 = t_46 and t_47,
      temp bool t_49 = t_20 and t_48;

    guardCondition t_49;
    effect
      sender.state = 0,
      temp byte t_50 = TXW_TRAIL + 1,
      TXW_TRAIL = t_50,
      x = 0;

  process sender 
    guardBlock
      temp bool t_51 = sender.state == 1,
      temp bool t_52 = packet > TXW_LEAD,
      temp bool t_53 = packet < TXW_TRAIL,
      temp bool t_54 = t_52 or t_53,
      temp bool t_55 = t_51 and t_54;

    guardCondition t_55;
    effect
      sender.state = 0;

  process clock 
    guardBlock
      temp bool t_56 = clock.state == 0,
      temp bool t_57 = x < 3,
      temp bool t_58 = TXW_LEAD == 9,
      temp bool t_59 = close and t_58,
      temp byte t_60 = TXW_LEAD + 1,
      temp bool t_61 = TXW_TRAIL == t_60,
      temp bool t_62 = t_59 and t_61,
      temp bool t_63 = not t_62,
      temp bool t_64 = t_57 and t_63,
      temp bool t_65 = sqn <= TXW_LEAD,
      temp bool t_66 = not t_65,
      temp bool t_67 = t_64 and t_66,
      temp bool t_68 = c >= 2,
      temp bool t_69 = not t_68,
      temp bool t_70 = t_67 and t_69,
      temp byte t_71 = TXW_LEAD - TXW_TRAIL,
      temp byte t_72 = t_71 + 1,
      temp bool t_73 = t_72 <= 5,
      temp bool t_74 = TXW_LEAD < 9,
      temp bool t_75 = t_73 and t_74,
      temp bool t_76 = x >= 3,
      temp bool t_77 = t_75 and t_76,
      temp bool t_78 = not t_77,
      temp bool t_79 = t_70 and t_78,
      temp bool t_80 = sender.state == 0,
      temp bool t_81 = t_79 and t_80,
      temp bool t_82 = element.state == 0,
      temp bool t_83 = t_81 and t_82,
      temp bool t_84 = receiver.state == 0,
      temp bool t_85 = t_83 and t_84,
      temp bool t_86 = SN_size < 1,
      temp byte t_87 = SN_time[0],
      temp bool t_88 = t_87 > 0,
      temp bool t_89 = t_86 or t_88,
      temp bool t_90 = t_85 and t_89,
      temp bool t_91 = SN_size < 2,
      temp byte t_92 = SN_time[1],
      temp bool t_93 = t_92 > 0,
      temp bool t_94 = t_91 or t_93,
      temp bool t_95 = t_90 and t_94,
      temp bool t_96 = SN_size < 3,
      temp byte t_97 = SN_time[2],
      temp bool t_98 = t_97 > 0,
      temp bool t_99 = t_96 or t_98,
      temp bool t_100 = t_95 and t_99,
      temp bool t_101 = SN_size < 4,
      temp byte t_102 = SN_time[3],
      temp bool t_103 = t_102 > 0,
      temp bool t_104 = t_101 or t_103,
      temp bool t_105 = t_100 and t_104,
      temp bool t_106 = SN_size < 5,
      temp byte t_107 = SN_time[4],
      temp bool t_108 = t_107 > 0,
      temp bool t_109 = t_106 or t_108,
      temp bool t_110 = t_105 and t_109,
      temp bool t_111 = SN_size < 6,
      temp byte t_112 = SN_time[5],
      temp bool t_113 = t_112 > 0,
      temp bool t_114 = t_111 or t_113,
      temp bool t_115 = t_110 and t_114,
      temp bool t_116 = SN_size < 7,
      temp byte t_117 = SN_time[6],
      temp bool t_118 = t_117 > 0,
      temp bool t_119 = t_116 or t_118,
      temp bool t_120 = t_115 and t_119,
      temp bool t_121 = NS_size < 1,
      temp byte t_122 = NS_time[0],
      temp bool t_123 = t_122 > 0,
      temp bool t_124 = t_121 or t_123,
      temp bool t_125 = t_120 and t_124,
      temp bool t_126 = NS_size < 2,
      temp byte t_127 = NS_time[1],
      temp bool t_128 = t_127 > 0,
      temp bool t_129 = t_126 or t_128,
      temp bool t_130 = t_125 and t_129,
      temp bool t_131 = NS_size < 3,
      temp byte t_132 = NS_time[2],
      temp bool t_133 = t_132 > 0,
      temp bool t_134 = t_131 or t_133,
      temp bool t_135 = t_130 and t_134,
      temp bool t_136 = NS_size < 4,
      temp byte t_137 = NS_time[3],
      temp bool t_138 = t_137 > 0,
      temp bool t_139 = t_136 or t_138,
      temp bool t_140 = t_135 and t_139,
      temp bool t_141 = NS_size < 5,
      temp byte t_142 = NS_time[4],
      temp bool t_143 = t_142 > 0,
      temp bool t_144 = t_141 or t_143,
      temp bool t_145 = t_140 and t_144,
      temp bool t_146 = NS_size < 6,
      temp byte t_147 = NS_time[5],
      temp bool t_148 = t_147 > 0,
      temp bool t_149 = t_146 or t_148,
      temp bool t_150 = t_145 and t_149,
      temp bool t_151 = NS_size < 7,
      temp byte t_152 = NS_time[6],
      temp bool t_153 = t_152 > 0,
      temp bool t_154 = t_151 or t_153,
      temp bool t_155 = t_150 and t_154,
      temp bool t_156 = RN_size < 1,
      temp byte t_157 = RN_time[0],
      temp bool t_158 = t_157 > 0,
      temp bool t_159 = t_156 or t_158,
      temp bool t_160 = t_155 and t_159,
      temp bool t_161 = RN_size < 2,
      temp byte t_162 = RN_time[1],
      temp bool t_163 = t_162 > 0,
      temp bool t_164 = t_161 or t_163,
      temp bool t_165 = t_160 and t_164,
      temp bool t_166 = RN_size < 3,
      temp byte t_167 = RN_time[2],
      temp bool t_168 = t_167 > 0,
      temp bool t_169 = t_166 or t_168,
      temp bool t_170 = t_165 and t_169,
      temp bool t_171 = RN_size < 4,
      temp byte t_172 = RN_time[3],
      temp bool t_173 = t_172 > 0,
      temp bool t_174 = t_171 or t_173,
      temp bool t_175 = t_170 and t_174,
      temp bool t_176 = RN_size < 5,
      temp byte t_177 = RN_time[4],
      temp bool t_178 = t_177 > 0,
      temp bool t_179 = t_176 or t_178,
      temp bool t_180 = t_175 and t_179,
      temp bool t_181 = RN_size < 6,
      temp byte t_182 = RN_time[5],
      temp bool t_183 = t_182 > 0,
      temp bool t_184 = t_181 or t_183,
      temp bool t_185 = t_180 and t_184,
      temp bool t_186 = RN_size < 7,
      temp byte t_187 = RN_time[6],
      temp bool t_188 = t_187 > 0,
      temp bool t_189 = t_186 or t_188,
      temp bool t_190 = t_185 and t_189,
      temp bool t_191 = NR_size < 1,
      temp byte t_192 = NR_time[0],
      temp bool t_193 = t_192 > 0,
      temp bool t_194 = t_191 or t_193,
      temp bool t_195 = t_190 and t_194,
      temp bool t_196 = NR_size < 2,
      temp byte t_197 = NR_time[1],
      temp bool t_198 = t_197 > 0,
      temp bool t_199 = t_196 or t_198,
      temp bool t_200 = t_195 and t_199,
      temp bool t_201 = NR_size < 3,
      temp byte t_202 = NR_time[2],
      temp bool t_203 = t_202 > 0,
      temp bool t_204 = t_201 or t_203,
      temp bool t_205 = t_200 and t_204,
      temp bool t_206 = NR_size < 4,
      temp byte t_207 = NR_time[3],
      temp bool t_208 = t_207 > 0,
      temp bool t_209 = t_206 or t_208,
      temp bool t_210 = t_205 and t_209,
      temp bool t_211 = NR_size < 5,
      temp byte t_212 = NR_time[4],
      temp bool t_213 = t_212 > 0,
      temp bool t_214 = t_211 or t_213,
      temp bool t_215 = t_210 and t_214,
      temp bool t_216 = NR_size < 6,
      temp byte t_217 = NR_time[5],
      temp bool t_218 = t_217 > 0,
      temp bool t_219 = t_216 or t_218,
      temp bool t_220 = t_215 and t_219,
      temp bool t_221 = NR_size < 7,
      temp byte t_222 = NR_time[6],
      temp bool t_223 = t_222 > 0,
      temp bool t_224 = t_221 or t_223,
      temp bool t_225 = t_220 and t_224,
      temp bool t_226 = SN.state == 6,
      temp bool t_227 = t_225 and t_226,
      temp bool t_228 = NS.state == 2,
      temp bool t_229 = t_227 and t_228,
      temp bool t_230 = RN.state == 2,
      temp bool t_231 = t_229 and t_230,
      temp bool t_232 = NR.state == 6,
      temp bool t_233 = t_231 and t_232,
      temp bool t_234 = t_56 and t_233;

    guardCondition t_234;
    effect
      clock.state = 0,
      temp byte t_235 = SN_time[0],
      temp bool t_236 = SN_size > 0,
      temp byte t_237 = t_235 - t_236,
      SN_time[0] = t_237,
      temp byte t_238 = SN_time[1],
      temp bool t_239 = SN_size > 1,
      temp byte t_240 = t_238 - t_239,
      SN_time[1] = t_240,
      temp byte t_241 = SN_time[2],
      temp bool t_242 = SN_size > 2,
      temp byte t_243 = t_241 - t_242,
      SN_time[2] = t_243,
      temp byte t_244 = SN_time[3],
      temp bool t_245 = SN_size > 3,
      temp byte t_246 = t_244 - t_245,
      SN_time[3] = t_246,
      temp byte t_247 = SN_time[4],
      temp bool t_248 = SN_size > 4,
      temp byte t_249 = t_247 - t_248,
      SN_time[4] = t_249,
      temp byte t_250 = SN_time[5],
      temp bool t_251 = SN_size > 5,
      temp byte t_252 = t_250 - t_251,
      SN_time[5] = t_252,
      temp byte t_253 = SN_time[6],
      temp bool t_254 = SN_size > 6,
      temp byte t_255 = t_253 - t_254,
      SN_time[6] = t_255,
      temp byte t_256 = NS_time[0],
      temp bool t_257 = NS_size > 0,
      temp byte t_258 = t_256 - t_257,
      NS_time[0] = t_258,
      temp byte t_259 = NS_time[1],
      temp bool t_260 = NS_size > 1,
      temp byte t_261 = t_259 - t_260,
      NS_time[1] = t_261,
      temp byte t_262 = NS_time[2],
      temp bool t_263 = NS_size > 2,
      temp byte t_264 = t_262 - t_263,
      NS_time[2] = t_264,
      temp byte t_265 = NS_time[3],
      temp bool t_266 = NS_size > 3,
      temp byte t_267 = t_265 - t_266,
      NS_time[3] = t_267,
      temp byte t_268 = NS_time[4],
      temp bool t_269 = NS_size > 4,
      temp byte t_270 = t_268 - t_269,
      NS_time[4] = t_270,
      temp byte t_271 = NS_time[5],
      temp bool t_272 = NS_size > 5,
      temp byte t_273 = t_271 - t_272,
      NS_time[5] = t_273,
      temp byte t_274 = NS_time[6],
      temp bool t_275 = NS_size > 6,
      temp byte t_276 = t_274 - t_275,
      NS_time[6] = t_276,
      temp byte t_277 = NR_time[0],
      temp bool t_278 = NR_size > 0,
      temp byte t_279 = t_277 - t_278,
      NR_time[0] = t_279,
      temp byte t_280 = NR_time[1],
      temp bool t_281 = NR_size > 1,
      temp byte t_282 = t_280 - t_281,
      NR_time[1] = t_282,
      temp byte t_283 = NR_time[2],
      temp bool t_284 = NR_size > 2,
      temp byte t_285 = t_283 - t_284,
      NR_time[2] = t_285,
      temp byte t_286 = NR_time[3],
      temp bool t_287 = NR_size > 3,
      temp byte t_288 = t_286 - t_287,
      NR_time[3] = t_288,
      temp byte t_289 = NR_time[4],
      temp bool t_290 = NR_size > 4,
      temp byte t_291 = t_289 - t_290,
      NR_time[4] = t_291,
      temp byte t_292 = NR_time[5],
      temp bool t_293 = NR_size > 5,
      temp byte t_294 = t_292 - t_293,
      NR_time[5] = t_294,
      temp byte t_295 = NR_time[6],
      temp bool t_296 = NR_size > 6,
      temp byte t_297 = t_295 - t_296,
      NR_time[6] = t_297,
      temp byte t_298 = RN_time[0],
      temp bool t_299 = RN_size > 0,
      temp byte t_300 = t_298 - t_299,
      RN_time[0] = t_300,
      temp byte t_301 = RN_time[1],
      temp bool t_302 = RN_size > 1,
      temp byte t_303 = t_301 - t_302,
      RN_time[1] = t_303,
      temp byte t_304 = RN_time[2],
      temp bool t_305 = RN_size > 2,
      temp byte t_306 = t_304 - t_305,
      RN_time[2] = t_306,
      temp byte t_307 = RN_time[3],
      temp bool t_308 = RN_size > 3,
      temp byte t_309 = t_307 - t_308,
      RN_time[3] = t_309,
      temp byte t_310 = RN_time[4],
      temp bool t_311 = RN_size > 4,
      temp byte t_312 = t_310 - t_311,
      RN_time[4] = t_312,
      temp byte t_313 = RN_time[5],
      temp bool t_314 = RN_size > 5,
      temp byte t_315 = t_313 - t_314,
      RN_time[5] = t_315,
      temp byte t_316 = RN_time[6],
      temp bool t_317 = RN_size > 6,
      temp byte t_318 = t_316 - t_317,
      RN_time[6] = t_318,
      temp byte t_319 = x + 1,
      x = t_319;

  process element 
    guardBlock
      temp bool t_320 = element.state == 3,
      temp bool t_321 = element.packet == 6,
      temp bool t_322 = t_320 and t_321;

    guardCondition t_322;
    effect
      element.state = 4;

  process element 
    guardBlock
      temp bool t_323 = element.state == 4,
      temp bool t_324 = element.nloss < 4,
      temp bool t_325 = t_323 and t_324;

    guardCondition t_325;
    effect
      element.state = 0,
      temp byte t_326 = element.nloss + 1,
      element.nloss = t_326;

  process element 
    guardBlock
      temp bool t_327 = element.state == 3,
      temp bool t_328 = element.packet == 9,
      temp bool t_329 = t_327 and t_328;

    guardCondition t_329;
    effect
      element.state = 7,
      element.i = 0;

  process element 
    guardBlock
      temp bool t_330 = element.state == 7,
      temp bool t_331 = element.i == element.rs_len,
      temp bool t_332 = t_330 and t_331;

    guardCondition t_332;
    effect
      element.state = 0;

  process element 
    guardBlock
      temp bool t_333 = element.state == 7,
      temp bool t_334 = element.i < element.rs_len,
      temp byte t_335 = element.rs[element.i],
      temp bool t_336 = t_335 != element.seq,
      temp bool t_337 = t_334 and t_336,
      temp bool t_338 = t_333 and t_337;

    guardCondition t_338;
    effect
      element.state = 7,
      temp byte t_339 = element.i + 1,
      element.i = t_339;

  process element 
    guardBlock
      temp bool t_340 = element.state == 3,
      temp bool t_341 = element.packet == 3,
      temp bool t_342 = t_340 and t_341;

    guardCondition t_342;
    effect
      element.state = 11,
      element.i = 0;

  process element 
    guardBlock
      temp bool t_343 = element.state == 11,
      temp bool t_344 = element.i < element.rs_len,
      temp byte t_345 = element.rs[element.i],
      temp bool t_346 = t_345 >= element.trail,
      temp bool t_347 = t_344 and t_346,
      temp bool t_348 = t_343 and t_347;

    guardCondition t_348;
    effect
      element.state = 11,
      temp byte t_349 = element.i + 1,
      element.i = t_349;

  process element 
    guardBlock
      temp bool t_350 = element.state == 11,
      temp bool t_351 = element.i < element.rs_len,
      temp byte t_352 = element.rs[element.i],
      temp bool t_353 = t_352 < element.trail,
      temp bool t_354 = t_351 and t_353,
      temp bool t_355 = t_350 and t_354;

    guardCondition t_355;
    effect
      element.state = 11,
      temp byte t_356 = element.rs_len - 1,
      temp byte t_357 = element.rs[t_356],
      element.rs[element.i] = t_357,
      temp byte t_358 = element.rs_len - 1,
      element.rs_len = t_358;

  process element 
    guardBlock
      temp bool t_359 = element.state == 10,
      temp bool t_360 = element.i < element.rs_len,
      temp byte t_361 = element.rs[element.i],
      temp bool t_362 = t_361 != element.packet,
      temp bool t_363 = t_360 and t_362,
      temp bool t_364 = t_359 and t_363;

    guardCondition t_364;
    effect
      element.state = 10,
      temp byte t_365 = element.i + 1,
      element.i = t_365;

  process element 
    guardBlock
      temp bool t_366 = element.state == 10,
      temp bool t_367 = element.i < element.rs_len,
      temp byte t_368 = element.rs[element.i],
      temp bool t_369 = t_368 == element.packet,
      temp bool t_370 = t_367 and t_369,
      temp bool t_371 = t_366 and t_370;

    guardCondition t_371;
    effect
      element.state = 0;

  process receiver 
    guardBlock
      temp bool t_372 = receiver.state == 7,
      temp bool t_373 = RXW_TRAIL < receiver.trail,
      temp bool t_374 = t_372 and t_373;

    guardCondition t_374;
    effect
      receiver.state = 8;

  process receiver 
    guardBlock
      temp bool t_375 = receiver.state == 8,
      temp bool t_376 = RXW_TRAIL <= RXW_LEAD,
      temp byte t_377 = RXW_TRAIL % 5,
      temp byte t_378 = receiver.RXW[t_377],
      temp bool t_379 = t_376 and t_378,
      temp bool t_380 = t_375 and t_379;

    guardCondition t_380;
    effect
      receiver.state = 9,
      temp byte t_381 = receiver.outdata + 1,
      receiver.outdata = t_381;

  process receiver 
    guardBlock
      temp bool t_382 = receiver.state == 8,
      temp bool t_383 = RXW_TRAIL <= RXW_LEAD,
      temp byte t_384 = RXW_TRAIL % 5,
      temp byte t_385 = receiver.RXW[t_384],
      temp bool t_386 = not t_385,
      temp bool t_387 = t_383 and t_386,
      temp bool t_388 = t_382 and t_387;

    guardCondition t_388;
    effect
      receiver.state = 9,
      temp byte t_389 = receiver.outloss + 1,
      receiver.outloss = t_389;

  process receiver 
    guardBlock
      temp bool t_390 = receiver.state == 8,
      temp bool t_391 = RXW_TRAIL > RXW_LEAD,
      temp bool t_392 = t_390 and t_391;

    guardCondition t_392;
    effect
      receiver.state = 9,
      temp byte t_393 = receiver.outloss + 1,
      receiver.outloss = t_393,
      temp byte t_394 = RXW_LEAD + 1,
      RXW_LEAD = t_394;

  process receiver 
    guardBlock
      temp bool t_395 = receiver.state == 9;

    guardCondition t_395;
    effect
      receiver.state = 7,
      temp byte t_396 = RXW_TRAIL % 5,
      receiver.RXW[t_396] = 0,
      temp byte t_397 = RXW_TRAIL + 1,
      RXW_TRAIL = t_397;

  process receiver 
    guardBlock
      temp bool t_398 = receiver.state == 7,
      temp bool t_399 = RXW_TRAIL >= receiver.trail,
      temp bool t_400 = t_398 and t_399;

    guardCondition t_400;
    effect
      receiver.state = 5;

  process receiver 
    guardBlock
      temp bool t_401 = receiver.state == 5,
      temp bool t_402 = receiver.packet == 6,
      temp bool t_403 = receiver.packet == 9,
      temp bool t_404 = t_402 or t_403,
      temp byte t_405 = RXW_LEAD + 1,
      temp bool t_406 = receiver.sqn > t_405,
      temp bool t_407 = t_404 and t_406,
      temp bool t_408 = receiver.packet == 3,
      temp bool t_409 = receiver.sqn > RXW_LEAD,
      temp bool t_410 = t_408 and t_409,
      temp bool t_411 = t_407 or t_410,
      temp bool t_412 = t_401 and t_411;

    guardCondition t_412;
    effect
      receiver.state = 6;

  process receiver 
    guardBlock
      temp bool t_413 = receiver.state == 5,
      temp bool t_414 = receiver.packet == 3,
      temp bool t_415 = receiver.sqn <= RXW_LEAD,
      temp bool t_416 = t_414 and t_415,
      temp bool t_417 = t_413 and t_416;

    guardCondition t_417;
    effect
      receiver.state = 0;

  process receiver 
    guardBlock
      temp bool t_418 = receiver.state == 5,
      temp bool t_419 = receiver.packet == 6,
      temp bool t_420 = receiver.packet == 9,
      temp bool t_421 = t_419 or t_420,
      temp bool t_422 = RXW_TRAIL <= receiver.sqn,
      temp bool t_423 = t_421 and t_422,
      temp bool t_424 = receiver.sqn <= RXW_LEAD,
      temp bool t_425 = t_423 and t_424,
      temp bool t_426 = t_418 and t_425;

    guardCondition t_426;
    effect
      receiver.state = 0,
      temp byte t_427 = receiver.sqn % 5,
      receiver.RXW[t_427] = 1;

  process receiver 
    guardBlock
      temp bool t_428 = receiver.state == 5,
      temp bool t_429 = receiver.sqn < RXW_TRAIL,
      temp bool t_430 = t_428 and t_429;

    guardCondition t_430;
    effect
      receiver.state = 0;

  process receiver 
    guardBlock
      temp bool t_431 = receiver.state == 5,
      temp bool t_432 = receiver.packet == 6,
      temp bool t_433 = receiver.packet == 9,
      temp bool t_434 = t_432 or t_433,
      temp byte t_435 = RXW_LEAD + 1,
      temp bool t_436 = receiver.sqn == t_435,
      temp bool t_437 = t_434 and t_436,
      temp bool t_438 = t_431 and t_437;

    guardCondition t_438;
    effect
      receiver.state = 0,
      temp byte t_439 = receiver.sqn % 5,
      receiver.RXW[t_439] = 1,
      temp byte t_440 = RXW_LEAD + 1,
      RXW_LEAD = t_440;

  process receiver 
    guardBlock
      temp bool t_441 = receiver.state == 0,
      temp bool t_442 = RXW_TRAIL <= RXW_LEAD,
      temp byte t_443 = RXW_TRAIL % 5,
      temp byte t_444 = receiver.RXW[t_443],
      temp bool t_445 = t_442 and t_444,
      temp bool t_446 = t_441 and t_445;

    guardCondition t_446;
    effect
      receiver.state = 0,
      temp byte t_447 = RXW_TRAIL % 5,
      receiver.RXW[t_447] = 0,
      temp byte t_448 = RXW_TRAIL + 1,
      RXW_TRAIL = t_448,
      temp byte t_449 = receiver.outdata + 1,
      receiver.outdata = t_449;

  process SN 
    guardBlock
      temp bool t_450 = SN.state == 4;

    guardCondition t_450;
    effect
      SN.state = 6,
      SN_time[SN_size] = 2,
      temp byte t_451 = SN_size + 1,
      SN_size = t_451;

  process SN 
    guardBlock
      temp bool t_452 = SN.state == 5;

    guardCondition t_452;
    effect
      SN.state = 6,
      temp byte t_453 = SN_time[1],
      SN_time[0] = t_453,
      temp byte t_454 = SN_time[2],
      SN_time[1] = t_454,
      temp byte t_455 = SN_time[3],
      SN_time[2] = t_455,
      temp byte t_456 = SN_time[4],
      SN_time[3] = t_456,
      temp byte t_457 = SN_time[5],
      SN_time[4] = t_457,
      temp byte t_458 = SN_time[6],
      SN_time[5] = t_458,
      SN_time[6] = 0,
      temp byte t_459 = SN_size - 1,
      SN_size = t_459;

  process NS 
    guardBlock
      temp bool t_460 = NS.state == 0;

    guardCondition t_460;
    effect
      NS.state = 2,
      NS_time[NS_size] = 2,
      temp byte t_461 = NS_size + 1,
      NS_size = t_461;

  process NS 
    guardBlock
      temp bool t_462 = NS.state == 1;

    guardCondition t_462;
    effect
      NS.state = 2,
      temp byte t_463 = NS_time[1],
      NS_time[0] = t_463,
      temp byte t_464 = NS_time[2],
      NS_time[1] = t_464,
      temp byte t_465 = NS_time[3],
      NS_time[2] = t_465,
      temp byte t_466 = NS_time[4],
      NS_time[3] = t_466,
      temp byte t_467 = NS_time[5],
      NS_time[4] = t_467,
      temp byte t_468 = NS_time[6],
      NS_time[5] = t_468,
      NS_time[6] = 0,
      temp byte t_469 = NS_size - 1,
      NS_size = t_469;

  process RN 
    guardBlock
      temp bool t_470 = RN.state == 0;

    guardCondition t_470;
    effect
      RN.state = 2,
      RN_time[RN_size] = 2,
      temp byte t_471 = RN_size + 1,
      RN_size = t_471;

  process RN 
    guardBlock
      temp bool t_472 = RN.state == 1;

    guardCondition t_472;
    effect
      RN.state = 2,
      temp byte t_473 = RN_time[1],
      RN_time[0] = t_473,
      temp byte t_474 = RN_time[2],
      RN_time[1] = t_474,
      temp byte t_475 = RN_time[3],
      RN_time[2] = t_475,
      temp byte t_476 = RN_time[4],
      RN_time[3] = t_476,
      temp byte t_477 = RN_time[5],
      RN_time[4] = t_477,
      temp byte t_478 = RN_time[6],
      RN_time[5] = t_478,
      RN_time[6] = 0,
      temp byte t_479 = RN_size - 1,
      RN_size = t_479;

  process NR 
    guardBlock
      temp bool t_480 = NR.state == 4;

    guardCondition t_480;
    effect
      NR.state = 6,
      NR_time[NR_size] = 2,
      temp byte t_481 = NR_size + 1,
      NR_size = t_481;

  process NR 
    guardBlock
      temp bool t_482 = NR.state == 5;

    guardCondition t_482;
    effect
      NR.state = 6,
      temp byte t_483 = NR_time[1],
      NR_time[0] = t_483,
      temp byte t_484 = NR_time[2],
      NR_time[1] = t_484,
      temp byte t_485 = NR_time[3],
      NR_time[2] = t_485,
      temp byte t_486 = NR_time[4],
      NR_time[3] = t_486,
      temp byte t_487 = NR_time[5],
      NR_time[4] = t_487,
      temp byte t_488 = NR_time[6],
      NR_time[5] = t_488,
      NR_time[6] = 0,
      temp byte t_489 = NR_size - 1,
      NR_size = t_489;

  process LTL_property 
    guardBlock
      temp bool t_490 = LTL_property.state == 0;

    guardCondition t_490;
    effect
      LTL_property.state = 0;

  process LTL_property 
    guardBlock
      temp bool t_491 = LTL_property.state == 0,
      temp bool t_492 = receiver.state == 6,
      temp byte t_493 = RXW_LEAD + 1,
      temp bool t_494 = t_493 == 3,
      temp bool t_495 = t_492 and t_494,
      temp bool t_496 = sender.state == 1,
      temp bool t_497 = packet == 3,
      temp bool t_498 = t_496 and t_497,
      temp bool t_499 = not t_498,
      temp bool t_500 = t_495 and t_499,
      temp bool t_501 = t_491 and t_500;

    guardCondition t_501;
    effect
      LTL_property.state = 1;

  process LTL_property 
    guardBlock
      temp bool t_502 = LTL_property.state == 1,
      temp bool t_503 = sender.state == 1,
      temp bool t_504 = packet == 3,
      temp bool t_505 = t_503 and t_504,
      temp bool t_506 = not t_505,
      temp bool t_507 = t_502 and t_506;

    guardCondition t_507;
    effect
      LTL_property.state = 1;

  process sender_SN 
    guardBlock
      temp bool t_508 = sender.state == 0,
      temp bool t_509 = sqn <= TXW_LEAD,
      temp bool t_510 = t_508 and t_509,
      temp bool t_511 = SN.state == 6,
      temp bool t_512 = SN_size == 7,
      temp bool t_513 = not t_512,
      temp bool t_514 = t_511 and t_513,
      temp bool t_515 = t_510 and t_514;

    guardCondition t_515;
    effect
      sender.state = 2,
      SN.buf_0[SN_size] = 6,
      SN.state = 0;

  process sender_SN 
    guardBlock
      temp bool t_516 = sender.state == 0,
      temp bool t_517 = sqn <= TXW_LEAD,
      temp bool t_518 = t_516 and t_517,
      temp bool t_519 = SN.state == 0,
      temp bool t_520 = t_518 and t_519;

    guardCondition t_520;
    effect
      sender.state = 2,
      SN.buf_1[SN_size] = 6,
      SN.state = 2;

  process sender_SN 
    guardBlock
      temp bool t_521 = sender.state == 0,
      temp bool t_522 = sqn <= TXW_LEAD,
      temp bool t_523 = t_521 and t_522,
      temp bool t_524 = SN.state == 2,
      temp bool t_525 = t_523 and t_524;

    guardCondition t_525;
    effect
      sender.state = 2,
      SN.buf_2[SN_size] = 6,
      SN.state = 4;

  process sender_SN 
    guardBlock
      temp bool t_526 = sender.state == 2,
      temp bool t_527 = SN.state == 6,
      temp bool t_528 = SN_size == 7,
      temp bool t_529 = not t_528,
      temp bool t_530 = t_527 and t_529,
      temp bool t_531 = t_526 and t_530;

    guardCondition t_531;
    effect
      sender.state = 3,
      SN.buf_0[SN_size] = sqn,
      SN.state = 0;

  process sender_SN 
    guardBlock
      temp bool t_532 = sender.state == 2,
      temp bool t_533 = SN.state == 0,
      temp bool t_534 = t_532 and t_533;

    guardCondition t_534;
    effect
      sender.state = 3,
      SN.buf_1[SN_size] = sqn,
      SN.state = 2;

  process sender_SN 
    guardBlock
      temp bool t_535 = sender.state == 2,
      temp bool t_536 = SN.state == 2,
      temp bool t_537 = t_535 and t_536;

    guardCondition t_537;
    effect
      sender.state = 3,
      SN.buf_2[SN_size] = sqn,
      SN.state = 4;

  process sender_SN 
    guardBlock
      temp bool t_538 = sender.state == 3,
      temp bool t_539 = SN.state == 6,
      temp bool t_540 = SN_size == 7,
      temp bool t_541 = not t_540,
      temp bool t_542 = t_539 and t_541,
      temp bool t_543 = t_538 and t_542;

    guardCondition t_543;
    effect
      sender.state = 0,
      temp byte t_544 = sqn + 1,
      sqn = t_544,
      SN.buf_0[SN_size] = TXW_TRAIL,
      SN.state = 0;

  process sender_SN 
    guardBlock
      temp bool t_545 = sender.state == 3,
      temp bool t_546 = SN.state == 0,
      temp bool t_547 = t_545 and t_546;

    guardCondition t_547;
    effect
      sender.state = 0,
      temp byte t_548 = sqn + 1,
      sqn = t_548,
      SN.buf_1[SN_size] = TXW_TRAIL,
      SN.state = 2;

  process sender_SN 
    guardBlock
      temp bool t_549 = sender.state == 3,
      temp bool t_550 = SN.state == 2,
      temp bool t_551 = t_549 and t_550;

    guardCondition t_551;
    effect
      sender.state = 0,
      temp byte t_552 = sqn + 1,
      sqn = t_552,
      SN.buf_2[SN_size] = TXW_TRAIL,
      SN.state = 4;

  process sender_SN 
    guardBlock
      temp bool t_553 = sender.state == 0,
      temp bool t_554 = c >= 2,
      temp bool t_555 = t_553 and t_554,
      temp bool t_556 = SN.state == 6,
      temp bool t_557 = SN_size == 7,
      temp bool t_558 = not t_557,
      temp bool t_559 = t_556 and t_558,
      temp bool t_560 = t_555 and t_559;

    guardCondition t_560;
    effect
      sender.state = 4,
      SN.buf_0[SN_size] = 3,
      SN.state = 0;

  process sender_SN 
    guardBlock
      temp bool t_561 = sender.state == 0,
      temp bool t_562 = c >= 2,
      temp bool t_563 = t_561 and t_562,
      temp bool t_564 = SN.state == 0,
      temp bool t_565 = t_563 and t_564;

    guardCondition t_565;
    effect
      sender.state = 4,
      SN.buf_1[SN_size] = 3,
      SN.state = 2;

  process sender_SN 
    guardBlock
      temp bool t_566 = sender.state == 0,
      temp bool t_567 = c >= 2,
      temp bool t_568 = t_566 and t_567,
      temp bool t_569 = SN.state == 2,
      temp bool t_570 = t_568 and t_569;

    guardCondition t_570;
    effect
      sender.state = 4,
      SN.buf_2[SN_size] = 3,
      SN.state = 4;

  process sender_SN 
    guardBlock
      temp bool t_571 = sender.state == 4,
      temp bool t_572 = SN.state == 6,
      temp bool t_573 = SN_size == 7,
      temp bool t_574 = not t_573,
      temp bool t_575 = t_572 and t_574,
      temp bool t_576 = t_571 and t_575;

    guardCondition t_576;
    effect
      sender.state = 5,
      SN.buf_0[SN_size] = TXW_LEAD,
      SN.state = 0;

  process sender_SN 
    guardBlock
      temp bool t_577 = sender.state == 4,
      temp bool t_578 = SN.state == 0,
      temp bool t_579 = t_577 and t_578;

    guardCondition t_579;
    effect
      sender.state = 5,
      SN.buf_1[SN_size] = TXW_LEAD,
      SN.state = 2;

  process sender_SN 
    guardBlock
      temp bool t_580 = sender.state == 4,
      temp bool t_581 = SN.state == 2,
      temp bool t_582 = t_580 and t_581;

    guardCondition t_582;
    effect
      sender.state = 5,
      SN.buf_2[SN_size] = TXW_LEAD,
      SN.state = 4;

  process sender_SN 
    guardBlock
      temp bool t_583 = sender.state == 5,
      temp bool t_584 = SN.state == 6,
      temp bool t_585 = SN_size == 7,
      temp bool t_586 = not t_585,
      temp bool t_587 = t_584 and t_586,
      temp bool t_588 = t_583 and t_587;

    guardCondition t_588;
    effect
      sender.state = 0,
      c = 0,
      SN.buf_0[SN_size] = TXW_TRAIL,
      SN.state = 0;

  process sender_SN 
    guardBlock
      temp bool t_589 = sender.state == 5,
      temp bool t_590 = SN.state == 0,
      temp bool t_591 = t_589 and t_590;

    guardCondition t_591;
    effect
      sender.state = 0,
      c = 0,
      SN.buf_1[SN_size] = TXW_TRAIL,
      SN.state = 2;

  process sender_SN 
    guardBlock
      temp bool t_592 = sender.state == 5,
      temp bool t_593 = SN.state == 2,
      temp bool t_594 = t_592 and t_593;

    guardCondition t_594;
    effect
      sender.state = 0,
      c = 0,
      SN.buf_2[SN_size] = TXW_TRAIL,
      SN.state = 4;

  process sender_SN 
    guardBlock
      temp bool t_595 = sender.state == 0,
      temp bool t_596 = TXW_LEAD == 9,
      temp bool t_597 = close and t_596,
      temp byte t_598 = TXW_LEAD + 1,
      temp bool t_599 = TXW_TRAIL == t_598,
      temp bool t_600 = t_597 and t_599,
      temp bool t_601 = t_595 and t_600,
      temp bool t_602 = SN.state == 6,
      temp bool t_603 = SN_size == 7,
      temp bool t_604 = not t_603,
      temp bool t_605 = t_602 and t_604,
      temp bool t_606 = t_601 and t_605;

    guardCondition t_606;
    effect
      sender.state = 6,
      SN.buf_0[SN_size] = 3,
      SN.state = 0;

  process sender_SN 
    guardBlock
      temp bool t_607 = sender.state == 0,
      temp bool t_608 = TXW_LEAD == 9,
      temp bool t_609 = close and t_608,
      temp byte t_610 = TXW_LEAD + 1,
      temp bool t_611 = TXW_TRAIL == t_610,
      temp bool t_612 = t_609 and t_611,
      temp bool t_613 = t_607 and t_612,
      temp bool t_614 = SN.state == 0,
      temp bool t_615 = t_613 and t_614;

    guardCondition t_615;
    effect
      sender.state = 6,
      SN.buf_1[SN_size] = 3,
      SN.state = 2;

  process sender_SN 
    guardBlock
      temp bool t_616 = sender.state == 0,
      temp bool t_617 = TXW_LEAD == 9,
      temp bool t_618 = close and t_617,
      temp byte t_619 = TXW_LEAD + 1,
      temp bool t_620 = TXW_TRAIL == t_619,
      temp bool t_621 = t_618 and t_620,
      temp bool t_622 = t_616 and t_621,
      temp bool t_623 = SN.state == 2,
      temp bool t_624 = t_622 and t_623;

    guardCondition t_624;
    effect
      sender.state = 6,
      SN.buf_2[SN_size] = 3,
      SN.state = 4;

  process sender_SN 
    guardBlock
      temp bool t_625 = sender.state == 6,
      temp bool t_626 = SN.state == 6,
      temp bool t_627 = SN_size == 7,
      temp bool t_628 = not t_627,
      temp bool t_629 = t_626 and t_628,
      temp bool t_630 = t_625 and t_629;

    guardCondition t_630;
    effect
      sender.state = 7,
      SN.buf_0[SN_size] = TXW_LEAD,
      SN.state = 0;

  process sender_SN 
    guardBlock
      temp bool t_631 = sender.state == 6,
      temp bool t_632 = SN.state == 0,
      temp bool t_633 = t_631 and t_632;

    guardCondition t_633;
    effect
      sender.state = 7,
      SN.buf_1[SN_size] = TXW_LEAD,
      SN.state = 2;

  process sender_SN 
    guardBlock
      temp bool t_634 = sender.state == 6,
      temp bool t_635 = SN.state == 2,
      temp bool t_636 = t_634 and t_635;

    guardCondition t_636;
    effect
      sender.state = 7,
      SN.buf_2[SN_size] = TXW_LEAD,
      SN.state = 4;

  process sender_SN 
    guardBlock
      temp bool t_637 = sender.state == 7,
      temp bool t_638 = SN.state == 6,
      temp bool t_639 = SN_size == 7,
      temp bool t_640 = not t_639,
      temp bool t_641 = t_638 and t_640,
      temp bool t_642 = t_637 and t_641;

    guardCondition t_642;
    effect
      sender.state = 0,
      close = 0,
      c = 0,
      SN.buf_0[SN_size] = TXW_TRAIL,
      SN.state = 0;

  process sender_SN 
    guardBlock
      temp bool t_643 = sender.state == 7,
      temp bool t_644 = SN.state == 0,
      temp bool t_645 = t_643 and t_644;

    guardCondition t_645;
    effect
      sender.state = 0,
      close = 0,
      c = 0,
      SN.buf_1[SN_size] = TXW_TRAIL,
      SN.state = 2;

  process sender_SN 
    guardBlock
      temp bool t_646 = sender.state == 7,
      temp bool t_647 = SN.state == 2,
      temp bool t_648 = t_646 and t_647;

    guardCondition t_648;
    effect
      sender.state = 0,
      close = 0,
      c = 0,
      SN.buf_2[SN_size] = TXW_TRAIL,
      SN.state = 4;

  process sender_SN 
    guardBlock
      temp bool t_649 = sender.state == 1,
      temp bool t_650 = packet <= TXW_LEAD,
      temp bool t_651 = packet >= TXW_TRAIL,
      temp bool t_652 = t_650 and t_651,
      temp bool t_653 = t_649 and t_652,
      temp bool t_654 = SN.state == 6,
      temp bool t_655 = SN_size == 7,
      temp bool t_656 = not t_655,
      temp bool t_657 = t_654 and t_656,
      temp bool t_658 = t_653 and t_657;

    guardCondition t_658;
    effect
      sender.state = 8,
      SN.buf_0[SN_size] = 9,
      SN.state = 0;

  process sender_SN 
    guardBlock
      temp bool t_659 = sender.state == 1,
      temp bool t_660 = packet <= TXW_LEAD,
      temp bool t_661 = packet >= TXW_TRAIL,
      temp bool t_662 = t_660 and t_661,
      temp bool t_663 = t_659 and t_662,
      temp bool t_664 = SN.state == 0,
      temp bool t_665 = t_663 and t_664;

    guardCondition t_665;
    effect
      sender.state = 8,
      SN.buf_1[SN_size] = 9,
      SN.state = 2;

  process sender_SN 
    guardBlock
      temp bool t_666 = sender.state == 1,
      temp bool t_667 = packet <= TXW_LEAD,
      temp bool t_668 = packet >= TXW_TRAIL,
      temp bool t_669 = t_667 and t_668,
      temp bool t_670 = t_666 and t_669,
      temp bool t_671 = SN.state == 2,
      temp bool t_672 = t_670 and t_671;

    guardCondition t_672;
    effect
      sender.state = 8,
      SN.buf_2[SN_size] = 9,
      SN.state = 4;

  process sender_SN 
    guardBlock
      temp bool t_673 = sender.state == 8,
      temp bool t_674 = SN.state == 6,
      temp bool t_675 = SN_size == 7,
      temp bool t_676 = not t_675,
      temp bool t_677 = t_674 and t_676,
      temp bool t_678 = t_673 and t_677;

    guardCondition t_678;
    effect
      sender.state = 9,
      SN.buf_0[SN_size] = packet,
      SN.state = 0;

  process sender_SN 
    guardBlock
      temp bool t_679 = sender.state == 8,
      temp bool t_680 = SN.state == 0,
      temp bool t_681 = t_679 and t_680;

    guardCondition t_681;
    effect
      sender.state = 9,
      SN.buf_1[SN_size] = packet,
      SN.state = 2;

  process sender_SN 
    guardBlock
      temp bool t_682 = sender.state == 8,
      temp bool t_683 = SN.state == 2,
      temp bool t_684 = t_682 and t_683;

    guardCondition t_684;
    effect
      sender.state = 9,
      SN.buf_2[SN_size] = packet,
      SN.state = 4;

  process sender_SN 
    guardBlock
      temp bool t_685 = sender.state == 9,
      temp bool t_686 = SN.state == 6,
      temp bool t_687 = SN_size == 7,
      temp bool t_688 = not t_687,
      temp bool t_689 = t_686 and t_688,
      temp bool t_690 = t_685 and t_689;

    guardCondition t_690;
    effect
      sender.state = 0,
      SN.buf_0[SN_size] = TXW_TRAIL,
      SN.state = 0;

  process sender_SN 
    guardBlock
      temp bool t_691 = sender.state == 9,
      temp bool t_692 = SN.state == 0,
      temp bool t_693 = t_691 and t_692;

    guardCondition t_693;
    effect
      sender.state = 0,
      SN.buf_1[SN_size] = TXW_TRAIL,
      SN.state = 2;

  process sender_SN 
    guardBlock
      temp bool t_694 = sender.state == 9,
      temp bool t_695 = SN.state == 2,
      temp bool t_696 = t_694 and t_695;

    guardCondition t_696;
    effect
      sender.state = 0,
      SN.buf_2[SN_size] = TXW_TRAIL,
      SN.state = 4;

  process RN_element 
    guardBlock
      temp bool t_697 = RN.state == 2,
      temp bool t_698 = RN_size == 0,
      temp bool t_699 = not t_698,
      temp byte t_700 = RN_time[0],
      temp bool t_701 = t_700 == 0,
      temp bool t_702 = t_699 and t_701,
      temp bool t_703 = t_697 and t_702,
      temp bool t_704 = element.state == 0,
      temp bool t_705 = t_703 and t_704;

    guardCondition t_705;
    effect
      RN.state = 1,
      temp byte t_706 = RN.buf_0[1],
      RN.buf_0[0] = t_706,
      temp byte t_707 = RN.buf_0[2],
      RN.buf_0[1] = t_707,
      temp byte t_708 = RN.buf_0[3],
      RN.buf_0[2] = t_708,
      temp byte t_709 = RN.buf_0[4],
      RN.buf_0[3] = t_709,
      temp byte t_710 = RN.buf_0[5],
      RN.buf_0[4] = t_710,
      temp byte t_711 = RN.buf_0[6],
      RN.buf_0[5] = t_711,
      RN.buf_0[6] = 0,
      temp byte t_712 = RN.buf_0[0],
      element.packet = t_712,
      element.state = 10,
      element.i = 0;

  process SN_element 
    guardBlock
      temp bool t_713 = SN.state == 6,
      temp bool t_714 = SN_size == 0,
      temp bool t_715 = not t_714,
      temp byte t_716 = SN_time[0],
      temp bool t_717 = t_716 == 0,
      temp bool t_718 = t_715 and t_717,
      temp bool t_719 = t_713 and t_718,
      temp bool t_720 = element.state == 0,
      temp bool t_721 = t_719 and t_720;

    guardCondition t_721;
    effect
      SN.state = 1,
      temp byte t_722 = SN.buf_0[1],
      SN.buf_0[0] = t_722,
      temp byte t_723 = SN.buf_0[2],
      SN.buf_0[1] = t_723,
      temp byte t_724 = SN.buf_0[3],
      SN.buf_0[2] = t_724,
      temp byte t_725 = SN.buf_0[4],
      SN.buf_0[3] = t_725,
      temp byte t_726 = SN.buf_0[5],
      SN.buf_0[4] = t_726,
      temp byte t_727 = SN.buf_0[6],
      SN.buf_0[5] = t_727,
      SN.buf_0[6] = 0,
      temp byte t_728 = SN.buf_0[0],
      element.packet = t_728,
      element.state = 1;

  process SN_element 
    guardBlock
      temp bool t_729 = SN.state == 6,
      temp bool t_730 = SN_size == 0,
      temp bool t_731 = not t_730,
      temp byte t_732 = SN_time[0],
      temp bool t_733 = t_732 == 0,
      temp bool t_734 = t_731 and t_733,
      temp bool t_735 = t_729 and t_734,
      temp bool t_736 = element.state == 1,
      temp bool t_737 = t_735 and t_736;

    guardCondition t_737;
    effect
      SN.state = 1,
      temp byte t_738 = SN.buf_0[1],
      SN.buf_0[0] = t_738,
      temp byte t_739 = SN.buf_0[2],
      SN.buf_0[1] = t_739,
      temp byte t_740 = SN.buf_0[3],
      SN.buf_0[2] = t_740,
      temp byte t_741 = SN.buf_0[4],
      SN.buf_0[3] = t_741,
      temp byte t_742 = SN.buf_0[5],
      SN.buf_0[4] = t_742,
      temp byte t_743 = SN.buf_0[6],
      SN.buf_0[5] = t_743,
      SN.buf_0[6] = 0,
      temp byte t_744 = SN.buf_0[0],
      element.seq = t_744,
      element.state = 2;

  process SN_element 
    guardBlock
      temp bool t_745 = SN.state == 6,
      temp bool t_746 = SN_size == 0,
      temp bool t_747 = not t_746,
      temp byte t_748 = SN_time[0],
      temp bool t_749 = t_748 == 0,
      temp bool t_750 = t_747 and t_749,
      temp bool t_751 = t_745 and t_750,
      temp bool t_752 = element.state == 2,
      temp bool t_753 = t_751 and t_752;

    guardCondition t_753;
    effect
      SN.state = 1,
      temp byte t_754 = SN.buf_0[1],
      SN.buf_0[0] = t_754,
      temp byte t_755 = SN.buf_0[2],
      SN.buf_0[1] = t_755,
      temp byte t_756 = SN.buf_0[3],
      SN.buf_0[2] = t_756,
      temp byte t_757 = SN.buf_0[4],
      SN.buf_0[3] = t_757,
      temp byte t_758 = SN.buf_0[5],
      SN.buf_0[4] = t_758,
      temp byte t_759 = SN.buf_0[6],
      SN.buf_0[5] = t_759,
      SN.buf_0[6] = 0,
      temp byte t_760 = SN.buf_0[0],
      element.trail = t_760,
      element.state = 3;

  process SN_element 
    guardBlock
      temp bool t_761 = SN.state == 1,
      temp bool t_762 = element.state == 0,
      temp bool t_763 = t_761 and t_762;

    guardCondition t_763;
    effect
      SN.state = 3,
      temp byte t_764 = SN.buf_1[1],
      SN.buf_1[0] = t_764,
      temp byte t_765 = SN.buf_1[2],
      SN.buf_1[1] = t_765,
      temp byte t_766 = SN.buf_1[3],
      SN.buf_1[2] = t_766,
      temp byte t_767 = SN.buf_1[4],
      SN.buf_1[3] = t_767,
      temp byte t_768 = SN.buf_1[5],
      SN.buf_1[4] = t_768,
      temp byte t_769 = SN.buf_1[6],
      SN.buf_1[5] = t_769,
      SN.buf_1[6] = 0,
      temp byte t_770 = SN.buf_1[0],
      element.packet = t_770,
      element.state = 1;

  process SN_element 
    guardBlock
      temp bool t_771 = SN.state == 1,
      temp bool t_772 = element.state == 1,
      temp bool t_773 = t_771 and t_772;

    guardCondition t_773;
    effect
      SN.state = 3,
      temp byte t_774 = SN.buf_1[1],
      SN.buf_1[0] = t_774,
      temp byte t_775 = SN.buf_1[2],
      SN.buf_1[1] = t_775,
      temp byte t_776 = SN.buf_1[3],
      SN.buf_1[2] = t_776,
      temp byte t_777 = SN.buf_1[4],
      SN.buf_1[3] = t_777,
      temp byte t_778 = SN.buf_1[5],
      SN.buf_1[4] = t_778,
      temp byte t_779 = SN.buf_1[6],
      SN.buf_1[5] = t_779,
      SN.buf_1[6] = 0,
      temp byte t_780 = SN.buf_1[0],
      element.seq = t_780,
      element.state = 2;

  process SN_element 
    guardBlock
      temp bool t_781 = SN.state == 1,
      temp bool t_782 = element.state == 2,
      temp bool t_783 = t_781 and t_782;

    guardCondition t_783;
    effect
      SN.state = 3,
      temp byte t_784 = SN.buf_1[1],
      SN.buf_1[0] = t_784,
      temp byte t_785 = SN.buf_1[2],
      SN.buf_1[1] = t_785,
      temp byte t_786 = SN.buf_1[3],
      SN.buf_1[2] = t_786,
      temp byte t_787 = SN.buf_1[4],
      SN.buf_1[3] = t_787,
      temp byte t_788 = SN.buf_1[5],
      SN.buf_1[4] = t_788,
      temp byte t_789 = SN.buf_1[6],
      SN.buf_1[5] = t_789,
      SN.buf_1[6] = 0,
      temp byte t_790 = SN.buf_1[0],
      element.trail = t_790,
      element.state = 3;

  process SN_element 
    guardBlock
      temp bool t_791 = SN.state == 3,
      temp bool t_792 = element.state == 0,
      temp bool t_793 = t_791 and t_792;

    guardCondition t_793;
    effect
      SN.state = 5,
      temp byte t_794 = SN.buf_2[1],
      SN.buf_2[0] = t_794,
      temp byte t_795 = SN.buf_2[2],
      SN.buf_2[1] = t_795,
      temp byte t_796 = SN.buf_2[3],
      SN.buf_2[2] = t_796,
      temp byte t_797 = SN.buf_2[4],
      SN.buf_2[3] = t_797,
      temp byte t_798 = SN.buf_2[5],
      SN.buf_2[4] = t_798,
      temp byte t_799 = SN.buf_2[6],
      SN.buf_2[5] = t_799,
      SN.buf_2[6] = 0,
      temp byte t_800 = SN.buf_2[0],
      element.packet = t_800,
      element.state = 1;

  process SN_element 
    guardBlock
      temp bool t_801 = SN.state == 3,
      temp bool t_802 = element.state == 1,
      temp bool t_803 = t_801 and t_802;

    guardCondition t_803;
    effect
      SN.state = 5,
      temp byte t_804 = SN.buf_2[1],
      SN.buf_2[0] = t_804,
      temp byte t_805 = SN.buf_2[2],
      SN.buf_2[1] = t_805,
      temp byte t_806 = SN.buf_2[3],
      SN.buf_2[2] = t_806,
      temp byte t_807 = SN.buf_2[4],
      SN.buf_2[3] = t_807,
      temp byte t_808 = SN.buf_2[5],
      SN.buf_2[4] = t_808,
      temp byte t_809 = SN.buf_2[6],
      SN.buf_2[5] = t_809,
      SN.buf_2[6] = 0,
      temp byte t_810 = SN.buf_2[0],
      element.seq = t_810,
      element.state = 2;

  process SN_element 
    guardBlock
      temp bool t_811 = SN.state == 3,
      temp bool t_812 = element.state == 2,
      temp bool t_813 = t_811 and t_812;

    guardCondition t_813;
    effect
      SN.state = 5,
      temp byte t_814 = SN.buf_2[1],
      SN.buf_2[0] = t_814,
      temp byte t_815 = SN.buf_2[2],
      SN.buf_2[1] = t_815,
      temp byte t_816 = SN.buf_2[3],
      SN.buf_2[2] = t_816,
      temp byte t_817 = SN.buf_2[4],
      SN.buf_2[3] = t_817,
      temp byte t_818 = SN.buf_2[5],
      SN.buf_2[4] = t_818,
      temp byte t_819 = SN.buf_2[6],
      SN.buf_2[5] = t_819,
      SN.buf_2[6] = 0,
      temp byte t_820 = SN.buf_2[0],
      element.trail = t_820,
      element.state = 3;

  process NR_receiver 
    guardBlock
      temp bool t_821 = NR.state == 6,
      temp bool t_822 = NR_size == 0,
      temp bool t_823 = not t_822,
      temp byte t_824 = NR_time[0],
      temp bool t_825 = t_824 == 0,
      temp bool t_826 = t_823 and t_825,
      temp bool t_827 = t_821 and t_826,
      temp bool t_828 = receiver.state == 0,
      temp bool t_829 = t_827 and t_828;

    guardCondition t_829;
    effect
      NR.state = 1,
      temp byte t_830 = NR.buf_0[1],
      NR.buf_0[0] = t_830,
      temp byte t_831 = NR.buf_0[2],
      NR.buf_0[1] = t_831,
      temp byte t_832 = NR.buf_0[3],
      NR.buf_0[2] = t_832,
      temp byte t_833 = NR.buf_0[4],
      NR.buf_0[3] = t_833,
      temp byte t_834 = NR.buf_0[5],
      NR.buf_0[4] = t_834,
      temp byte t_835 = NR.buf_0[6],
      NR.buf_0[5] = t_835,
      NR.buf_0[6] = 0,
      temp byte t_836 = NR.buf_0[0],
      receiver.packet = t_836,
      receiver.state = 2;

  process NR_receiver 
    guardBlock
      temp bool t_837 = NR.state == 6,
      temp bool t_838 = NR_size == 0,
      temp bool t_839 = not t_838,
      temp byte t_840 = NR_time[0],
      temp bool t_841 = t_840 == 0,
      temp bool t_842 = t_839 and t_841,
      temp bool t_843 = t_837 and t_842,
      temp bool t_844 = receiver.state == 2,
      temp bool t_845 = t_843 and t_844;

    guardCondition t_845;
    effect
      NR.state = 1,
      temp byte t_846 = NR.buf_0[1],
      NR.buf_0[0] = t_846,
      temp byte t_847 = NR.buf_0[2],
      NR.buf_0[1] = t_847,
      temp byte t_848 = NR.buf_0[3],
      NR.buf_0[2] = t_848,
      temp byte t_849 = NR.buf_0[4],
      NR.buf_0[3] = t_849,
      temp byte t_850 = NR.buf_0[5],
      NR.buf_0[4] = t_850,
      temp byte t_851 = NR.buf_0[6],
      NR.buf_0[5] = t_851,
      NR.buf_0[6] = 0,
      temp byte t_852 = NR.buf_0[0],
      receiver.sqn = t_852,
      receiver.state = 3;

  process NR_receiver 
    guardBlock
      temp bool t_853 = NR.state == 6,
      temp bool t_854 = NR_size == 0,
      temp bool t_855 = not t_854,
      temp byte t_856 = NR_time[0],
      temp bool t_857 = t_856 == 0,
      temp bool t_858 = t_855 and t_857,
      temp bool t_859 = t_853 and t_858,
      temp bool t_860 = receiver.state == 3,
      temp bool t_861 = t_859 and t_860;

    guardCondition t_861;
    effect
      NR.state = 1,
      temp byte t_862 = NR.buf_0[1],
      NR.buf_0[0] = t_862,
      temp byte t_863 = NR.buf_0[2],
      NR.buf_0[1] = t_863,
      temp byte t_864 = NR.buf_0[3],
      NR.buf_0[2] = t_864,
      temp byte t_865 = NR.buf_0[4],
      NR.buf_0[3] = t_865,
      temp byte t_866 = NR.buf_0[5],
      NR.buf_0[4] = t_866,
      temp byte t_867 = NR.buf_0[6],
      NR.buf_0[5] = t_867,
      NR.buf_0[6] = 0,
      temp byte t_868 = NR.buf_0[0],
      receiver.trail = t_868,
      receiver.state = 7;

  process NR_receiver 
    guardBlock
      temp bool t_869 = NR.state == 1,
      temp bool t_870 = receiver.state == 0,
      temp bool t_871 = t_869 and t_870;

    guardCondition t_871;
    effect
      NR.state = 3,
      temp byte t_872 = NR.buf_1[1],
      NR.buf_1[0] = t_872,
      temp byte t_873 = NR.buf_1[2],
      NR.buf_1[1] = t_873,
      temp byte t_874 = NR.buf_1[3],
      NR.buf_1[2] = t_874,
      temp byte t_875 = NR.buf_1[4],
      NR.buf_1[3] = t_875,
      temp byte t_876 = NR.buf_1[5],
      NR.buf_1[4] = t_876,
      temp byte t_877 = NR.buf_1[6],
      NR.buf_1[5] = t_877,
      NR.buf_1[6] = 0,
      temp byte t_878 = NR.buf_1[0],
      receiver.packet = t_878,
      receiver.state = 2;

  process NR_receiver 
    guardBlock
      temp bool t_879 = NR.state == 1,
      temp bool t_880 = receiver.state == 2,
      temp bool t_881 = t_879 and t_880;

    guardCondition t_881;
    effect
      NR.state = 3,
      temp byte t_882 = NR.buf_1[1],
      NR.buf_1[0] = t_882,
      temp byte t_883 = NR.buf_1[2],
      NR.buf_1[1] = t_883,
      temp byte t_884 = NR.buf_1[3],
      NR.buf_1[2] = t_884,
      temp byte t_885 = NR.buf_1[4],
      NR.buf_1[3] = t_885,
      temp byte t_886 = NR.buf_1[5],
      NR.buf_1[4] = t_886,
      temp byte t_887 = NR.buf_1[6],
      NR.buf_1[5] = t_887,
      NR.buf_1[6] = 0,
      temp byte t_888 = NR.buf_1[0],
      receiver.sqn = t_888,
      receiver.state = 3;

  process NR_receiver 
    guardBlock
      temp bool t_889 = NR.state == 1,
      temp bool t_890 = receiver.state == 3,
      temp bool t_891 = t_889 and t_890;

    guardCondition t_891;
    effect
      NR.state = 3,
      temp byte t_892 = NR.buf_1[1],
      NR.buf_1[0] = t_892,
      temp byte t_893 = NR.buf_1[2],
      NR.buf_1[1] = t_893,
      temp byte t_894 = NR.buf_1[3],
      NR.buf_1[2] = t_894,
      temp byte t_895 = NR.buf_1[4],
      NR.buf_1[3] = t_895,
      temp byte t_896 = NR.buf_1[5],
      NR.buf_1[4] = t_896,
      temp byte t_897 = NR.buf_1[6],
      NR.buf_1[5] = t_897,
      NR.buf_1[6] = 0,
      temp byte t_898 = NR.buf_1[0],
      receiver.trail = t_898,
      receiver.state = 7;

  process NR_receiver 
    guardBlock
      temp bool t_899 = NR.state == 3,
      temp bool t_900 = receiver.state == 0,
      temp bool t_901 = t_899 and t_900;

    guardCondition t_901;
    effect
      NR.state = 5,
      temp byte t_902 = NR.buf_2[1],
      NR.buf_2[0] = t_902,
      temp byte t_903 = NR.buf_2[2],
      NR.buf_2[1] = t_903,
      temp byte t_904 = NR.buf_2[3],
      NR.buf_2[2] = t_904,
      temp byte t_905 = NR.buf_2[4],
      NR.buf_2[3] = t_905,
      temp byte t_906 = NR.buf_2[5],
      NR.buf_2[4] = t_906,
      temp byte t_907 = NR.buf_2[6],
      NR.buf_2[5] = t_907,
      NR.buf_2[6] = 0,
      temp byte t_908 = NR.buf_2[0],
      receiver.packet = t_908,
      receiver.state = 2;

  process NR_receiver 
    guardBlock
      temp bool t_909 = NR.state == 3,
      temp bool t_910 = receiver.state == 2,
      temp bool t_911 = t_909 and t_910;

    guardCondition t_911;
    effect
      NR.state = 5,
      temp byte t_912 = NR.buf_2[1],
      NR.buf_2[0] = t_912,
      temp byte t_913 = NR.buf_2[2],
      NR.buf_2[1] = t_913,
      temp byte t_914 = NR.buf_2[3],
      NR.buf_2[2] = t_914,
      temp byte t_915 = NR.buf_2[4],
      NR.buf_2[3] = t_915,
      temp byte t_916 = NR.buf_2[5],
      NR.buf_2[4] = t_916,
      temp byte t_917 = NR.buf_2[6],
      NR.buf_2[5] = t_917,
      NR.buf_2[6] = 0,
      temp byte t_918 = NR.buf_2[0],
      receiver.sqn = t_918,
      receiver.state = 3;

  process NR_receiver 
    guardBlock
      temp bool t_919 = NR.state == 3,
      temp bool t_920 = receiver.state == 3,
      temp bool t_921 = t_919 and t_920;

    guardCondition t_921;
    effect
      NR.state = 5,
      temp byte t_922 = NR.buf_2[1],
      NR.buf_2[0] = t_922,
      temp byte t_923 = NR.buf_2[2],
      NR.buf_2[1] = t_923,
      temp byte t_924 = NR.buf_2[3],
      NR.buf_2[2] = t_924,
      temp byte t_925 = NR.buf_2[4],
      NR.buf_2[3] = t_925,
      temp byte t_926 = NR.buf_2[5],
      NR.buf_2[4] = t_926,
      temp byte t_927 = NR.buf_2[6],
      NR.buf_2[5] = t_927,
      NR.buf_2[6] = 0,
      temp byte t_928 = NR.buf_2[0],
      receiver.trail = t_928,
      receiver.state = 7;

  process NS_sender 
    guardBlock
      temp bool t_929 = NS.state == 2,
      temp bool t_930 = NS_size == 0,
      temp bool t_931 = not t_930,
      temp byte t_932 = NS_time[0],
      temp bool t_933 = t_932 == 0,
      temp bool t_934 = t_931 and t_933,
      temp bool t_935 = t_929 and t_934,
      temp bool t_936 = sender.state == 0,
      temp bool t_937 = TXW_LEAD == 9,
      temp bool t_938 = close and t_937,
      temp byte t_939 = TXW_LEAD + 1,
      temp bool t_940 = TXW_TRAIL == t_939,
      temp bool t_941 = t_938 and t_940,
      temp bool t_942 = not t_941,
      temp bool t_943 = sqn <= TXW_LEAD,
      temp bool t_944 = not t_943,
      temp bool t_945 = t_942 and t_944,
      temp bool t_946 = c >= 2,
      temp bool t_947 = not t_946,
      temp bool t_948 = t_945 and t_947,
      temp byte t_949 = TXW_LEAD - TXW_TRAIL,
      temp byte t_950 = t_949 + 1,
      temp bool t_951 = t_950 <= 5,
      temp bool t_952 = TXW_LEAD < 9,
      temp bool t_953 = t_951 and t_952,
      temp bool t_954 = x >= 3,
      temp bool t_955 = t_953 and t_954,
      temp bool t_956 = not t_955,
      temp bool t_957 = t_948 and t_956,
      temp bool t_958 = t_936 and t_957,
      temp bool t_959 = t_935 and t_958;

    guardCondition t_959;
    effect
      NS.state = 1,
      temp byte t_960 = NS.buf_0[1],
      NS.buf_0[0] = t_960,
      temp byte t_961 = NS.buf_0[2],
      NS.buf_0[1] = t_961,
      temp byte t_962 = NS.buf_0[3],
      NS.buf_0[2] = t_962,
      temp byte t_963 = NS.buf_0[4],
      NS.buf_0[3] = t_963,
      temp byte t_964 = NS.buf_0[5],
      NS.buf_0[4] = t_964,
      temp byte t_965 = NS.buf_0[6],
      NS.buf_0[5] = t_965,
      NS.buf_0[6] = 0,
      temp byte t_966 = NS.buf_0[0],
      packet = t_966,
      sender.state = 1;

  process element_NS 
    guardBlock
      temp bool t_967 = element.state == 10,
      temp bool t_968 = element.i == element.rs_len,
      temp bool t_969 = t_967 and t_968,
      temp bool t_970 = NS.state == 2,
      temp bool t_971 = NS_size == 7,
      temp bool t_972 = not t_971,
      temp bool t_973 = t_970 and t_972,
      temp bool t_974 = t_969 and t_973;

    guardCondition t_974;
    effect
      element.state = 0,
      element.rs[element.rs_len] = element.packet,
      temp byte t_975 = element.rs_len + 1,
      element.rs_len = t_975,
      NS.buf_0[NS_size] = element.packet,
      NS.state = 0;

  process receiver_RN 
    guardBlock
      temp bool t_976 = receiver.state == 6,
      temp bool t_977 = RN.state == 2,
      temp bool t_978 = RN_size == 7,
      temp bool t_979 = not t_978,
      temp bool t_980 = t_977 and t_979,
      temp bool t_981 = t_976 and t_980;

    guardCondition t_981;
    effect
      receiver.state = 5,
      temp byte t_982 = RXW_LEAD + 1,
      temp byte t_983 = t_982 % 5,
      receiver.RXW[t_983] = 0,
      temp byte t_984 = RXW_LEAD + 1,
      RXW_LEAD = t_984,
      temp byte t_985 = RXW_LEAD + 1,
      RN.buf_0[RN_size] = t_985,
      RN.state = 0;

  process element_NR 
    guardBlock
      temp bool t_986 = element.state == 4,
      temp bool t_987 = NR.state == 6,
      temp bool t_988 = NR_size == 7,
      temp bool t_989 = not t_988,
      temp bool t_990 = t_987 and t_989,
      temp bool t_991 = t_986 and t_990;

    guardCondition t_991;
    effect
      element.state = 5,
      NR.buf_0[NR_size] = element.packet,
      NR.state = 0;

  process element_NR 
    guardBlock
      temp bool t_992 = element.state == 4,
      temp bool t_993 = NR.state == 0,
      temp bool t_994 = t_992 and t_993;

    guardCondition t_994;
    effect
      element.state = 5,
      NR.buf_1[NR_size] = element.packet,
      NR.state = 2;

  process element_NR 
    guardBlock
      temp bool t_995 = element.state == 4,
      temp bool t_996 = NR.state == 2,
      temp bool t_997 = t_995 and t_996;

    guardCondition t_997;
    effect
      element.state = 5,
      NR.buf_2[NR_size] = element.packet,
      NR.state = 4;

  process element_NR 
    guardBlock
      temp bool t_998 = element.state == 5,
      temp bool t_999 = NR.state == 6,
      temp bool t_1000 = NR_size == 7,
      temp bool t_1001 = not t_1000,
      temp bool t_1002 = t_999 and t_1001,
      temp bool t_1003 = t_998 and t_1002;

    guardCondition t_1003;
    effect
      element.state = 6,
      NR.buf_0[NR_size] = element.seq,
      NR.state = 0;

  process element_NR 
    guardBlock
      temp bool t_1004 = element.state == 5,
      temp bool t_1005 = NR.state == 0,
      temp bool t_1006 = t_1004 and t_1005;

    guardCondition t_1006;
    effect
      element.state = 6,
      NR.buf_1[NR_size] = element.seq,
      NR.state = 2;

  process element_NR 
    guardBlock
      temp bool t_1007 = element.state == 5,
      temp bool t_1008 = NR.state == 2,
      temp bool t_1009 = t_1007 and t_1008;

    guardCondition t_1009;
    effect
      element.state = 6,
      NR.buf_2[NR_size] = element.seq,
      NR.state = 4;

  process element_NR 
    guardBlock
      temp bool t_1010 = element.state == 6,
      temp bool t_1011 = NR.state == 6,
      temp bool t_1012 = NR_size == 7,
      temp bool t_1013 = not t_1012,
      temp bool t_1014 = t_1011 and t_1013,
      temp bool t_1015 = t_1010 and t_1014;

    guardCondition t_1015;
    effect
      element.state = 0,
      NR.buf_0[NR_size] = element.trail,
      NR.state = 0;

  process element_NR 
    guardBlock
      temp bool t_1016 = element.state == 6,
      temp bool t_1017 = NR.state == 0,
      temp bool t_1018 = t_1016 and t_1017;

    guardCondition t_1018;
    effect
      element.state = 0,
      NR.buf_1[NR_size] = element.trail,
      NR.state = 2;

  process element_NR 
    guardBlock
      temp bool t_1019 = element.state == 6,
      temp bool t_1020 = NR.state == 2,
      temp bool t_1021 = t_1019 and t_1020;

    guardCondition t_1021;
    effect
      element.state = 0,
      NR.buf_2[NR_size] = element.trail,
      NR.state = 4;

  process element_NR 
    guardBlock
      temp bool t_1022 = element.state == 7,
      temp bool t_1023 = element.i < element.rs_len,
      temp byte t_1024 = element.rs[element.i],
      temp bool t_1025 = t_1024 == element.seq,
      temp bool t_1026 = t_1023 and t_1025,
      temp bool t_1027 = t_1022 and t_1026,
      temp bool t_1028 = NR.state == 6,
      temp bool t_1029 = NR_size == 7,
      temp bool t_1030 = not t_1029,
      temp bool t_1031 = t_1028 and t_1030,
      temp bool t_1032 = t_1027 and t_1031;

    guardCondition t_1032;
    effect
      element.state = 8,
      NR.buf_0[NR_size] = 9,
      NR.state = 0;

  process element_NR 
    guardBlock
      temp bool t_1033 = element.state == 7,
      temp bool t_1034 = element.i < element.rs_len,
      temp byte t_1035 = element.rs[element.i],
      temp bool t_1036 = t_1035 == element.seq,
      temp bool t_1037 = t_1034 and t_1036,
      temp bool t_1038 = t_1033 and t_1037,
      temp bool t_1039 = NR.state == 0,
      temp bool t_1040 = t_1038 and t_1039;

    guardCondition t_1040;
    effect
      element.state = 8,
      NR.buf_1[NR_size] = 9,
      NR.state = 2;

  process element_NR 
    guardBlock
      temp bool t_1041 = element.state == 7,
      temp bool t_1042 = element.i < element.rs_len,
      temp byte t_1043 = element.rs[element.i],
      temp bool t_1044 = t_1043 == element.seq,
      temp bool t_1045 = t_1042 and t_1044,
      temp bool t_1046 = t_1041 and t_1045,
      temp bool t_1047 = NR.state == 2,
      temp bool t_1048 = t_1046 and t_1047;

    guardCondition t_1048;
    effect
      element.state = 8,
      NR.buf_2[NR_size] = 9,
      NR.state = 4;

  process element_NR 
    guardBlock
      temp bool t_1049 = element.state == 8,
      temp bool t_1050 = NR.state == 6,
      temp bool t_1051 = NR_size == 7,
      temp bool t_1052 = not t_1051,
      temp bool t_1053 = t_1050 and t_1052,
      temp bool t_1054 = t_1049 and t_1053;

    guardCondition t_1054;
    effect
      element.state = 9,
      NR.buf_0[NR_size] = element.seq,
      NR.state = 0;

  process element_NR 
    guardBlock
      temp bool t_1055 = element.state == 8,
      temp bool t_1056 = NR.state == 0,
      temp bool t_1057 = t_1055 and t_1056;

    guardCondition t_1057;
    effect
      element.state = 9,
      NR.buf_1[NR_size] = element.seq,
      NR.state = 2;

  process element_NR 
    guardBlock
      temp bool t_1058 = element.state == 8,
      temp bool t_1059 = NR.state == 2,
      temp bool t_1060 = t_1058 and t_1059;

    guardCondition t_1060;
    effect
      element.state = 9,
      NR.buf_2[NR_size] = element.seq,
      NR.state = 4;

  process element_NR 
    guardBlock
      temp bool t_1061 = element.state == 9,
      temp bool t_1062 = NR.state == 6,
      temp bool t_1063 = NR_size == 7,
      temp bool t_1064 = not t_1063,
      temp bool t_1065 = t_1062 and t_1064,
      temp bool t_1066 = t_1061 and t_1065;

    guardCondition t_1066;
    effect
      element.state = 0,
      temp byte t_1067 = element.rs_len - 1,
      temp byte t_1068 = element.rs[t_1067],
      element.rs[element.i] = t_1068,
      temp byte t_1069 = element.rs_len - 1,
      element.rs_len = t_1069,
      NR.buf_0[NR_size] = element.trail,
      NR.state = 0;

  process element_NR 
    guardBlock
      temp bool t_1070 = element.state == 9,
      temp bool t_1071 = NR.state == 0,
      temp bool t_1072 = t_1070 and t_1071;

    guardCondition t_1072;
    effect
      element.state = 0,
      temp byte t_1073 = element.rs_len - 1,
      temp byte t_1074 = element.rs[t_1073],
      element.rs[element.i] = t_1074,
      temp byte t_1075 = element.rs_len - 1,
      element.rs_len = t_1075,
      NR.buf_1[NR_size] = element.trail,
      NR.state = 2;

  process element_NR 
    guardBlock
      temp bool t_1076 = element.state == 9,
      temp bool t_1077 = NR.state == 2,
      temp bool t_1078 = t_1076 and t_1077;

    guardCondition t_1078;
    effect
      element.state = 0,
      temp byte t_1079 = element.rs_len - 1,
      temp byte t_1080 = element.rs[t_1079],
      element.rs[element.i] = t_1080,
      temp byte t_1081 = element.rs_len - 1,
      element.rs_len = t_1081,
      NR.buf_2[NR_size] = element.trail,
      NR.state = 4;

  process element_NR 
    guardBlock
      temp bool t_1082 = element.state == 11,
      temp bool t_1083 = element.i == element.rs_len,
      temp bool t_1084 = t_1082 and t_1083,
      temp bool t_1085 = NR.state == 6,
      temp bool t_1086 = NR_size == 7,
      temp bool t_1087 = not t_1086,
      temp bool t_1088 = t_1085 and t_1087,
      temp bool t_1089 = t_1084 and t_1088;

    guardCondition t_1089;
    effect
      element.state = 12,
      NR.buf_0[NR_size] = element.packet,
      NR.state = 0;

  process element_NR 
    guardBlock
      temp bool t_1090 = element.state == 11,
      temp bool t_1091 = element.i == element.rs_len,
      temp bool t_1092 = t_1090 and t_1091,
      temp bool t_1093 = NR.state == 0,
      temp bool t_1094 = t_1092 and t_1093;

    guardCondition t_1094;
    effect
      element.state = 12,
      NR.buf_1[NR_size] = element.packet,
      NR.state = 2;

  process element_NR 
    guardBlock
      temp bool t_1095 = element.state == 11,
      temp bool t_1096 = element.i == element.rs_len,
      temp bool t_1097 = t_1095 and t_1096,
      temp bool t_1098 = NR.state == 2,
      temp bool t_1099 = t_1097 and t_1098;

    guardCondition t_1099;
    effect
      element.state = 12,
      NR.buf_2[NR_size] = element.packet,
      NR.state = 4;

  process element_NR 
    guardBlock
      temp bool t_1100 = element.state == 12,
      temp bool t_1101 = NR.state == 6,
      temp bool t_1102 = NR_size == 7,
      temp bool t_1103 = not t_1102,
      temp bool t_1104 = t_1101 and t_1103,
      temp bool t_1105 = t_1100 and t_1104;

    guardCondition t_1105;
    effect
      element.state = 13,
      NR.buf_0[NR_size] = element.seq,
      NR.state = 0;

  process element_NR 
    guardBlock
      temp bool t_1106 = element.state == 12,
      temp bool t_1107 = NR.state == 0,
      temp bool t_1108 = t_1106 and t_1107;

    guardCondition t_1108;
    effect
      element.state = 13,
      NR.buf_1[NR_size] = element.seq,
      NR.state = 2;

  process element_NR 
    guardBlock
      temp bool t_1109 = element.state == 12,
      temp bool t_1110 = NR.state == 2,
      temp bool t_1111 = t_1109 and t_1110;

    guardCondition t_1111;
    effect
      element.state = 13,
      NR.buf_2[NR_size] = element.seq,
      NR.state = 4;

  process element_NR 
    guardBlock
      temp bool t_1112 = element.state == 13,
      temp bool t_1113 = NR.state == 6,
      temp bool t_1114 = NR_size == 7,
      temp bool t_1115 = not t_1114,
      temp bool t_1116 = t_1113 and t_1115,
      temp bool t_1117 = t_1112 and t_1116;

    guardCondition t_1117;
    effect
      element.state = 0,
      NR.buf_0[NR_size] = element.trail,
      NR.state = 0;

  process element_NR 
    guardBlock
      temp bool t_1118 = element.state == 13,
      temp bool t_1119 = NR.state == 0,
      temp bool t_1120 = t_1118 and t_1119;

    guardCondition t_1120;
    effect
      element.state = 0,
      NR.buf_1[NR_size] = element.trail,
      NR.state = 2;

  process element_NR 
    guardBlock
      temp bool t_1121 = element.state == 13,
      temp bool t_1122 = NR.state == 2,
      temp bool t_1123 = t_1121 and t_1122;

    guardCondition t_1123;
    effect
      element.state = 0,
      NR.buf_2[NR_size] = element.trail,
      NR.state = 4;

accepting conditions
  LTL_property.state == 1

