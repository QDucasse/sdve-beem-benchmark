byte[3] in_RT = {0, 0, 0};
byte RT_count = 0;
state {idle(0), rel(1), res(2), error_st(3)} Bandwidth.state = 0;
byte Bandwidth.i = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_0.state = 0;
byte Node_0.rt = 0;
byte Node_0.granted = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_1.state = 0;
byte Node_1.rt = 0;
byte Node_1.granted = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_2.state = 0;
byte Node_2.rt = 0;
byte Node_2.granted = 0;
state {start(0), RT_phase(1), RT_wait(2), NRT_phase(3), NRT_wait(4), cycle_end(5)} Token.state = 0;
byte Token.i = 0;
byte Token.NRT_count = 5;
byte Token.next = 0;
transient bool t_0 = false;
transient byte t_1 = 0;
transient bool t_2 = false;
transient bool t_3 = false;
transient bool t_4 = false;
transient bool t_5 = false;
transient bool t_6 = false;
transient bool t_7 = false;
transient bool t_8 = false;
transient bool t_9 = false;
transient bool t_10 = false;
transient bool t_11 = false;
transient bool t_12 = false;
transient bool t_13 = false;
transient bool t_14 = false;
transient bool t_15 = false;
transient bool t_16 = false;
transient bool t_17 = false;
transient bool t_18 = false;
transient bool t_19 = false;
transient bool t_20 = false;
transient bool t_21 = false;
transient bool t_22 = false;
transient bool t_23 = false;
transient bool t_24 = false;
transient bool t_25 = false;
transient bool t_26 = false;
transient bool t_27 = false;
transient bool t_28 = false;
transient bool t_29 = false;
transient bool t_30 = false;
transient bool t_31 = false;
transient bool t_32 = false;
transient bool t_33 = false;
transient bool t_34 = false;
transient bool t_35 = false;
transient bool t_36 = false;
transient bool t_37 = false;
transient bool t_38 = false;
transient bool t_39 = false;
transient bool t_40 = false;
transient bool t_41 = false;
transient bool t_42 = false;
transient byte t_43 = 0;
transient bool t_44 = false;
transient bool t_45 = false;
transient bool t_46 = false;
transient int t_47 = 0;
transient bool t_48 = false;
transient bool t_49 = false;
transient bool t_50 = false;
transient bool t_51 = false;
transient bool t_52 = false;
transient bool t_53 = false;
transient bool t_54 = false;
transient int t_55 = 0;
transient bool t_56 = false;
transient bool t_57 = false;
transient byte t_58 = 0;
transient bool t_59 = false;
transient bool t_60 = false;
transient bool t_61 = false;
transient bool t_62 = false;
transient bool t_63 = false;
transient bool t_64 = false;
transient bool t_65 = false;
transient bool t_66 = false;
transient bool t_67 = false;
transient bool t_68 = false;
transient bool t_69 = false;
transient bool t_70 = false;
transient bool t_71 = false;
transient bool t_72 = false;
transient bool t_73 = false;
transient bool t_74 = false;
transient bool t_75 = false;
transient bool t_76 = false;
transient bool t_77 = false;
transient bool t_78 = false;
transient bool t_79 = false;
transient bool t_80 = false;
transient bool t_81 = false;
transient bool t_82 = false;
transient bool t_83 = false;
transient bool t_84 = false;
transient bool t_85 = false;
transient bool t_86 = false;
transient bool t_87 = false;
transient bool t_88 = false;
transient bool t_89 = false;
transient bool t_90 = false;
transient int t_91 = 0;
transient bool t_92 = false;
transient bool t_93 = false;
transient bool t_94 = false;
transient bool t_95 = false;
transient bool t_96 = false;
transient int t_97 = 0;
transient bool t_98 = false;
transient bool t_99 = false;
transient bool t_100 = false;
transient bool t_101 = false;
transient bool t_102 = false;
transient int t_103 = 0;
transient bool t_104 = false;
transient bool t_105 = false;
transient bool t_106 = false;
transient bool t_107 = false;
transient bool t_108 = false;
transient bool t_109 = false;
transient bool t_110 = false;
transient bool t_111 = false;
transient bool t_112 = false;
transient bool t_113 = false;
transient bool t_114 = false;
transient byte t_115 = 0;
transient bool t_116 = false;
transient bool t_117 = false;
transient bool t_118 = false;
transient bool t_119 = false;
transient bool t_120 = false;
transient bool t_121 = false;
transient bool t_122 = false;
transient bool t_123 = false;
transient bool t_124 = false;
transient bool t_125 = false;
transient bool t_126 = false;
transient bool t_127 = false;
transient bool t_128 = false;
transient bool t_129 = false;
transient bool t_130 = false;
transient bool t_131 = false;
transient bool t_132 = false;
transient bool t_133 = false;
transient bool t_134 = false;
transient bool t_135 = false;
transient bool t_136 = false;
transient bool t_137 = false;
transient bool t_138 = false;
transient bool t_139 = false;
transient bool t_140 = false;
transient bool t_141 = false;
transient bool t_142 = false;
transient bool t_143 = false;
transient bool t_144 = false;
transient bool t_145 = false;
transient int t_146 = 0;
transient bool t_147 = false;
transient bool t_148 = false;
transient bool t_149 = false;
transient int t_150 = 0;
transient int t_151 = 0;
transient int t_152 = 0;
transient bool t_153 = false;
transient bool t_154 = false;
transient bool t_155 = false;
transient int t_156 = 0;
transient bool t_157 = false;
transient bool t_158 = false;
transient bool t_159 = false;
transient int t_160 = 0;
transient int t_161 = 0;
transient int t_162 = 0;
transient bool t_163 = false;
transient bool t_164 = false;
transient bool t_165 = false;
transient int t_166 = 0;
transient bool t_167 = false;
transient bool t_168 = false;
transient bool t_169 = false;
transient int t_170 = 0;
transient int t_171 = 0;
transient int t_172 = 0;
transient bool t_173 = false;
transient bool t_174 = false;
transient byte t_175 = 0;
transient bool t_176 = false;
transient bool t_177 = false;
transient bool t_178 = false;
transient bool t_179 = false;
transient bool t_180 = false;
transient bool t_181 = false;
transient bool t_182 = false;
transient bool t_183 = false;
transient bool t_184 = false;
transient bool t_185 = false;
transient bool t_186 = false;
transient bool t_187 = false;
transient bool t_188 = false;
transient byte t_189 = 0;
transient bool t_190 = false;
transient bool t_191 = false;
transient bool t_192 = false;
transient bool t_193 = false;
transient int t_194 = 0;
transient bool t_195 = false;
transient byte t_196 = 0;
transient bool t_197 = false;
transient bool t_198 = false;
transient bool t_199 = false;
transient bool t_200 = false;
transient int t_201 = 0;
transient bool t_202 = false;
transient byte t_203 = 0;
transient bool t_204 = false;
transient bool t_205 = false;
transient bool t_206 = false;
transient bool t_207 = false;
transient int t_208 = 0;
	process Bandwidth 
		guardBlock
			t_0 = Bandwidth.state == 1,
			t_1 = in_RT[Bandwidth.i],
			t_2 = t_1 == 0,
			t_3 = t_0 and t_2;

		guardCondition t_3;
		effect
			Bandwidth.state = 3;

	process Node_0 
		guardBlock
			t_4 = Node_0.state == 1,
			t_5 = Node_0.rt == 1,
			t_6 = t_4 and t_5;

		guardCondition t_6;
		effect
			Node_0.state = 2;

	process Node_0 
		guardBlock
			t_7 = Node_0.state == 1,
			t_8 = Node_0.rt == 0,
			t_9 = t_7 and t_8;

		guardCondition t_9;
		effect
			Node_0.state = 3;

	process Node_0 
		guardBlock
			t_10 = Node_0.state == 2,
			t_11 = Node_0.granted == 0,
			t_12 = t_10 and t_11;

		guardCondition t_12;
		effect
			Node_0.state = 7;

	process Node_0 
		guardBlock
			t_13 = Node_0.state == 2;

		guardCondition t_13;
		effect
			Node_0.state = 6;

	process Node_0 
		guardBlock
			t_14 = Node_0.state == 3;

		guardCondition t_14;
		effect
			Node_0.state = 6;

	process Node_0 
		guardBlock
			t_15 = Node_0.state == 5;

		guardCondition t_15;
		effect
			Node_0.state = 6,
			Node_0.granted = 1;

	process Node_1 
		guardBlock
			t_16 = Node_1.state == 1,
			t_17 = Node_1.rt == 1,
			t_18 = t_16 and t_17;

		guardCondition t_18;
		effect
			Node_1.state = 2;

	process Node_1 
		guardBlock
			t_19 = Node_1.state == 1,
			t_20 = Node_1.rt == 0,
			t_21 = t_19 and t_20;

		guardCondition t_21;
		effect
			Node_1.state = 3;

	process Node_1 
		guardBlock
			t_22 = Node_1.state == 2,
			t_23 = Node_1.granted == 0,
			t_24 = t_22 and t_23;

		guardCondition t_24;
		effect
			Node_1.state = 7;

	process Node_1 
		guardBlock
			t_25 = Node_1.state == 2;

		guardCondition t_25;
		effect
			Node_1.state = 6;

	process Node_1 
		guardBlock
			t_26 = Node_1.state == 3;

		guardCondition t_26;
		effect
			Node_1.state = 6;

	process Node_1 
		guardBlock
			t_27 = Node_1.state == 5;

		guardCondition t_27;
		effect
			Node_1.state = 6,
			Node_1.granted = 1;

	process Node_2 
		guardBlock
			t_28 = Node_2.state == 1,
			t_29 = Node_2.rt == 1,
			t_30 = t_28 and t_29;

		guardCondition t_30;
		effect
			Node_2.state = 2;

	process Node_2 
		guardBlock
			t_31 = Node_2.state == 1,
			t_32 = Node_2.rt == 0,
			t_33 = t_31 and t_32;

		guardCondition t_33;
		effect
			Node_2.state = 3;

	process Node_2 
		guardBlock
			t_34 = Node_2.state == 2,
			t_35 = Node_2.granted == 0,
			t_36 = t_34 and t_35;

		guardCondition t_36;
		effect
			Node_2.state = 7;

	process Node_2 
		guardBlock
			t_37 = Node_2.state == 2;

		guardCondition t_37;
		effect
			Node_2.state = 6;

	process Node_2 
		guardBlock
			t_38 = Node_2.state == 3;

		guardCondition t_38;
		effect
			Node_2.state = 6;

	process Node_2 
		guardBlock
			t_39 = Node_2.state == 5;

		guardCondition t_39;
		effect
			Node_2.state = 6,
			Node_2.granted = 1;

	process Token 
		guardBlock
			t_40 = Token.state == 0;

		guardCondition t_40;
		effect
			Token.state = 1,
			Token.i = 0;

	process Token 
		guardBlock
			t_41 = Token.state == 1,
			t_42 = Token.i < 3,
			t_43 = in_RT[Token.i],
			t_44 = t_43 == 0,
			t_45 = t_42 and t_44,
			t_46 = t_41 and t_45;

		guardCondition t_46;
		effect
			Token.state = 1,
			t_47 = Token.i + 1,
			Token.i = t_47;

	process Token 
		guardBlock
			t_48 = Token.state == 1,
			t_49 = Token.i == 3,
			t_50 = t_48 and t_49;

		guardCondition t_50;
		effect
			Token.state = 3;

	process Token 
		guardBlock
			t_51 = Token.state == 3,
			t_52 = Token.NRT_count == 0,
			t_53 = t_51 and t_52;

		guardCondition t_53;
		effect
			Token.state = 5;

	process Token 
		guardBlock
			t_54 = Token.state == 5;

		guardCondition t_54;
		effect
			Token.state = 0,
			t_55 = 5 - RT_count,
			Token.NRT_count = t_55;

	process Token_Node_0 
		guardBlock
			t_56 = Token.state == 1,
			t_57 = Token.i == 0,
			t_58 = in_RT[Token.i],
			t_59 = t_58 == 1,
			t_60 = t_57 and t_59,
			t_61 = t_56 and t_60,
			t_62 = Node_0.state == 0,
			t_63 = t_61 and t_62;

		guardCondition t_63;
		effect
			Token.state = 2,
			Node_0.rt = 1,
			Node_0.state = 1;

	process Token_Node_0 
		guardBlock
			t_64 = Token.state == 3,
			t_65 = Token.NRT_count > 0,
			t_66 = Token.next == 0,
			t_67 = t_65 and t_66,
			t_68 = t_64 and t_67,
			t_69 = Node_0.state == 0,
			t_70 = t_68 and t_69;

		guardCondition t_70;
		effect
			Token.state = 4,
			Node_0.rt = 0,
			Node_0.state = 1;

	process Node_0_Bandwidth 
		guardBlock
			t_71 = Node_0.state == 3,
			t_72 = Node_0.granted == 0,
			t_73 = t_71 and t_72,
			t_74 = Bandwidth.state == 0,
			t_75 = t_73 and t_74;

		guardCondition t_75;
		effect
			Node_0.state = 4,
			Bandwidth.i = 0,
			Bandwidth.state = 2;

	process Node_1_Bandwidth 
		guardBlock
			t_76 = Node_1.state == 3,
			t_77 = Node_1.granted == 0,
			t_78 = t_76 and t_77,
			t_79 = Bandwidth.state == 0,
			t_80 = t_78 and t_79;

		guardCondition t_80;
		effect
			Node_1.state = 4,
			Bandwidth.i = 1,
			Bandwidth.state = 2;

	process Node_2_Bandwidth 
		guardBlock
			t_81 = Node_2.state == 3,
			t_82 = Node_2.granted == 0,
			t_83 = t_81 and t_82,
			t_84 = Bandwidth.state == 0,
			t_85 = t_83 and t_84;

		guardCondition t_85;
		effect
			Node_2.state = 4,
			Bandwidth.i = 2,
			Bandwidth.state = 2;

	process Bandwidth_Node_0 
		guardBlock
			t_86 = Bandwidth.state == 2,
			t_87 = RT_count < 2,
			t_88 = t_86 and t_87,
			t_89 = Node_0.state == 4,
			t_90 = t_88 and t_89;

		guardCondition t_90;
		effect
			Bandwidth.state = 0,
			t_91 = RT_count + 1,
			RT_count = t_91,
			in_RT[Bandwidth.i] = 1,
			Node_0.state = 5;

	process Bandwidth_Node_1 
		guardBlock
			t_92 = Bandwidth.state == 2,
			t_93 = RT_count < 2,
			t_94 = t_92 and t_93,
			t_95 = Node_1.state == 4,
			t_96 = t_94 and t_95;

		guardCondition t_96;
		effect
			Bandwidth.state = 0,
			t_97 = RT_count + 1,
			RT_count = t_97,
			in_RT[Bandwidth.i] = 1,
			Node_1.state = 5;

	process Bandwidth_Node_2 
		guardBlock
			t_98 = Bandwidth.state == 2,
			t_99 = RT_count < 2,
			t_100 = t_98 and t_99,
			t_101 = Node_2.state == 4,
			t_102 = t_100 and t_101;

		guardCondition t_102;
		effect
			Bandwidth.state = 0,
			t_103 = RT_count + 1,
			RT_count = t_103,
			in_RT[Bandwidth.i] = 1,
			Node_2.state = 5;

	process Node_0_Bandwidth 
		guardBlock
			t_104 = Node_0.state == 2,
			t_105 = Bandwidth.state == 0,
			t_106 = t_104 and t_105;

		guardCondition t_106;
		effect
			Node_0.state = 8,
			Node_0.granted = 0,
			Bandwidth.i = 0,
			Bandwidth.state = 1;

	process Node_1_Bandwidth 
		guardBlock
			t_107 = Node_1.state == 2,
			t_108 = Bandwidth.state == 0,
			t_109 = t_107 and t_108;

		guardCondition t_109;
		effect
			Node_1.state = 8,
			Node_1.granted = 0,
			Bandwidth.i = 1,
			Bandwidth.state = 1;

	process Node_2_Bandwidth 
		guardBlock
			t_110 = Node_2.state == 2,
			t_111 = Bandwidth.state == 0,
			t_112 = t_110 and t_111;

		guardCondition t_112;
		effect
			Node_2.state = 8,
			Node_2.granted = 0,
			Bandwidth.i = 2,
			Bandwidth.state = 1;

	process Token_Node_1 
		guardBlock
			t_113 = Token.state == 1,
			t_114 = Token.i == 1,
			t_115 = in_RT[Token.i],
			t_116 = t_115 == 1,
			t_117 = t_114 and t_116,
			t_118 = t_113 and t_117,
			t_119 = Node_1.state == 0,
			t_120 = t_118 and t_119;

		guardCondition t_120;
		effect
			Token.state = 2,
			Node_1.rt = 1,
			Node_1.state = 1;

	process Token_Node_1 
		guardBlock
			t_121 = Token.state == 3,
			t_122 = Token.NRT_count > 0,
			t_123 = Token.next == 1,
			t_124 = t_122 and t_123,
			t_125 = t_121 and t_124,
			t_126 = Node_1.state == 0,
			t_127 = t_125 and t_126;

		guardCondition t_127;
		effect
			Token.state = 4,
			Node_1.rt = 0,
			Node_1.state = 1;

	process Bandwidth_Node_0 
		guardBlock
			t_128 = Bandwidth.state == 2,
			t_129 = RT_count >= 2,
			t_130 = t_128 and t_129,
			t_131 = Node_0.state == 4,
			t_132 = t_130 and t_131;

		guardCondition t_132;
		effect
			Bandwidth.state = 0,
			Node_0.state = 6;

	process Bandwidth_Node_1 
		guardBlock
			t_133 = Bandwidth.state == 2,
			t_134 = RT_count >= 2,
			t_135 = t_133 and t_134,
			t_136 = Node_1.state == 4,
			t_137 = t_135 and t_136;

		guardCondition t_137;
		effect
			Bandwidth.state = 0,
			Node_1.state = 6;

	process Bandwidth_Node_2 
		guardBlock
			t_138 = Bandwidth.state == 2,
			t_139 = RT_count >= 2,
			t_140 = t_138 and t_139,
			t_141 = Node_2.state == 4,
			t_142 = t_140 and t_141;

		guardCondition t_142;
		effect
			Bandwidth.state = 0,
			Node_2.state = 6;

	process Node_0_Token 
		guardBlock
			t_143 = Node_0.state == 6,
			t_144 = Token.state == 2,
			t_145 = t_143 and t_144;

		guardCondition t_145;
		effect
			Node_0.state = 0,
			Token.state = 1,
			t_146 = Token.i + 1,
			Token.i = t_146;

	process Node_0_Token 
		guardBlock
			t_147 = Node_0.state == 6,
			t_148 = Token.state == 4,
			t_149 = t_147 and t_148;

		guardCondition t_149;
		effect
			Node_0.state = 0,
			Token.state = 3,
			t_150 = Token.next + 1,
			t_151 = t_150 % 3,
			Token.next = t_151,
			t_152 = Token.NRT_count - 1,
			Token.NRT_count = t_152;

	process Node_1_Token 
		guardBlock
			t_153 = Node_1.state == 6,
			t_154 = Token.state == 2,
			t_155 = t_153 and t_154;

		guardCondition t_155;
		effect
			Node_1.state = 0,
			Token.state = 1,
			t_156 = Token.i + 1,
			Token.i = t_156;

	process Node_1_Token 
		guardBlock
			t_157 = Node_1.state == 6,
			t_158 = Token.state == 4,
			t_159 = t_157 and t_158;

		guardCondition t_159;
		effect
			Node_1.state = 0,
			Token.state = 3,
			t_160 = Token.next + 1,
			t_161 = t_160 % 3,
			Token.next = t_161,
			t_162 = Token.NRT_count - 1,
			Token.NRT_count = t_162;

	process Node_2_Token 
		guardBlock
			t_163 = Node_2.state == 6,
			t_164 = Token.state == 2,
			t_165 = t_163 and t_164;

		guardCondition t_165;
		effect
			Node_2.state = 0,
			Token.state = 1,
			t_166 = Token.i + 1,
			Token.i = t_166;

	process Node_2_Token 
		guardBlock
			t_167 = Node_2.state == 6,
			t_168 = Token.state == 4,
			t_169 = t_167 and t_168;

		guardCondition t_169;
		effect
			Node_2.state = 0,
			Token.state = 3,
			t_170 = Token.next + 1,
			t_171 = t_170 % 3,
			Token.next = t_171,
			t_172 = Token.NRT_count - 1,
			Token.NRT_count = t_172;

	process Token_Node_2 
		guardBlock
			t_173 = Token.state == 1,
			t_174 = Token.i == 2,
			t_175 = in_RT[Token.i],
			t_176 = t_175 == 1,
			t_177 = t_174 and t_176,
			t_178 = t_173 and t_177,
			t_179 = Node_2.state == 0,
			t_180 = t_178 and t_179;

		guardCondition t_180;
		effect
			Token.state = 2,
			Node_2.rt = 1,
			Node_2.state = 1;

	process Token_Node_2 
		guardBlock
			t_181 = Token.state == 3,
			t_182 = Token.NRT_count > 0,
			t_183 = Token.next == 2,
			t_184 = t_182 and t_183,
			t_185 = t_181 and t_184,
			t_186 = Node_2.state == 0,
			t_187 = t_185 and t_186;

		guardCondition t_187;
		effect
			Token.state = 4,
			Node_2.rt = 0,
			Node_2.state = 1;

	process Bandwidth_Node_0 
		guardBlock
			t_188 = Bandwidth.state == 1,
			t_189 = in_RT[Bandwidth.i],
			t_190 = t_189 == 1,
			t_191 = t_188 and t_190,
			t_192 = Node_0.state == 8,
			t_193 = t_191 and t_192;

		guardCondition t_193;
		effect
			Bandwidth.state = 0,
			in_RT[Bandwidth.i] = 0,
			t_194 = RT_count - 1,
			RT_count = t_194,
			Node_0.state = 6;

	process Bandwidth_Node_1 
		guardBlock
			t_195 = Bandwidth.state == 1,
			t_196 = in_RT[Bandwidth.i],
			t_197 = t_196 == 1,
			t_198 = t_195 and t_197,
			t_199 = Node_1.state == 8,
			t_200 = t_198 and t_199;

		guardCondition t_200;
		effect
			Bandwidth.state = 0,
			in_RT[Bandwidth.i] = 0,
			t_201 = RT_count - 1,
			RT_count = t_201,
			Node_1.state = 6;

	process Bandwidth_Node_2 
		guardBlock
			t_202 = Bandwidth.state == 1,
			t_203 = in_RT[Bandwidth.i],
			t_204 = t_203 == 1,
			t_205 = t_202 and t_204,
			t_206 = Node_2.state == 8,
			t_207 = t_205 and t_206;

		guardCondition t_207;
		effect
			Bandwidth.state = 0,
			in_RT[Bandwidth.i] = 0,
			t_208 = RT_count - 1,
			RT_count = t_208,
			Node_2.state = 6;


system async;
