byte in_RT[4] =  {0, 0, 0, 0};
byte RT_count = 0;
state {idle(0), rel(1), res(2), error_st(3)} Bandwidth.state = 0;
byte Bandwidth.i = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_0.state = 0;
byte Node_0.rt = 0;
byte Node_0.granted = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_1.state = 0;
byte Node_1.rt = 0;
byte Node_1.granted = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_2.state = 0;
byte Node_2.rt = 0;
byte Node_2.granted = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_3.state = 0;
byte Node_3.rt = 0;
byte Node_3.granted = 0;
state {start(0), RT_phase(1), RT_wait(2), NRT_phase(3), NRT_wait(4), cycle_end(5)} Token.state = 0;
byte Token.i = 0;
byte Token.NRT_count = 4;
byte Token.next = 0;
state {q1(0), q2(1), q3(2), q4(3), q5(4), q6(5), q7(6)} LTL_property.state = 1;

  process Bandwidth
    guardBlock
      temp bool t_0 = Bandwidth.state == 1,
      temp byte t_1 = in_RT[Bandwidth.i],
      temp bool t_2 = t_1 == 0,
      temp bool t_3 = t_0 and t_2;
    guardCondition t_3;
    effect
      Bandwidth.state = 3;

  process Node_0
    guardBlock
      temp bool t_4 = Node_0.state == 1,
      temp bool t_5 = Node_0.rt == 1,
      temp bool t_6 = t_4 and t_5;
    guardCondition t_6;
    effect
      Node_0.state = 2;

  process Node_0
    guardBlock
      temp bool t_7 = Node_0.state == 1,
      temp bool t_8 = Node_0.rt == 0,
      temp bool t_9 = t_7 and t_8;
    guardCondition t_9;
    effect
      Node_0.state = 3;

  process Node_0
    guardBlock
      temp bool t_10 = Node_0.state == 2,
      temp bool t_11 = Node_0.granted == 0,
      temp bool t_12 = t_10 and t_11;
    guardCondition t_12;
    effect
      Node_0.state = 7;

  process Node_0
    guardBlock
      temp bool t_13 = Node_0.state == 2;
    guardCondition t_13;
    effect
      Node_0.state = 6;

  process Node_0
    guardBlock
      temp bool t_14 = Node_0.state == 3;
    guardCondition t_14;
    effect
      Node_0.state = 6;

  process Node_0
    guardBlock
      temp bool t_15 = Node_0.state == 5;
    guardCondition t_15;
    effect
      Node_0.state = 6,
      Node_0.granted = 1;

  process Node_1
    guardBlock
      temp bool t_16 = Node_1.state == 1,
      temp bool t_17 = Node_1.rt == 1,
      temp bool t_18 = t_16 and t_17;
    guardCondition t_18;
    effect
      Node_1.state = 2;

  process Node_1
    guardBlock
      temp bool t_19 = Node_1.state == 1,
      temp bool t_20 = Node_1.rt == 0,
      temp bool t_21 = t_19 and t_20;
    guardCondition t_21;
    effect
      Node_1.state = 3;

  process Node_1
    guardBlock
      temp bool t_22 = Node_1.state == 2,
      temp bool t_23 = Node_1.granted == 0,
      temp bool t_24 = t_22 and t_23;
    guardCondition t_24;
    effect
      Node_1.state = 7;

  process Node_1
    guardBlock
      temp bool t_25 = Node_1.state == 2;
    guardCondition t_25;
    effect
      Node_1.state = 6;

  process Node_1
    guardBlock
      temp bool t_26 = Node_1.state == 3;
    guardCondition t_26;
    effect
      Node_1.state = 6;

  process Node_1
    guardBlock
      temp bool t_27 = Node_1.state == 5;
    guardCondition t_27;
    effect
      Node_1.state = 6,
      Node_1.granted = 1;

  process Node_2
    guardBlock
      temp bool t_28 = Node_2.state == 1,
      temp bool t_29 = Node_2.rt == 1,
      temp bool t_30 = t_28 and t_29;
    guardCondition t_30;
    effect
      Node_2.state = 2;

  process Node_2
    guardBlock
      temp bool t_31 = Node_2.state == 1,
      temp bool t_32 = Node_2.rt == 0,
      temp bool t_33 = t_31 and t_32;
    guardCondition t_33;
    effect
      Node_2.state = 3;

  process Node_2
    guardBlock
      temp bool t_34 = Node_2.state == 2,
      temp bool t_35 = Node_2.granted == 0,
      temp bool t_36 = t_34 and t_35;
    guardCondition t_36;
    effect
      Node_2.state = 7;

  process Node_2
    guardBlock
      temp bool t_37 = Node_2.state == 2;
    guardCondition t_37;
    effect
      Node_2.state = 6;

  process Node_2
    guardBlock
      temp bool t_38 = Node_2.state == 3;
    guardCondition t_38;
    effect
      Node_2.state = 6;

  process Node_2
    guardBlock
      temp bool t_39 = Node_2.state == 5;
    guardCondition t_39;
    effect
      Node_2.state = 6,
      Node_2.granted = 1;

  process Node_3
    guardBlock
      temp bool t_40 = Node_3.state == 1,
      temp bool t_41 = Node_3.rt == 1,
      temp bool t_42 = t_40 and t_41;
    guardCondition t_42;
    effect
      Node_3.state = 2;

  process Node_3
    guardBlock
      temp bool t_43 = Node_3.state == 1,
      temp bool t_44 = Node_3.rt == 0,
      temp bool t_45 = t_43 and t_44;
    guardCondition t_45;
    effect
      Node_3.state = 3;

  process Node_3
    guardBlock
      temp bool t_46 = Node_3.state == 2,
      temp bool t_47 = Node_3.granted == 0,
      temp bool t_48 = t_46 and t_47;
    guardCondition t_48;
    effect
      Node_3.state = 7;

  process Node_3
    guardBlock
      temp bool t_49 = Node_3.state == 2;
    guardCondition t_49;
    effect
      Node_3.state = 6;

  process Node_3
    guardBlock
      temp bool t_50 = Node_3.state == 3;
    guardCondition t_50;
    effect
      Node_3.state = 6;

  process Node_3
    guardBlock
      temp bool t_51 = Node_3.state == 5;
    guardCondition t_51;
    effect
      Node_3.state = 6,
      Node_3.granted = 1;

  process Token
    guardBlock
      temp bool t_52 = Token.state == 0;
    guardCondition t_52;
    effect
      Token.state = 1,
      Token.i = 0;

  process Token
    guardBlock
      temp bool t_53 = Token.state == 1,
      temp bool t_54 = Token.i < 4,
      temp byte t_55 = in_RT[Token.i],
      temp bool t_56 = t_55 == 0,
      temp bool t_57 = t_54 and t_56,
      temp bool t_58 = t_53 and t_57;
    guardCondition t_58;
    effect
      Token.state = 1,
      temp int t_59 = Token.i + 1,
      Token.i = t_59;

  process Token
    guardBlock
      temp bool t_60 = Token.state == 1,
      temp bool t_61 = Token.i == 4,
      temp bool t_62 = t_60 and t_61;
    guardCondition t_62;
    effect
      Token.state = 3;

  process Token
    guardBlock
      temp bool t_63 = Token.state == 3,
      temp bool t_64 = Token.NRT_count == 0,
      temp bool t_65 = t_63 and t_64;
    guardCondition t_65;
    effect
      Token.state = 5;

  process Token
    guardBlock
      temp bool t_66 = Token.state == 5;
    guardCondition t_66;
    effect
      Token.state = 0,
      temp int t_67 = 4 - RT_count,
      Token.NRT_count = t_67;

  process LTL_property
    guardBlock
      temp bool t_68 = LTL_property.state == 0;
    guardCondition t_68;
    effect
      LTL_property.state = 0;

  process LTL_property
    guardBlock
      temp bool t_69 = LTL_property.state == 1;
    guardCondition t_69;
    effect
      LTL_property.state = 1;

  process LTL_property
    guardBlock
      temp bool t_70 = LTL_property.state == 1,
      temp bool t_71 = Node_0.state == 4,
      temp bool t_72 = Node_0.state == 2,
      temp bool t_73 = not t_72,
      temp bool t_74 = t_71 and t_73,
      temp bool t_75 = t_70 and t_74;
    guardCondition t_75;
    effect
      LTL_property.state = 2;

  process LTL_property
    guardBlock
      temp bool t_76 = LTL_property.state == 1,
      temp bool t_77 = Node_0.state == 4,
      temp bool t_78 = Token.state == 5,
      temp bool t_79 = t_77 and t_78,
      temp bool t_80 = t_76 and t_79;
    guardCondition t_80;
    effect
      LTL_property.state = 3;

  process LTL_property
    guardBlock
      temp bool t_81 = LTL_property.state == 2,
      temp bool t_82 = Node_0.state == 2,
      temp bool t_83 = not t_82,
      temp bool t_84 = t_81 and t_83;
    guardCondition t_84;
    effect
      LTL_property.state = 2;

  process LTL_property
    guardBlock
      temp bool t_85 = LTL_property.state == 2,
      temp bool t_86 = Token.state == 5,
      temp bool t_87 = t_85 and t_86;
    guardCondition t_87;
    effect
      LTL_property.state = 4;

  process LTL_property
    guardBlock
      temp bool t_88 = LTL_property.state == 3,
      temp bool t_89 = Node_0.state == 2,
      temp bool t_90 = not t_89,
      temp bool t_91 = t_88 and t_90;
    guardCondition t_91;
    effect
      LTL_property.state = 5;

  process LTL_property
    guardBlock
      temp bool t_92 = LTL_property.state == 3,
      temp bool t_93 = Token.state == 5,
      temp bool t_94 = t_92 and t_93;
    guardCondition t_94;
    effect
      LTL_property.state = 4;

  process LTL_property
    guardBlock
      temp bool t_95 = LTL_property.state == 3,
      temp bool t_96 = Node_0.state == 2,
      temp bool t_97 = not t_96,
      temp bool t_98 = Token.state == 5,
      temp bool t_99 = not t_98,
      temp bool t_100 = t_97 and t_99,
      temp bool t_101 = t_95 and t_100;
    guardCondition t_101;
    effect
      LTL_property.state = 6;

  process LTL_property
    guardBlock
      temp bool t_102 = LTL_property.state == 4,
      temp bool t_103 = Node_0.state == 2,
      temp bool t_104 = not t_103,
      temp bool t_105 = t_102 and t_104;
    guardCondition t_105;
    effect
      LTL_property.state = 3;

  process LTL_property
    guardBlock
      temp bool t_106 = LTL_property.state == 4,
      temp bool t_107 = Token.state == 5,
      temp bool t_108 = t_106 and t_107;
    guardCondition t_108;
    effect
      LTL_property.state = 3;

  process LTL_property
    guardBlock
      temp bool t_109 = LTL_property.state == 4,
      temp bool t_110 = Node_0.state == 2,
      temp bool t_111 = not t_110,
      temp bool t_112 = Token.state == 5,
      temp bool t_113 = not t_112,
      temp bool t_114 = t_111 and t_113,
      temp bool t_115 = t_109 and t_114;
    guardCondition t_115;
    effect
      LTL_property.state = 6;

  process LTL_property
    guardBlock
      temp bool t_116 = LTL_property.state == 5,
      temp bool t_117 = Node_0.state == 2,
      temp bool t_118 = not t_117,
      temp bool t_119 = t_116 and t_118;
    guardCondition t_119;
    effect
      LTL_property.state = 5;

  process LTL_property
    guardBlock
      temp bool t_120 = LTL_property.state == 5,
      temp bool t_121 = Token.state == 5,
      temp bool t_122 = t_120 and t_121;
    guardCondition t_122;
    effect
      LTL_property.state = 4;

  process LTL_property
    guardBlock
      temp bool t_123 = LTL_property.state == 5,
      temp bool t_124 = Node_0.state == 2,
      temp bool t_125 = not t_124,
      temp bool t_126 = Token.state == 5,
      temp bool t_127 = not t_126,
      temp bool t_128 = t_125 and t_127,
      temp bool t_129 = t_123 and t_128;
    guardCondition t_129;
    effect
      LTL_property.state = 6;

  process LTL_property
    guardBlock
      temp bool t_130 = LTL_property.state == 6,
      temp bool t_131 = Node_0.state == 2,
      temp bool t_132 = not t_131,
      temp bool t_133 = t_130 and t_132;
    guardCondition t_133;
    effect
      LTL_property.state = 6;

  process LTL_property
    guardBlock
      temp bool t_134 = LTL_property.state == 6,
      temp bool t_135 = Token.state == 5,
      temp bool t_136 = t_134 and t_135;
    guardCondition t_136;
    effect
      LTL_property.state = 0;

  process Token_Node_2
    guardBlock
      temp bool t_137 = Token.state == 1,
      temp bool t_138 = Token.i == 2,
      temp byte t_139 = in_RT[Token.i],
      temp bool t_140 = t_139 == 1,
      temp bool t_141 = t_138 and t_140,
      temp bool t_142 = t_137 and t_141,
      temp bool t_143 = Node_2.state == 0,
      temp bool t_144 = t_142 and t_143;
    guardCondition t_144;
    effect
      Token.state = 2,
      Node_2.rt = 1,
      Node_2.state = 1;

  process Token_Node_2
    guardBlock
      temp bool t_145 = Token.state == 3,
      temp bool t_146 = Token.NRT_count > 0,
      temp bool t_147 = Token.next == 2,
      temp bool t_148 = t_146 and t_147,
      temp bool t_149 = t_145 and t_148,
      temp bool t_150 = Node_2.state == 0,
      temp bool t_151 = t_149 and t_150;
    guardCondition t_151;
    effect
      Token.state = 4,
      Node_2.rt = 0,
      Node_2.state = 1;

  process Node_0_Bandwidth
    guardBlock
      temp bool t_152 = Node_0.state == 2,
      temp bool t_153 = Bandwidth.state == 0,
      temp bool t_154 = t_152 and t_153;
    guardCondition t_154;
    effect
      Node_0.state = 8,
      Node_0.granted = 0,
      Bandwidth.i = 0,
      Bandwidth.state = 1;

  process Node_1_Bandwidth
    guardBlock
      temp bool t_155 = Node_1.state == 2,
      temp bool t_156 = Bandwidth.state == 0,
      temp bool t_157 = t_155 and t_156;
    guardCondition t_157;
    effect
      Node_1.state = 8,
      Node_1.granted = 0,
      Bandwidth.i = 1,
      Bandwidth.state = 1;

  process Node_2_Bandwidth
    guardBlock
      temp bool t_158 = Node_2.state == 2,
      temp bool t_159 = Bandwidth.state == 0,
      temp bool t_160 = t_158 and t_159;
    guardCondition t_160;
    effect
      Node_2.state = 8,
      Node_2.granted = 0,
      Bandwidth.i = 2,
      Bandwidth.state = 1;

  process Node_3_Bandwidth
    guardBlock
      temp bool t_161 = Node_3.state == 2,
      temp bool t_162 = Bandwidth.state == 0,
      temp bool t_163 = t_161 and t_162;
    guardCondition t_163;
    effect
      Node_3.state = 8,
      Node_3.granted = 0,
      Bandwidth.i = 3,
      Bandwidth.state = 1;

  process Node_0_Token
    guardBlock
      temp bool t_164 = Node_0.state == 6,
      temp bool t_165 = Token.state == 2,
      temp bool t_166 = t_164 and t_165;
    guardCondition t_166;
    effect
      Node_0.state = 0,
      Token.state = 1,
      temp int t_167 = Token.i + 1,
      Token.i = t_167;

  process Node_0_Token
    guardBlock
      temp bool t_168 = Node_0.state == 6,
      temp bool t_169 = Token.state == 4,
      temp bool t_170 = t_168 and t_169;
    guardCondition t_170;
    effect
      Node_0.state = 0,
      Token.state = 3,
      temp int t_171 = Token.next + 1,
      temp int t_172 = t_171 % 4,
      Token.next = t_172,
      temp int t_173 = Token.NRT_count - 1,
      Token.NRT_count = t_173;

  process Node_1_Token
    guardBlock
      temp bool t_174 = Node_1.state == 6,
      temp bool t_175 = Token.state == 2,
      temp bool t_176 = t_174 and t_175;
    guardCondition t_176;
    effect
      Node_1.state = 0,
      Token.state = 1,
      temp int t_177 = Token.i + 1,
      Token.i = t_177;

  process Node_1_Token
    guardBlock
      temp bool t_178 = Node_1.state == 6,
      temp bool t_179 = Token.state == 4,
      temp bool t_180 = t_178 and t_179;
    guardCondition t_180;
    effect
      Node_1.state = 0,
      Token.state = 3,
      temp int t_181 = Token.next + 1,
      temp int t_182 = t_181 % 4,
      Token.next = t_182,
      temp int t_183 = Token.NRT_count - 1,
      Token.NRT_count = t_183;

  process Node_2_Token
    guardBlock
      temp bool t_184 = Node_2.state == 6,
      temp bool t_185 = Token.state == 2,
      temp bool t_186 = t_184 and t_185;
    guardCondition t_186;
    effect
      Node_2.state = 0,
      Token.state = 1,
      temp int t_187 = Token.i + 1,
      Token.i = t_187;

  process Node_2_Token
    guardBlock
      temp bool t_188 = Node_2.state == 6,
      temp bool t_189 = Token.state == 4,
      temp bool t_190 = t_188 and t_189;
    guardCondition t_190;
    effect
      Node_2.state = 0,
      Token.state = 3,
      temp int t_191 = Token.next + 1,
      temp int t_192 = t_191 % 4,
      Token.next = t_192,
      temp int t_193 = Token.NRT_count - 1,
      Token.NRT_count = t_193;

  process Node_3_Token
    guardBlock
      temp bool t_194 = Node_3.state == 6,
      temp bool t_195 = Token.state == 2,
      temp bool t_196 = t_194 and t_195;
    guardCondition t_196;
    effect
      Node_3.state = 0,
      Token.state = 1,
      temp int t_197 = Token.i + 1,
      Token.i = t_197;

  process Node_3_Token
    guardBlock
      temp bool t_198 = Node_3.state == 6,
      temp bool t_199 = Token.state == 4,
      temp bool t_200 = t_198 and t_199;
    guardCondition t_200;
    effect
      Node_3.state = 0,
      Token.state = 3,
      temp int t_201 = Token.next + 1,
      temp int t_202 = t_201 % 4,
      Token.next = t_202,
      temp int t_203 = Token.NRT_count - 1,
      Token.NRT_count = t_203;

  process Token_Node_3
    guardBlock
      temp bool t_204 = Token.state == 1,
      temp bool t_205 = Token.i == 3,
      temp byte t_206 = in_RT[Token.i],
      temp bool t_207 = t_206 == 1,
      temp bool t_208 = t_205 and t_207,
      temp bool t_209 = t_204 and t_208,
      temp bool t_210 = Node_3.state == 0,
      temp bool t_211 = t_209 and t_210;
    guardCondition t_211;
    effect
      Token.state = 2,
      Node_3.rt = 1,
      Node_3.state = 1;

  process Token_Node_3
    guardBlock
      temp bool t_212 = Token.state == 3,
      temp bool t_213 = Token.NRT_count > 0,
      temp bool t_214 = Token.next == 3,
      temp bool t_215 = t_213 and t_214,
      temp bool t_216 = t_212 and t_215,
      temp bool t_217 = Node_3.state == 0,
      temp bool t_218 = t_216 and t_217;
    guardCondition t_218;
    effect
      Token.state = 4,
      Node_3.rt = 0,
      Node_3.state = 1;

  process Bandwidth_Node_0
    guardBlock
      temp bool t_219 = Bandwidth.state == 2,
      temp bool t_220 = RT_count < 2,
      temp bool t_221 = t_219 and t_220,
      temp bool t_222 = Node_0.state == 4,
      temp bool t_223 = t_221 and t_222;
    guardCondition t_223;
    effect
      Bandwidth.state = 0,
      temp int t_224 = RT_count + 1,
      RT_count = t_224,
      in_RT[Bandwidth.i] = 1,
      Node_0.state = 5;

  process Bandwidth_Node_1
    guardBlock
      temp bool t_225 = Bandwidth.state == 2,
      temp bool t_226 = RT_count < 2,
      temp bool t_227 = t_225 and t_226,
      temp bool t_228 = Node_1.state == 4,
      temp bool t_229 = t_227 and t_228;
    guardCondition t_229;
    effect
      Bandwidth.state = 0,
      temp int t_230 = RT_count + 1,
      RT_count = t_230,
      in_RT[Bandwidth.i] = 1,
      Node_1.state = 5;

  process Bandwidth_Node_2
    guardBlock
      temp bool t_231 = Bandwidth.state == 2,
      temp bool t_232 = RT_count < 2,
      temp bool t_233 = t_231 and t_232,
      temp bool t_234 = Node_2.state == 4,
      temp bool t_235 = t_233 and t_234;
    guardCondition t_235;
    effect
      Bandwidth.state = 0,
      temp int t_236 = RT_count + 1,
      RT_count = t_236,
      in_RT[Bandwidth.i] = 1,
      Node_2.state = 5;

  process Bandwidth_Node_3
    guardBlock
      temp bool t_237 = Bandwidth.state == 2,
      temp bool t_238 = RT_count < 2,
      temp bool t_239 = t_237 and t_238,
      temp bool t_240 = Node_3.state == 4,
      temp bool t_241 = t_239 and t_240;
    guardCondition t_241;
    effect
      Bandwidth.state = 0,
      temp int t_242 = RT_count + 1,
      RT_count = t_242,
      in_RT[Bandwidth.i] = 1,
      Node_3.state = 5;

  process Token_Node_0
    guardBlock
      temp bool t_243 = Token.state == 1,
      temp bool t_244 = Token.i == 0,
      temp byte t_245 = in_RT[Token.i],
      temp bool t_246 = t_245 == 1,
      temp bool t_247 = t_244 and t_246,
      temp bool t_248 = t_243 and t_247,
      temp bool t_249 = Node_0.state == 0,
      temp bool t_250 = t_248 and t_249;
    guardCondition t_250;
    effect
      Token.state = 2,
      Node_0.rt = 1,
      Node_0.state = 1;

  process Token_Node_0
    guardBlock
      temp bool t_251 = Token.state == 3,
      temp bool t_252 = Token.NRT_count > 0,
      temp bool t_253 = Token.next == 0,
      temp bool t_254 = t_252 and t_253,
      temp bool t_255 = t_251 and t_254,
      temp bool t_256 = Node_0.state == 0,
      temp bool t_257 = t_255 and t_256;
    guardCondition t_257;
    effect
      Token.state = 4,
      Node_0.rt = 0,
      Node_0.state = 1;

  process Node_0_Bandwidth
    guardBlock
      temp bool t_258 = Node_0.state == 3,
      temp bool t_259 = Node_0.granted == 0,
      temp bool t_260 = t_258 and t_259,
      temp bool t_261 = Bandwidth.state == 0,
      temp bool t_262 = t_260 and t_261;
    guardCondition t_262;
    effect
      Node_0.state = 4,
      Bandwidth.i = 0,
      Bandwidth.state = 2;

  process Node_1_Bandwidth
    guardBlock
      temp bool t_263 = Node_1.state == 3,
      temp bool t_264 = Node_1.granted == 0,
      temp bool t_265 = t_263 and t_264,
      temp bool t_266 = Bandwidth.state == 0,
      temp bool t_267 = t_265 and t_266;
    guardCondition t_267;
    effect
      Node_1.state = 4,
      Bandwidth.i = 1,
      Bandwidth.state = 2;

  process Node_2_Bandwidth
    guardBlock
      temp bool t_268 = Node_2.state == 3,
      temp bool t_269 = Node_2.granted == 0,
      temp bool t_270 = t_268 and t_269,
      temp bool t_271 = Bandwidth.state == 0,
      temp bool t_272 = t_270 and t_271;
    guardCondition t_272;
    effect
      Node_2.state = 4,
      Bandwidth.i = 2,
      Bandwidth.state = 2;

  process Node_3_Bandwidth
    guardBlock
      temp bool t_273 = Node_3.state == 3,
      temp bool t_274 = Node_3.granted == 0,
      temp bool t_275 = t_273 and t_274,
      temp bool t_276 = Bandwidth.state == 0,
      temp bool t_277 = t_275 and t_276;
    guardCondition t_277;
    effect
      Node_3.state = 4,
      Bandwidth.i = 3,
      Bandwidth.state = 2;

  process Bandwidth_Node_0
    guardBlock
      temp bool t_278 = Bandwidth.state == 2,
      temp bool t_279 = RT_count >= 2,
      temp bool t_280 = t_278 and t_279,
      temp bool t_281 = Node_0.state == 4,
      temp bool t_282 = t_280 and t_281;
    guardCondition t_282;
    effect
      Bandwidth.state = 0,
      Node_0.state = 6;

  process Bandwidth_Node_1
    guardBlock
      temp bool t_283 = Bandwidth.state == 2,
      temp bool t_284 = RT_count >= 2,
      temp bool t_285 = t_283 and t_284,
      temp bool t_286 = Node_1.state == 4,
      temp bool t_287 = t_285 and t_286;
    guardCondition t_287;
    effect
      Bandwidth.state = 0,
      Node_1.state = 6;

  process Bandwidth_Node_2
    guardBlock
      temp bool t_288 = Bandwidth.state == 2,
      temp bool t_289 = RT_count >= 2,
      temp bool t_290 = t_288 and t_289,
      temp bool t_291 = Node_2.state == 4,
      temp bool t_292 = t_290 and t_291;
    guardCondition t_292;
    effect
      Bandwidth.state = 0,
      Node_2.state = 6;

  process Bandwidth_Node_3
    guardBlock
      temp bool t_293 = Bandwidth.state == 2,
      temp bool t_294 = RT_count >= 2,
      temp bool t_295 = t_293 and t_294,
      temp bool t_296 = Node_3.state == 4,
      temp bool t_297 = t_295 and t_296;
    guardCondition t_297;
    effect
      Bandwidth.state = 0,
      Node_3.state = 6;

  process Bandwidth_Node_0
    guardBlock
      temp bool t_298 = Bandwidth.state == 1,
      temp byte t_299 = in_RT[Bandwidth.i],
      temp bool t_300 = t_299 == 1,
      temp bool t_301 = t_298 and t_300,
      temp bool t_302 = Node_0.state == 8,
      temp bool t_303 = t_301 and t_302;
    guardCondition t_303;
    effect
      Bandwidth.state = 0,
      in_RT[Bandwidth.i] = 0,
      temp int t_304 = RT_count - 1,
      RT_count = t_304,
      Node_0.state = 6;

  process Bandwidth_Node_1
    guardBlock
      temp bool t_305 = Bandwidth.state == 1,
      temp byte t_306 = in_RT[Bandwidth.i],
      temp bool t_307 = t_306 == 1,
      temp bool t_308 = t_305 and t_307,
      temp bool t_309 = Node_1.state == 8,
      temp bool t_310 = t_308 and t_309;
    guardCondition t_310;
    effect
      Bandwidth.state = 0,
      in_RT[Bandwidth.i] = 0,
      temp int t_311 = RT_count - 1,
      RT_count = t_311,
      Node_1.state = 6;

  process Bandwidth_Node_2
    guardBlock
      temp bool t_312 = Bandwidth.state == 1,
      temp byte t_313 = in_RT[Bandwidth.i],
      temp bool t_314 = t_313 == 1,
      temp bool t_315 = t_312 and t_314,
      temp bool t_316 = Node_2.state == 8,
      temp bool t_317 = t_315 and t_316;
    guardCondition t_317;
    effect
      Bandwidth.state = 0,
      in_RT[Bandwidth.i] = 0,
      temp int t_318 = RT_count - 1,
      RT_count = t_318,
      Node_2.state = 6;

  process Bandwidth_Node_3
    guardBlock
      temp bool t_319 = Bandwidth.state == 1,
      temp byte t_320 = in_RT[Bandwidth.i],
      temp bool t_321 = t_320 == 1,
      temp bool t_322 = t_319 and t_321,
      temp bool t_323 = Node_3.state == 8,
      temp bool t_324 = t_322 and t_323;
    guardCondition t_324;
    effect
      Bandwidth.state = 0,
      in_RT[Bandwidth.i] = 0,
      temp int t_325 = RT_count - 1,
      RT_count = t_325,
      Node_3.state = 6;

  process Token_Node_1
    guardBlock
      temp bool t_326 = Token.state == 1,
      temp bool t_327 = Token.i == 1,
      temp byte t_328 = in_RT[Token.i],
      temp bool t_329 = t_328 == 1,
      temp bool t_330 = t_327 and t_329,
      temp bool t_331 = t_326 and t_330,
      temp bool t_332 = Node_1.state == 0,
      temp bool t_333 = t_331 and t_332;
    guardCondition t_333;
    effect
      Token.state = 2,
      Node_1.rt = 1,
      Node_1.state = 1;

  process Token_Node_1
    guardBlock
      temp bool t_334 = Token.state == 3,
      temp bool t_335 = Token.NRT_count > 0,
      temp bool t_336 = Token.next == 1,
      temp bool t_337 = t_335 and t_336,
      temp bool t_338 = t_334 and t_337,
      temp bool t_339 = Node_1.state == 0,
      temp bool t_340 = t_338 and t_339;
    guardCondition t_340;
    effect
      Token.state = 4,
      Node_1.rt = 0,
      Node_1.state = 1;
      accepting conditions
      LTL_property.state == 0
      LTL_property.state == 3
