state {idle(0), rel(1), res(2), error_st(3)} Bandwidth.state = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_0.state = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_1.state = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_2.state = 0;
state {start(0), RT_phase(1), RT_wait(2), NRT_phase(3), NRT_wait(4), cycle_end(5)} Token.state = 0;
state {q1(0), q2(1), q3(2), q4(3), q5(4), q6(5), q7(6)} LTL_property.state = 1;
byte in_RT[3] = {0, 0, 0};
byte RT_count = 0;
byte Bandwidth.i = 0;
byte Node_0.rt = 0;
byte Node_0.granted = 0;
byte Node_1.rt = 0;
byte Node_1.granted = 0;
byte Node_2.rt = 0;
byte Node_2.granted = 0;
byte Token.i = 0;
byte Token.NRT_count = 5;
byte Token.next = 0;

  process Bandwidth 
    guardBlock
      temp bool t_0 = Bandwidth.state == 1,
      temp byte t_1 = in_RT[Bandwidth.i],
      temp bool t_2 = t_1 == 0,
      temp bool t_3 = t_0 and t_2;

    guardCondition t_3;
    effect
      Bandwidth.state = 3;

  process Node_0 
    guardBlock
      temp bool t_4 = Node_0.state == 1,
      temp bool t_5 = Node_0.rt == 1,
      temp bool t_6 = t_4 and t_5;

    guardCondition t_6;
    effect
      Node_0.state = 2;

  process Node_0 
    guardBlock
      temp bool t_7 = Node_0.state == 1,
      temp bool t_8 = Node_0.rt == 0,
      temp bool t_9 = t_7 and t_8;

    guardCondition t_9;
    effect
      Node_0.state = 3;

  process Node_0 
    guardBlock
      temp bool t_10 = Node_0.state == 2,
      temp bool t_11 = Node_0.granted == 0,
      temp bool t_12 = t_10 and t_11;

    guardCondition t_12;
    effect
      Node_0.state = 7;

  process Node_0 
    guardBlock
      temp bool t_13 = Node_0.state == 2;

    guardCondition t_13;
    effect
      Node_0.state = 6;

  process Node_0 
    guardBlock
      temp bool t_14 = Node_0.state == 3;

    guardCondition t_14;
    effect
      Node_0.state = 6;

  process Node_0 
    guardBlock
      temp bool t_15 = Node_0.state == 5;

    guardCondition t_15;
    effect
      Node_0.state = 6,
      Node_0.granted = 1;

  process Node_1 
    guardBlock
      temp bool t_16 = Node_1.state == 1,
      temp bool t_17 = Node_1.rt == 1,
      temp bool t_18 = t_16 and t_17;

    guardCondition t_18;
    effect
      Node_1.state = 2;

  process Node_1 
    guardBlock
      temp bool t_19 = Node_1.state == 1,
      temp bool t_20 = Node_1.rt == 0,
      temp bool t_21 = t_19 and t_20;

    guardCondition t_21;
    effect
      Node_1.state = 3;

  process Node_1 
    guardBlock
      temp bool t_22 = Node_1.state == 2,
      temp bool t_23 = Node_1.granted == 0,
      temp bool t_24 = t_22 and t_23;

    guardCondition t_24;
    effect
      Node_1.state = 7;

  process Node_1 
    guardBlock
      temp bool t_25 = Node_1.state == 2;

    guardCondition t_25;
    effect
      Node_1.state = 6;

  process Node_1 
    guardBlock
      temp bool t_26 = Node_1.state == 3;

    guardCondition t_26;
    effect
      Node_1.state = 6;

  process Node_1 
    guardBlock
      temp bool t_27 = Node_1.state == 5;

    guardCondition t_27;
    effect
      Node_1.state = 6,
      Node_1.granted = 1;

  process Node_2 
    guardBlock
      temp bool t_28 = Node_2.state == 1,
      temp bool t_29 = Node_2.rt == 1,
      temp bool t_30 = t_28 and t_29;

    guardCondition t_30;
    effect
      Node_2.state = 2;

  process Node_2 
    guardBlock
      temp bool t_31 = Node_2.state == 1,
      temp bool t_32 = Node_2.rt == 0,
      temp bool t_33 = t_31 and t_32;

    guardCondition t_33;
    effect
      Node_2.state = 3;

  process Node_2 
    guardBlock
      temp bool t_34 = Node_2.state == 2,
      temp bool t_35 = Node_2.granted == 0,
      temp bool t_36 = t_34 and t_35;

    guardCondition t_36;
    effect
      Node_2.state = 7;

  process Node_2 
    guardBlock
      temp bool t_37 = Node_2.state == 2;

    guardCondition t_37;
    effect
      Node_2.state = 6;

  process Node_2 
    guardBlock
      temp bool t_38 = Node_2.state == 3;

    guardCondition t_38;
    effect
      Node_2.state = 6;

  process Node_2 
    guardBlock
      temp bool t_39 = Node_2.state == 5;

    guardCondition t_39;
    effect
      Node_2.state = 6,
      Node_2.granted = 1;

  process Token 
    guardBlock
      temp bool t_40 = Token.state == 0;

    guardCondition t_40;
    effect
      Token.state = 1,
      Token.i = 0;

  process Token 
    guardBlock
      temp bool t_41 = Token.state == 1,
      temp bool t_42 = Token.i < 3,
      temp byte t_43 = in_RT[Token.i],
      temp bool t_44 = t_43 == 0,
      temp bool t_45 = t_42 and t_44,
      temp bool t_46 = t_41 and t_45;

    guardCondition t_46;
    effect
      Token.state = 1,
      temp byte t_47 = Token.i + 1,
      Token.i = t_47;

  process Token 
    guardBlock
      temp bool t_48 = Token.state == 1,
      temp bool t_49 = Token.i == 3,
      temp bool t_50 = t_48 and t_49;

    guardCondition t_50;
    effect
      Token.state = 3;

  process Token 
    guardBlock
      temp bool t_51 = Token.state == 3,
      temp bool t_52 = Token.NRT_count == 0,
      temp bool t_53 = t_51 and t_52;

    guardCondition t_53;
    effect
      Token.state = 5;

  process Token 
    guardBlock
      temp bool t_54 = Token.state == 5;

    guardCondition t_54;
    effect
      Token.state = 0,
      temp byte t_55 = 5 - RT_count,
      Token.NRT_count = t_55;

  process LTL_property 
    guardBlock
      temp bool t_56 = LTL_property.state == 0;

    guardCondition t_56;
    effect
      LTL_property.state = 0;

  process LTL_property 
    guardBlock
      temp bool t_57 = LTL_property.state == 1;

    guardCondition t_57;
    effect
      LTL_property.state = 1;

  process LTL_property 
    guardBlock
      temp bool t_58 = LTL_property.state == 1,
      temp bool t_59 = Node_0.state == 4,
      temp bool t_60 = Node_0.state == 2,
      temp bool t_61 = not t_60,
      temp bool t_62 = t_59 and t_61,
      temp bool t_63 = t_58 and t_62;

    guardCondition t_63;
    effect
      LTL_property.state = 2;

  process LTL_property 
    guardBlock
      temp bool t_64 = LTL_property.state == 1,
      temp bool t_65 = Node_0.state == 4,
      temp bool t_66 = Token.state == 5,
      temp bool t_67 = t_65 and t_66,
      temp bool t_68 = t_64 and t_67;

    guardCondition t_68;
    effect
      LTL_property.state = 3;

  process LTL_property 
    guardBlock
      temp bool t_69 = LTL_property.state == 2,
      temp bool t_70 = Node_0.state == 2,
      temp bool t_71 = not t_70,
      temp bool t_72 = t_69 and t_71;

    guardCondition t_72;
    effect
      LTL_property.state = 2;

  process LTL_property 
    guardBlock
      temp bool t_73 = LTL_property.state == 2,
      temp bool t_74 = Token.state == 5,
      temp bool t_75 = t_73 and t_74;

    guardCondition t_75;
    effect
      LTL_property.state = 4;

  process LTL_property 
    guardBlock
      temp bool t_76 = LTL_property.state == 3,
      temp bool t_77 = Node_0.state == 2,
      temp bool t_78 = not t_77,
      temp bool t_79 = t_76 and t_78;

    guardCondition t_79;
    effect
      LTL_property.state = 5;

  process LTL_property 
    guardBlock
      temp bool t_80 = LTL_property.state == 3,
      temp bool t_81 = Token.state == 5,
      temp bool t_82 = t_80 and t_81;

    guardCondition t_82;
    effect
      LTL_property.state = 4;

  process LTL_property 
    guardBlock
      temp bool t_83 = LTL_property.state == 3,
      temp bool t_84 = Node_0.state == 2,
      temp bool t_85 = not t_84,
      temp bool t_86 = Token.state == 5,
      temp bool t_87 = not t_86,
      temp bool t_88 = t_85 and t_87,
      temp bool t_89 = t_83 and t_88;

    guardCondition t_89;
    effect
      LTL_property.state = 6;

  process LTL_property 
    guardBlock
      temp bool t_90 = LTL_property.state == 4,
      temp bool t_91 = Node_0.state == 2,
      temp bool t_92 = not t_91,
      temp bool t_93 = t_90 and t_92;

    guardCondition t_93;
    effect
      LTL_property.state = 3;

  process LTL_property 
    guardBlock
      temp bool t_94 = LTL_property.state == 4,
      temp bool t_95 = Token.state == 5,
      temp bool t_96 = t_94 and t_95;

    guardCondition t_96;
    effect
      LTL_property.state = 3;

  process LTL_property 
    guardBlock
      temp bool t_97 = LTL_property.state == 4,
      temp bool t_98 = Node_0.state == 2,
      temp bool t_99 = not t_98,
      temp bool t_100 = Token.state == 5,
      temp bool t_101 = not t_100,
      temp bool t_102 = t_99 and t_101,
      temp bool t_103 = t_97 and t_102;

    guardCondition t_103;
    effect
      LTL_property.state = 6;

  process LTL_property 
    guardBlock
      temp bool t_104 = LTL_property.state == 5,
      temp bool t_105 = Node_0.state == 2,
      temp bool t_106 = not t_105,
      temp bool t_107 = t_104 and t_106;

    guardCondition t_107;
    effect
      LTL_property.state = 5;

  process LTL_property 
    guardBlock
      temp bool t_108 = LTL_property.state == 5,
      temp bool t_109 = Token.state == 5,
      temp bool t_110 = t_108 and t_109;

    guardCondition t_110;
    effect
      LTL_property.state = 4;

  process LTL_property 
    guardBlock
      temp bool t_111 = LTL_property.state == 5,
      temp bool t_112 = Node_0.state == 2,
      temp bool t_113 = not t_112,
      temp bool t_114 = Token.state == 5,
      temp bool t_115 = not t_114,
      temp bool t_116 = t_113 and t_115,
      temp bool t_117 = t_111 and t_116;

    guardCondition t_117;
    effect
      LTL_property.state = 6;

  process LTL_property 
    guardBlock
      temp bool t_118 = LTL_property.state == 6,
      temp bool t_119 = Node_0.state == 2,
      temp bool t_120 = not t_119,
      temp bool t_121 = t_118 and t_120;

    guardCondition t_121;
    effect
      LTL_property.state = 6;

  process LTL_property 
    guardBlock
      temp bool t_122 = LTL_property.state == 6,
      temp bool t_123 = Token.state == 5,
      temp bool t_124 = t_122 and t_123;

    guardCondition t_124;
    effect
      LTL_property.state = 0;

  process Bandwidth_Node_0 
    guardBlock
      temp bool t_125 = Bandwidth.state == 1,
      temp byte t_126 = in_RT[Bandwidth.i],
      temp bool t_127 = t_126 == 1,
      temp bool t_128 = t_125 and t_127,
      temp bool t_129 = Node_0.state == 8,
      temp bool t_130 = t_128 and t_129;

    guardCondition t_130;
    effect
      Bandwidth.state = 0,
      in_RT[Bandwidth.i] = 0,
      temp byte t_131 = RT_count - 1,
      RT_count = t_131,
      Node_0.state = 6;

  process Bandwidth_Node_1 
    guardBlock
      temp bool t_132 = Bandwidth.state == 1,
      temp byte t_133 = in_RT[Bandwidth.i],
      temp bool t_134 = t_133 == 1,
      temp bool t_135 = t_132 and t_134,
      temp bool t_136 = Node_1.state == 8,
      temp bool t_137 = t_135 and t_136;

    guardCondition t_137;
    effect
      Bandwidth.state = 0,
      in_RT[Bandwidth.i] = 0,
      temp byte t_138 = RT_count - 1,
      RT_count = t_138,
      Node_1.state = 6;

  process Bandwidth_Node_2 
    guardBlock
      temp bool t_139 = Bandwidth.state == 1,
      temp byte t_140 = in_RT[Bandwidth.i],
      temp bool t_141 = t_140 == 1,
      temp bool t_142 = t_139 and t_141,
      temp bool t_143 = Node_2.state == 8,
      temp bool t_144 = t_142 and t_143;

    guardCondition t_144;
    effect
      Bandwidth.state = 0,
      in_RT[Bandwidth.i] = 0,
      temp byte t_145 = RT_count - 1,
      RT_count = t_145,
      Node_2.state = 6;

  process Node_0_Bandwidth 
    guardBlock
      temp bool t_146 = Node_0.state == 3,
      temp bool t_147 = Node_0.granted == 0,
      temp bool t_148 = t_146 and t_147,
      temp bool t_149 = Bandwidth.state == 0,
      temp bool t_150 = t_148 and t_149;

    guardCondition t_150;
    effect
      Node_0.state = 4,
      Bandwidth.i = 0,
      Bandwidth.state = 2;

  process Node_1_Bandwidth 
    guardBlock
      temp bool t_151 = Node_1.state == 3,
      temp bool t_152 = Node_1.granted == 0,
      temp bool t_153 = t_151 and t_152,
      temp bool t_154 = Bandwidth.state == 0,
      temp bool t_155 = t_153 and t_154;

    guardCondition t_155;
    effect
      Node_1.state = 4,
      Bandwidth.i = 1,
      Bandwidth.state = 2;

  process Node_2_Bandwidth 
    guardBlock
      temp bool t_156 = Node_2.state == 3,
      temp bool t_157 = Node_2.granted == 0,
      temp bool t_158 = t_156 and t_157,
      temp bool t_159 = Bandwidth.state == 0,
      temp bool t_160 = t_158 and t_159;

    guardCondition t_160;
    effect
      Node_2.state = 4,
      Bandwidth.i = 2,
      Bandwidth.state = 2;

  process Token_Node_2 
    guardBlock
      temp bool t_161 = Token.state == 1,
      temp bool t_162 = Token.i == 2,
      temp byte t_163 = in_RT[Token.i],
      temp bool t_164 = t_163 == 1,
      temp bool t_165 = t_162 and t_164,
      temp bool t_166 = t_161 and t_165,
      temp bool t_167 = Node_2.state == 0,
      temp bool t_168 = t_166 and t_167;

    guardCondition t_168;
    effect
      Token.state = 2,
      Node_2.rt = 1,
      Node_2.state = 1;

  process Token_Node_2 
    guardBlock
      temp bool t_169 = Token.state == 3,
      temp bool t_170 = Token.NRT_count > 0,
      temp bool t_171 = Token.next == 2,
      temp bool t_172 = t_170 and t_171,
      temp bool t_173 = t_169 and t_172,
      temp bool t_174 = Node_2.state == 0,
      temp bool t_175 = t_173 and t_174;

    guardCondition t_175;
    effect
      Token.state = 4,
      Node_2.rt = 0,
      Node_2.state = 1;

  process Node_0_Bandwidth 
    guardBlock
      temp bool t_176 = Node_0.state == 2,
      temp bool t_177 = Bandwidth.state == 0,
      temp bool t_178 = t_176 and t_177;

    guardCondition t_178;
    effect
      Node_0.state = 8,
      Node_0.granted = 0,
      Bandwidth.i = 0,
      Bandwidth.state = 1;

  process Node_1_Bandwidth 
    guardBlock
      temp bool t_179 = Node_1.state == 2,
      temp bool t_180 = Bandwidth.state == 0,
      temp bool t_181 = t_179 and t_180;

    guardCondition t_181;
    effect
      Node_1.state = 8,
      Node_1.granted = 0,
      Bandwidth.i = 1,
      Bandwidth.state = 1;

  process Node_2_Bandwidth 
    guardBlock
      temp bool t_182 = Node_2.state == 2,
      temp bool t_183 = Bandwidth.state == 0,
      temp bool t_184 = t_182 and t_183;

    guardCondition t_184;
    effect
      Node_2.state = 8,
      Node_2.granted = 0,
      Bandwidth.i = 2,
      Bandwidth.state = 1;

  process Node_0_Token 
    guardBlock
      temp bool t_185 = Node_0.state == 6,
      temp bool t_186 = Token.state == 2,
      temp bool t_187 = t_185 and t_186;

    guardCondition t_187;
    effect
      Node_0.state = 0,
      Token.state = 1,
      temp byte t_188 = Token.i + 1,
      Token.i = t_188;

  process Node_0_Token 
    guardBlock
      temp bool t_189 = Node_0.state == 6,
      temp bool t_190 = Token.state == 4,
      temp bool t_191 = t_189 and t_190;

    guardCondition t_191;
    effect
      Node_0.state = 0,
      Token.state = 3,
      temp byte t_192 = Token.next + 1,
      temp byte t_193 = t_192 % 3,
      Token.next = t_193,
      temp byte t_194 = Token.NRT_count - 1,
      Token.NRT_count = t_194;

  process Node_1_Token 
    guardBlock
      temp bool t_195 = Node_1.state == 6,
      temp bool t_196 = Token.state == 2,
      temp bool t_197 = t_195 and t_196;

    guardCondition t_197;
    effect
      Node_1.state = 0,
      Token.state = 1,
      temp byte t_198 = Token.i + 1,
      Token.i = t_198;

  process Node_1_Token 
    guardBlock
      temp bool t_199 = Node_1.state == 6,
      temp bool t_200 = Token.state == 4,
      temp bool t_201 = t_199 and t_200;

    guardCondition t_201;
    effect
      Node_1.state = 0,
      Token.state = 3,
      temp byte t_202 = Token.next + 1,
      temp byte t_203 = t_202 % 3,
      Token.next = t_203,
      temp byte t_204 = Token.NRT_count - 1,
      Token.NRT_count = t_204;

  process Node_2_Token 
    guardBlock
      temp bool t_205 = Node_2.state == 6,
      temp bool t_206 = Token.state == 2,
      temp bool t_207 = t_205 and t_206;

    guardCondition t_207;
    effect
      Node_2.state = 0,
      Token.state = 1,
      temp byte t_208 = Token.i + 1,
      Token.i = t_208;

  process Node_2_Token 
    guardBlock
      temp bool t_209 = Node_2.state == 6,
      temp bool t_210 = Token.state == 4,
      temp bool t_211 = t_209 and t_210;

    guardCondition t_211;
    effect
      Node_2.state = 0,
      Token.state = 3,
      temp byte t_212 = Token.next + 1,
      temp byte t_213 = t_212 % 3,
      Token.next = t_213,
      temp byte t_214 = Token.NRT_count - 1,
      Token.NRT_count = t_214;

  process Bandwidth_Node_0 
    guardBlock
      temp bool t_215 = Bandwidth.state == 2,
      temp bool t_216 = RT_count >= 2,
      temp bool t_217 = t_215 and t_216,
      temp bool t_218 = Node_0.state == 4,
      temp bool t_219 = t_217 and t_218;

    guardCondition t_219;
    effect
      Bandwidth.state = 0,
      Node_0.state = 6;

  process Bandwidth_Node_1 
    guardBlock
      temp bool t_220 = Bandwidth.state == 2,
      temp bool t_221 = RT_count >= 2,
      temp bool t_222 = t_220 and t_221,
      temp bool t_223 = Node_1.state == 4,
      temp bool t_224 = t_222 and t_223;

    guardCondition t_224;
    effect
      Bandwidth.state = 0,
      Node_1.state = 6;

  process Bandwidth_Node_2 
    guardBlock
      temp bool t_225 = Bandwidth.state == 2,
      temp bool t_226 = RT_count >= 2,
      temp bool t_227 = t_225 and t_226,
      temp bool t_228 = Node_2.state == 4,
      temp bool t_229 = t_227 and t_228;

    guardCondition t_229;
    effect
      Bandwidth.state = 0,
      Node_2.state = 6;

  process Token_Node_0 
    guardBlock
      temp bool t_230 = Token.state == 1,
      temp bool t_231 = Token.i == 0,
      temp byte t_232 = in_RT[Token.i],
      temp bool t_233 = t_232 == 1,
      temp bool t_234 = t_231 and t_233,
      temp bool t_235 = t_230 and t_234,
      temp bool t_236 = Node_0.state == 0,
      temp bool t_237 = t_235 and t_236;

    guardCondition t_237;
    effect
      Token.state = 2,
      Node_0.rt = 1,
      Node_0.state = 1;

  process Token_Node_0 
    guardBlock
      temp bool t_238 = Token.state == 3,
      temp bool t_239 = Token.NRT_count > 0,
      temp bool t_240 = Token.next == 0,
      temp bool t_241 = t_239 and t_240,
      temp bool t_242 = t_238 and t_241,
      temp bool t_243 = Node_0.state == 0,
      temp bool t_244 = t_242 and t_243;

    guardCondition t_244;
    effect
      Token.state = 4,
      Node_0.rt = 0,
      Node_0.state = 1;

  process Bandwidth_Node_0 
    guardBlock
      temp bool t_245 = Bandwidth.state == 2,
      temp bool t_246 = RT_count < 2,
      temp bool t_247 = t_245 and t_246,
      temp bool t_248 = Node_0.state == 4,
      temp bool t_249 = t_247 and t_248;

    guardCondition t_249;
    effect
      Bandwidth.state = 0,
      temp byte t_250 = RT_count + 1,
      RT_count = t_250,
      in_RT[Bandwidth.i] = 1,
      Node_0.state = 5;

  process Bandwidth_Node_1 
    guardBlock
      temp bool t_251 = Bandwidth.state == 2,
      temp bool t_252 = RT_count < 2,
      temp bool t_253 = t_251 and t_252,
      temp bool t_254 = Node_1.state == 4,
      temp bool t_255 = t_253 and t_254;

    guardCondition t_255;
    effect
      Bandwidth.state = 0,
      temp byte t_256 = RT_count + 1,
      RT_count = t_256,
      in_RT[Bandwidth.i] = 1,
      Node_1.state = 5;

  process Bandwidth_Node_2 
    guardBlock
      temp bool t_257 = Bandwidth.state == 2,
      temp bool t_258 = RT_count < 2,
      temp bool t_259 = t_257 and t_258,
      temp bool t_260 = Node_2.state == 4,
      temp bool t_261 = t_259 and t_260;

    guardCondition t_261;
    effect
      Bandwidth.state = 0,
      temp byte t_262 = RT_count + 1,
      RT_count = t_262,
      in_RT[Bandwidth.i] = 1,
      Node_2.state = 5;

  process Token_Node_1 
    guardBlock
      temp bool t_263 = Token.state == 1,
      temp bool t_264 = Token.i == 1,
      temp byte t_265 = in_RT[Token.i],
      temp bool t_266 = t_265 == 1,
      temp bool t_267 = t_264 and t_266,
      temp bool t_268 = t_263 and t_267,
      temp bool t_269 = Node_1.state == 0,
      temp bool t_270 = t_268 and t_269;

    guardCondition t_270;
    effect
      Token.state = 2,
      Node_1.rt = 1,
      Node_1.state = 1;

  process Token_Node_1 
    guardBlock
      temp bool t_271 = Token.state == 3,
      temp bool t_272 = Token.NRT_count > 0,
      temp bool t_273 = Token.next == 1,
      temp bool t_274 = t_272 and t_273,
      temp bool t_275 = t_271 and t_274,
      temp bool t_276 = Node_1.state == 0,
      temp bool t_277 = t_275 and t_276;

    guardCondition t_277;
    effect
      Token.state = 4,
      Node_1.rt = 0,
      Node_1.state = 1;

accepting conditions
  LTL_property.state == 0
  LTL_property.state == 3

