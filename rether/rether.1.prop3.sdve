byte[3] in_RT = {0, 0, 0};
byte RT_count = 0;
state {idle(0), rel(1), res(2), error_st(3)} Bandwidth.state = 0;
byte Bandwidth.i = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_0.state = 0;
byte Node_0.rt = 0;
byte Node_0.granted = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_1.state = 0;
byte Node_1.rt = 0;
byte Node_1.granted = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_2.state = 0;
byte Node_2.rt = 0;
byte Node_2.granted = 0;
state {start(0), RT_phase(1), RT_wait(2), NRT_phase(3), NRT_wait(4), cycle_end(5)} Token.state = 0;
byte Token.i = 0;
byte Token.NRT_count = 5;
byte Token.next = 0;
state {q1(0), q2(1), q3(2), q4(3), q5(4), q6(5), q7(6)} LTL_property.state = 1;
transient bool t_0 = false;
transient byte t_1 = 0;
transient bool t_2 = false;
transient bool t_3 = false;
transient bool t_4 = false;
transient bool t_5 = false;
transient bool t_6 = false;
transient bool t_7 = false;
transient bool t_8 = false;
transient bool t_9 = false;
transient bool t_10 = false;
transient bool t_11 = false;
transient bool t_12 = false;
transient bool t_13 = false;
transient bool t_14 = false;
transient bool t_15 = false;
transient bool t_16 = false;
transient bool t_17 = false;
transient bool t_18 = false;
transient bool t_19 = false;
transient bool t_20 = false;
transient bool t_21 = false;
transient bool t_22 = false;
transient bool t_23 = false;
transient bool t_24 = false;
transient bool t_25 = false;
transient bool t_26 = false;
transient bool t_27 = false;
transient bool t_28 = false;
transient bool t_29 = false;
transient bool t_30 = false;
transient bool t_31 = false;
transient bool t_32 = false;
transient bool t_33 = false;
transient bool t_34 = false;
transient bool t_35 = false;
transient bool t_36 = false;
transient bool t_37 = false;
transient bool t_38 = false;
transient bool t_39 = false;
transient bool t_40 = false;
transient bool t_41 = false;
transient bool t_42 = false;
transient byte t_43 = 0;
transient bool t_44 = false;
transient bool t_45 = false;
transient bool t_46 = false;
transient int t_47 = 0;
transient bool t_48 = false;
transient bool t_49 = false;
transient bool t_50 = false;
transient bool t_51 = false;
transient bool t_52 = false;
transient bool t_53 = false;
transient bool t_54 = false;
transient int t_55 = 0;
transient bool t_56 = false;
transient bool t_57 = false;
transient bool t_58 = false;
transient bool t_59 = false;
transient bool t_60 = false;
transient bool t_61 = false;
transient bool t_62 = false;
transient bool t_63 = false;
transient bool t_64 = false;
transient bool t_65 = false;
transient bool t_66 = false;
transient bool t_67 = false;
transient bool t_68 = false;
transient bool t_69 = false;
transient bool t_70 = false;
transient bool t_71 = false;
transient bool t_72 = false;
transient bool t_73 = false;
transient bool t_74 = false;
transient bool t_75 = false;
transient bool t_76 = false;
transient bool t_77 = false;
transient bool t_78 = false;
transient bool t_79 = false;
transient bool t_80 = false;
transient bool t_81 = false;
transient bool t_82 = false;
transient bool t_83 = false;
transient bool t_84 = false;
transient bool t_85 = false;
transient bool t_86 = false;
transient bool t_87 = false;
transient bool t_88 = false;
transient bool t_89 = false;
transient bool t_90 = false;
transient bool t_91 = false;
transient bool t_92 = false;
transient bool t_93 = false;
transient bool t_94 = false;
transient bool t_95 = false;
transient bool t_96 = false;
transient bool t_97 = false;
transient bool t_98 = false;
transient bool t_99 = false;
transient bool t_100 = false;
transient bool t_101 = false;
transient bool t_102 = false;
transient bool t_103 = false;
transient bool t_104 = false;
transient bool t_105 = false;
transient bool t_106 = false;
transient bool t_107 = false;
transient bool t_108 = false;
transient bool t_109 = false;
transient bool t_110 = false;
transient bool t_111 = false;
transient bool t_112 = false;
transient bool t_113 = false;
transient bool t_114 = false;
transient bool t_115 = false;
transient bool t_116 = false;
transient bool t_117 = false;
transient bool t_118 = false;
transient bool t_119 = false;
transient bool t_120 = false;
transient bool t_121 = false;
transient bool t_122 = false;
transient bool t_123 = false;
transient bool t_124 = false;
transient bool t_125 = false;
transient bool t_126 = false;
transient bool t_127 = false;
transient bool t_128 = false;
transient bool t_129 = false;
transient bool t_130 = false;
transient bool t_131 = false;
transient bool t_132 = false;
transient bool t_133 = false;
transient bool t_134 = false;
transient bool t_135 = false;
transient bool t_136 = false;
transient bool t_137 = false;
transient bool t_138 = false;
transient bool t_139 = false;
transient bool t_140 = false;
transient bool t_141 = false;
transient bool t_142 = false;
transient bool t_143 = false;
transient bool t_144 = false;
transient bool t_145 = false;
transient bool t_146 = false;
transient bool t_147 = false;
transient bool t_148 = false;
transient bool t_149 = false;
transient bool t_150 = false;
transient byte t_151 = 0;
transient bool t_152 = false;
transient bool t_153 = false;
transient bool t_154 = false;
transient bool t_155 = false;
transient bool t_156 = false;
transient bool t_157 = false;
transient bool t_158 = false;
transient bool t_159 = false;
transient bool t_160 = false;
transient bool t_161 = false;
transient bool t_162 = false;
transient bool t_163 = false;
transient bool t_164 = false;
transient bool t_165 = false;
transient bool t_166 = false;
transient int t_167 = 0;
transient bool t_168 = false;
transient bool t_169 = false;
transient bool t_170 = false;
transient int t_171 = 0;
transient int t_172 = 0;
transient int t_173 = 0;
transient bool t_174 = false;
transient bool t_175 = false;
transient bool t_176 = false;
transient int t_177 = 0;
transient bool t_178 = false;
transient bool t_179 = false;
transient bool t_180 = false;
transient int t_181 = 0;
transient int t_182 = 0;
transient int t_183 = 0;
transient bool t_184 = false;
transient bool t_185 = false;
transient bool t_186 = false;
transient int t_187 = 0;
transient bool t_188 = false;
transient bool t_189 = false;
transient bool t_190 = false;
transient int t_191 = 0;
transient int t_192 = 0;
transient int t_193 = 0;
transient bool t_194 = false;
transient bool t_195 = false;
transient byte t_196 = 0;
transient bool t_197 = false;
transient bool t_198 = false;
transient bool t_199 = false;
transient bool t_200 = false;
transient bool t_201 = false;
transient bool t_202 = false;
transient bool t_203 = false;
transient bool t_204 = false;
transient bool t_205 = false;
transient bool t_206 = false;
transient bool t_207 = false;
transient bool t_208 = false;
transient bool t_209 = false;
transient byte t_210 = 0;
transient bool t_211 = false;
transient bool t_212 = false;
transient bool t_213 = false;
transient bool t_214 = false;
transient int t_215 = 0;
transient bool t_216 = false;
transient byte t_217 = 0;
transient bool t_218 = false;
transient bool t_219 = false;
transient bool t_220 = false;
transient bool t_221 = false;
transient int t_222 = 0;
transient bool t_223 = false;
transient byte t_224 = 0;
transient bool t_225 = false;
transient bool t_226 = false;
transient bool t_227 = false;
transient bool t_228 = false;
transient int t_229 = 0;
transient bool t_230 = false;
transient bool t_231 = false;
transient bool t_232 = false;
transient bool t_233 = false;
transient bool t_234 = false;
transient int t_235 = 0;
transient bool t_236 = false;
transient bool t_237 = false;
transient bool t_238 = false;
transient bool t_239 = false;
transient bool t_240 = false;
transient int t_241 = 0;
transient bool t_242 = false;
transient bool t_243 = false;
transient bool t_244 = false;
transient bool t_245 = false;
transient bool t_246 = false;
transient int t_247 = 0;
transient bool t_248 = false;
transient bool t_249 = false;
transient byte t_250 = 0;
transient bool t_251 = false;
transient bool t_252 = false;
transient bool t_253 = false;
transient bool t_254 = false;
transient bool t_255 = false;
transient bool t_256 = false;
transient bool t_257 = false;
transient bool t_258 = false;
transient bool t_259 = false;
transient bool t_260 = false;
transient bool t_261 = false;
transient bool t_262 = false;
transient bool t_263 = false;
transient bool t_264 = false;
transient bool t_265 = false;
transient bool t_266 = false;
transient bool t_267 = false;
transient bool t_268 = false;
transient bool t_269 = false;
transient bool t_270 = false;
transient bool t_271 = false;
transient bool t_272 = false;
transient bool t_273 = false;
transient bool t_274 = false;
transient bool t_275 = false;
transient bool t_276 = false;
transient bool t_277 = false;
	process Bandwidth 
		guardBlock
			t_0 = Bandwidth.state == 1,
			t_1 = in_RT[Bandwidth.i],
			t_2 = t_1 == 0,
			t_3 = t_0 and t_2;

		guardCondition t_3;
		effect
			Bandwidth.state = 3;

	process Node_0 
		guardBlock
			t_4 = Node_0.state == 1,
			t_5 = Node_0.rt == 1,
			t_6 = t_4 and t_5;

		guardCondition t_6;
		effect
			Node_0.state = 2;

	process Node_0 
		guardBlock
			t_7 = Node_0.state == 1,
			t_8 = Node_0.rt == 0,
			t_9 = t_7 and t_8;

		guardCondition t_9;
		effect
			Node_0.state = 3;

	process Node_0 
		guardBlock
			t_10 = Node_0.state == 2,
			t_11 = Node_0.granted == 0,
			t_12 = t_10 and t_11;

		guardCondition t_12;
		effect
			Node_0.state = 7;

	process Node_0 
		guardBlock
			t_13 = Node_0.state == 2;

		guardCondition t_13;
		effect
			Node_0.state = 6;

	process Node_0 
		guardBlock
			t_14 = Node_0.state == 3;

		guardCondition t_14;
		effect
			Node_0.state = 6;

	process Node_0 
		guardBlock
			t_15 = Node_0.state == 5;

		guardCondition t_15;
		effect
			Node_0.state = 6,
			Node_0.granted = 1;

	process Node_1 
		guardBlock
			t_16 = Node_1.state == 1,
			t_17 = Node_1.rt == 1,
			t_18 = t_16 and t_17;

		guardCondition t_18;
		effect
			Node_1.state = 2;

	process Node_1 
		guardBlock
			t_19 = Node_1.state == 1,
			t_20 = Node_1.rt == 0,
			t_21 = t_19 and t_20;

		guardCondition t_21;
		effect
			Node_1.state = 3;

	process Node_1 
		guardBlock
			t_22 = Node_1.state == 2,
			t_23 = Node_1.granted == 0,
			t_24 = t_22 and t_23;

		guardCondition t_24;
		effect
			Node_1.state = 7;

	process Node_1 
		guardBlock
			t_25 = Node_1.state == 2;

		guardCondition t_25;
		effect
			Node_1.state = 6;

	process Node_1 
		guardBlock
			t_26 = Node_1.state == 3;

		guardCondition t_26;
		effect
			Node_1.state = 6;

	process Node_1 
		guardBlock
			t_27 = Node_1.state == 5;

		guardCondition t_27;
		effect
			Node_1.state = 6,
			Node_1.granted = 1;

	process Node_2 
		guardBlock
			t_28 = Node_2.state == 1,
			t_29 = Node_2.rt == 1,
			t_30 = t_28 and t_29;

		guardCondition t_30;
		effect
			Node_2.state = 2;

	process Node_2 
		guardBlock
			t_31 = Node_2.state == 1,
			t_32 = Node_2.rt == 0,
			t_33 = t_31 and t_32;

		guardCondition t_33;
		effect
			Node_2.state = 3;

	process Node_2 
		guardBlock
			t_34 = Node_2.state == 2,
			t_35 = Node_2.granted == 0,
			t_36 = t_34 and t_35;

		guardCondition t_36;
		effect
			Node_2.state = 7;

	process Node_2 
		guardBlock
			t_37 = Node_2.state == 2;

		guardCondition t_37;
		effect
			Node_2.state = 6;

	process Node_2 
		guardBlock
			t_38 = Node_2.state == 3;

		guardCondition t_38;
		effect
			Node_2.state = 6;

	process Node_2 
		guardBlock
			t_39 = Node_2.state == 5;

		guardCondition t_39;
		effect
			Node_2.state = 6,
			Node_2.granted = 1;

	process Token 
		guardBlock
			t_40 = Token.state == 0;

		guardCondition t_40;
		effect
			Token.state = 1,
			Token.i = 0;

	process Token 
		guardBlock
			t_41 = Token.state == 1,
			t_42 = Token.i < 3,
			t_43 = in_RT[Token.i],
			t_44 = t_43 == 0,
			t_45 = t_42 and t_44,
			t_46 = t_41 and t_45;

		guardCondition t_46;
		effect
			Token.state = 1,
			t_47 = Token.i + 1,
			Token.i = t_47;

	process Token 
		guardBlock
			t_48 = Token.state == 1,
			t_49 = Token.i == 3,
			t_50 = t_48 and t_49;

		guardCondition t_50;
		effect
			Token.state = 3;

	process Token 
		guardBlock
			t_51 = Token.state == 3,
			t_52 = Token.NRT_count == 0,
			t_53 = t_51 and t_52;

		guardCondition t_53;
		effect
			Token.state = 5;

	process Token 
		guardBlock
			t_54 = Token.state == 5;

		guardCondition t_54;
		effect
			Token.state = 0,
			t_55 = 5 - RT_count,
			Token.NRT_count = t_55;

	process LTL_property 
		guardBlock
			t_56 = LTL_property.state == 0;

		guardCondition t_56;
		effect
			LTL_property.state = 0;

	process LTL_property 
		guardBlock
			t_57 = LTL_property.state == 1;

		guardCondition t_57;
		effect
			LTL_property.state = 1;

	process LTL_property 
		guardBlock
			t_58 = LTL_property.state == 1,
			t_59 = Node_0.state == 4,
			t_60 = Node_0.state == 2,
			t_61 = not t_60,
			t_62 = t_59 and t_61,
			t_63 = t_58 and t_62;

		guardCondition t_63;
		effect
			LTL_property.state = 2;

	process LTL_property 
		guardBlock
			t_64 = LTL_property.state == 1,
			t_65 = Node_0.state == 4,
			t_66 = Token.state == 5,
			t_67 = t_65 and t_66,
			t_68 = t_64 and t_67;

		guardCondition t_68;
		effect
			LTL_property.state = 3;

	process LTL_property 
		guardBlock
			t_69 = LTL_property.state == 2,
			t_70 = Node_0.state == 2,
			t_71 = not t_70,
			t_72 = t_69 and t_71;

		guardCondition t_72;
		effect
			LTL_property.state = 2;

	process LTL_property 
		guardBlock
			t_73 = LTL_property.state == 2,
			t_74 = Token.state == 5,
			t_75 = t_73 and t_74;

		guardCondition t_75;
		effect
			LTL_property.state = 4;

	process LTL_property 
		guardBlock
			t_76 = LTL_property.state == 3,
			t_77 = Node_0.state == 2,
			t_78 = not t_77,
			t_79 = t_76 and t_78;

		guardCondition t_79;
		effect
			LTL_property.state = 5;

	process LTL_property 
		guardBlock
			t_80 = LTL_property.state == 3,
			t_81 = Token.state == 5,
			t_82 = t_80 and t_81;

		guardCondition t_82;
		effect
			LTL_property.state = 4;

	process LTL_property 
		guardBlock
			t_83 = LTL_property.state == 3,
			t_84 = Node_0.state == 2,
			t_85 = not t_84,
			t_86 = Token.state == 5,
			t_87 = not t_86,
			t_88 = t_85 and t_87,
			t_89 = t_83 and t_88;

		guardCondition t_89;
		effect
			LTL_property.state = 6;

	process LTL_property 
		guardBlock
			t_90 = LTL_property.state == 4,
			t_91 = Node_0.state == 2,
			t_92 = not t_91,
			t_93 = t_90 and t_92;

		guardCondition t_93;
		effect
			LTL_property.state = 3;

	process LTL_property 
		guardBlock
			t_94 = LTL_property.state == 4,
			t_95 = Token.state == 5,
			t_96 = t_94 and t_95;

		guardCondition t_96;
		effect
			LTL_property.state = 3;

	process LTL_property 
		guardBlock
			t_97 = LTL_property.state == 4,
			t_98 = Node_0.state == 2,
			t_99 = not t_98,
			t_100 = Token.state == 5,
			t_101 = not t_100,
			t_102 = t_99 and t_101,
			t_103 = t_97 and t_102;

		guardCondition t_103;
		effect
			LTL_property.state = 6;

	process LTL_property 
		guardBlock
			t_104 = LTL_property.state == 5,
			t_105 = Node_0.state == 2,
			t_106 = not t_105,
			t_107 = t_104 and t_106;

		guardCondition t_107;
		effect
			LTL_property.state = 5;

	process LTL_property 
		guardBlock
			t_108 = LTL_property.state == 5,
			t_109 = Token.state == 5,
			t_110 = t_108 and t_109;

		guardCondition t_110;
		effect
			LTL_property.state = 4;

	process LTL_property 
		guardBlock
			t_111 = LTL_property.state == 5,
			t_112 = Node_0.state == 2,
			t_113 = not t_112,
			t_114 = Token.state == 5,
			t_115 = not t_114,
			t_116 = t_113 and t_115,
			t_117 = t_111 and t_116;

		guardCondition t_117;
		effect
			LTL_property.state = 6;

	process LTL_property 
		guardBlock
			t_118 = LTL_property.state == 6,
			t_119 = Node_0.state == 2,
			t_120 = not t_119,
			t_121 = t_118 and t_120;

		guardCondition t_121;
		effect
			LTL_property.state = 6;

	process LTL_property 
		guardBlock
			t_122 = LTL_property.state == 6,
			t_123 = Token.state == 5,
			t_124 = t_122 and t_123;

		guardCondition t_124;
		effect
			LTL_property.state = 0;

	process Node_0_Bandwidth 
		guardBlock
			t_125 = Node_0.state == 2,
			t_126 = Bandwidth.state == 0,
			t_127 = t_125 and t_126;

		guardCondition t_127;
		effect
			Node_0.state = 8,
			Node_0.granted = 0,
			Bandwidth.i = 0,
			Bandwidth.state = 1;

	process Node_1_Bandwidth 
		guardBlock
			t_128 = Node_1.state == 2,
			t_129 = Bandwidth.state == 0,
			t_130 = t_128 and t_129;

		guardCondition t_130;
		effect
			Node_1.state = 8,
			Node_1.granted = 0,
			Bandwidth.i = 1,
			Bandwidth.state = 1;

	process Node_2_Bandwidth 
		guardBlock
			t_131 = Node_2.state == 2,
			t_132 = Bandwidth.state == 0,
			t_133 = t_131 and t_132;

		guardCondition t_133;
		effect
			Node_2.state = 8,
			Node_2.granted = 0,
			Bandwidth.i = 2,
			Bandwidth.state = 1;

	process Node_0_Bandwidth 
		guardBlock
			t_134 = Node_0.state == 3,
			t_135 = Node_0.granted == 0,
			t_136 = t_134 and t_135,
			t_137 = Bandwidth.state == 0,
			t_138 = t_136 and t_137;

		guardCondition t_138;
		effect
			Node_0.state = 4,
			Bandwidth.i = 0,
			Bandwidth.state = 2;

	process Node_1_Bandwidth 
		guardBlock
			t_139 = Node_1.state == 3,
			t_140 = Node_1.granted == 0,
			t_141 = t_139 and t_140,
			t_142 = Bandwidth.state == 0,
			t_143 = t_141 and t_142;

		guardCondition t_143;
		effect
			Node_1.state = 4,
			Bandwidth.i = 1,
			Bandwidth.state = 2;

	process Node_2_Bandwidth 
		guardBlock
			t_144 = Node_2.state == 3,
			t_145 = Node_2.granted == 0,
			t_146 = t_144 and t_145,
			t_147 = Bandwidth.state == 0,
			t_148 = t_146 and t_147;

		guardCondition t_148;
		effect
			Node_2.state = 4,
			Bandwidth.i = 2,
			Bandwidth.state = 2;

	process Token_Node_0 
		guardBlock
			t_149 = Token.state == 1,
			t_150 = Token.i == 0,
			t_151 = in_RT[Token.i],
			t_152 = t_151 == 1,
			t_153 = t_150 and t_152,
			t_154 = t_149 and t_153,
			t_155 = Node_0.state == 0,
			t_156 = t_154 and t_155;

		guardCondition t_156;
		effect
			Token.state = 2,
			Node_0.rt = 1,
			Node_0.state = 1;

	process Token_Node_0 
		guardBlock
			t_157 = Token.state == 3,
			t_158 = Token.NRT_count > 0,
			t_159 = Token.next == 0,
			t_160 = t_158 and t_159,
			t_161 = t_157 and t_160,
			t_162 = Node_0.state == 0,
			t_163 = t_161 and t_162;

		guardCondition t_163;
		effect
			Token.state = 4,
			Node_0.rt = 0,
			Node_0.state = 1;

	process Node_0_Token 
		guardBlock
			t_164 = Node_0.state == 6,
			t_165 = Token.state == 2,
			t_166 = t_164 and t_165;

		guardCondition t_166;
		effect
			Node_0.state = 0,
			Token.state = 1,
			t_167 = Token.i + 1,
			Token.i = t_167;

	process Node_0_Token 
		guardBlock
			t_168 = Node_0.state == 6,
			t_169 = Token.state == 4,
			t_170 = t_168 and t_169;

		guardCondition t_170;
		effect
			Node_0.state = 0,
			Token.state = 3,
			t_171 = Token.next + 1,
			t_172 = t_171 % 3,
			Token.next = t_172,
			t_173 = Token.NRT_count - 1,
			Token.NRT_count = t_173;

	process Node_1_Token 
		guardBlock
			t_174 = Node_1.state == 6,
			t_175 = Token.state == 2,
			t_176 = t_174 and t_175;

		guardCondition t_176;
		effect
			Node_1.state = 0,
			Token.state = 1,
			t_177 = Token.i + 1,
			Token.i = t_177;

	process Node_1_Token 
		guardBlock
			t_178 = Node_1.state == 6,
			t_179 = Token.state == 4,
			t_180 = t_178 and t_179;

		guardCondition t_180;
		effect
			Node_1.state = 0,
			Token.state = 3,
			t_181 = Token.next + 1,
			t_182 = t_181 % 3,
			Token.next = t_182,
			t_183 = Token.NRT_count - 1,
			Token.NRT_count = t_183;

	process Node_2_Token 
		guardBlock
			t_184 = Node_2.state == 6,
			t_185 = Token.state == 2,
			t_186 = t_184 and t_185;

		guardCondition t_186;
		effect
			Node_2.state = 0,
			Token.state = 1,
			t_187 = Token.i + 1,
			Token.i = t_187;

	process Node_2_Token 
		guardBlock
			t_188 = Node_2.state == 6,
			t_189 = Token.state == 4,
			t_190 = t_188 and t_189;

		guardCondition t_190;
		effect
			Node_2.state = 0,
			Token.state = 3,
			t_191 = Token.next + 1,
			t_192 = t_191 % 3,
			Token.next = t_192,
			t_193 = Token.NRT_count - 1,
			Token.NRT_count = t_193;

	process Token_Node_2 
		guardBlock
			t_194 = Token.state == 1,
			t_195 = Token.i == 2,
			t_196 = in_RT[Token.i],
			t_197 = t_196 == 1,
			t_198 = t_195 and t_197,
			t_199 = t_194 and t_198,
			t_200 = Node_2.state == 0,
			t_201 = t_199 and t_200;

		guardCondition t_201;
		effect
			Token.state = 2,
			Node_2.rt = 1,
			Node_2.state = 1;

	process Token_Node_2 
		guardBlock
			t_202 = Token.state == 3,
			t_203 = Token.NRT_count > 0,
			t_204 = Token.next == 2,
			t_205 = t_203 and t_204,
			t_206 = t_202 and t_205,
			t_207 = Node_2.state == 0,
			t_208 = t_206 and t_207;

		guardCondition t_208;
		effect
			Token.state = 4,
			Node_2.rt = 0,
			Node_2.state = 1;

	process Bandwidth_Node_0 
		guardBlock
			t_209 = Bandwidth.state == 1,
			t_210 = in_RT[Bandwidth.i],
			t_211 = t_210 == 1,
			t_212 = t_209 and t_211,
			t_213 = Node_0.state == 8,
			t_214 = t_212 and t_213;

		guardCondition t_214;
		effect
			Bandwidth.state = 0,
			in_RT[Bandwidth.i] = 0,
			t_215 = RT_count - 1,
			RT_count = t_215,
			Node_0.state = 6;

	process Bandwidth_Node_1 
		guardBlock
			t_216 = Bandwidth.state == 1,
			t_217 = in_RT[Bandwidth.i],
			t_218 = t_217 == 1,
			t_219 = t_216 and t_218,
			t_220 = Node_1.state == 8,
			t_221 = t_219 and t_220;

		guardCondition t_221;
		effect
			Bandwidth.state = 0,
			in_RT[Bandwidth.i] = 0,
			t_222 = RT_count - 1,
			RT_count = t_222,
			Node_1.state = 6;

	process Bandwidth_Node_2 
		guardBlock
			t_223 = Bandwidth.state == 1,
			t_224 = in_RT[Bandwidth.i],
			t_225 = t_224 == 1,
			t_226 = t_223 and t_225,
			t_227 = Node_2.state == 8,
			t_228 = t_226 and t_227;

		guardCondition t_228;
		effect
			Bandwidth.state = 0,
			in_RT[Bandwidth.i] = 0,
			t_229 = RT_count - 1,
			RT_count = t_229,
			Node_2.state = 6;

	process Bandwidth_Node_0 
		guardBlock
			t_230 = Bandwidth.state == 2,
			t_231 = RT_count < 2,
			t_232 = t_230 and t_231,
			t_233 = Node_0.state == 4,
			t_234 = t_232 and t_233;

		guardCondition t_234;
		effect
			Bandwidth.state = 0,
			t_235 = RT_count + 1,
			RT_count = t_235,
			in_RT[Bandwidth.i] = 1,
			Node_0.state = 5;

	process Bandwidth_Node_1 
		guardBlock
			t_236 = Bandwidth.state == 2,
			t_237 = RT_count < 2,
			t_238 = t_236 and t_237,
			t_239 = Node_1.state == 4,
			t_240 = t_238 and t_239;

		guardCondition t_240;
		effect
			Bandwidth.state = 0,
			t_241 = RT_count + 1,
			RT_count = t_241,
			in_RT[Bandwidth.i] = 1,
			Node_1.state = 5;

	process Bandwidth_Node_2 
		guardBlock
			t_242 = Bandwidth.state == 2,
			t_243 = RT_count < 2,
			t_244 = t_242 and t_243,
			t_245 = Node_2.state == 4,
			t_246 = t_244 and t_245;

		guardCondition t_246;
		effect
			Bandwidth.state = 0,
			t_247 = RT_count + 1,
			RT_count = t_247,
			in_RT[Bandwidth.i] = 1,
			Node_2.state = 5;

	process Token_Node_1 
		guardBlock
			t_248 = Token.state == 1,
			t_249 = Token.i == 1,
			t_250 = in_RT[Token.i],
			t_251 = t_250 == 1,
			t_252 = t_249 and t_251,
			t_253 = t_248 and t_252,
			t_254 = Node_1.state == 0,
			t_255 = t_253 and t_254;

		guardCondition t_255;
		effect
			Token.state = 2,
			Node_1.rt = 1,
			Node_1.state = 1;

	process Token_Node_1 
		guardBlock
			t_256 = Token.state == 3,
			t_257 = Token.NRT_count > 0,
			t_258 = Token.next == 1,
			t_259 = t_257 and t_258,
			t_260 = t_256 and t_259,
			t_261 = Node_1.state == 0,
			t_262 = t_260 and t_261;

		guardCondition t_262;
		effect
			Token.state = 4,
			Node_1.rt = 0,
			Node_1.state = 1;

	process Bandwidth_Node_0 
		guardBlock
			t_263 = Bandwidth.state == 2,
			t_264 = RT_count >= 2,
			t_265 = t_263 and t_264,
			t_266 = Node_0.state == 4,
			t_267 = t_265 and t_266;

		guardCondition t_267;
		effect
			Bandwidth.state = 0,
			Node_0.state = 6;

	process Bandwidth_Node_1 
		guardBlock
			t_268 = Bandwidth.state == 2,
			t_269 = RT_count >= 2,
			t_270 = t_268 and t_269,
			t_271 = Node_1.state == 4,
			t_272 = t_270 and t_271;

		guardCondition t_272;
		effect
			Bandwidth.state = 0,
			Node_1.state = 6;

	process Bandwidth_Node_2 
		guardBlock
			t_273 = Bandwidth.state == 2,
			t_274 = RT_count >= 2,
			t_275 = t_273 and t_274,
			t_276 = Node_2.state == 4,
			t_277 = t_275 and t_276;

		guardCondition t_277;
		effect
			Bandwidth.state = 0,
			Node_2.state = 6;

accepting conditions
	LTL_property.state == 0
	LTL_property.state == 3

system async property LTL_property;
