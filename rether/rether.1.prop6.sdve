state {idle(0), rel(1), res(2), error_st(3)} Bandwidth.state = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_0.state = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_1.state = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_2.state = 0;
state {start(0), RT_phase(1), RT_wait(2), NRT_phase(3), NRT_wait(4), cycle_end(5)} Token.state = 0;
state {q1(0), q2(1)} LTL_property.state = 0;
byte in_RT[3] = {0, 0, 0};
byte RT_count = 0;
byte Bandwidth.i = 0;
byte Node_0.rt = 0;
byte Node_0.granted = 0;
byte Node_1.rt = 0;
byte Node_1.granted = 0;
byte Node_2.rt = 0;
byte Node_2.granted = 0;
byte Token.i = 0;
byte Token.NRT_count = 5;
byte Token.next = 0;

  process Bandwidth 
    guardBlock
      temp bool t_0 = Bandwidth.state == 1,
      temp byte t_1 = in_RT[Bandwidth.i],
      temp bool t_2 = t_1 == 0,
      temp bool t_3 = t_0 and t_2;

    guardCondition t_3;
    effect
      Bandwidth.state = 3;

  process Node_0 
    guardBlock
      temp bool t_4 = Node_0.state == 1,
      temp bool t_5 = Node_0.rt == 1,
      temp bool t_6 = t_4 and t_5;

    guardCondition t_6;
    effect
      Node_0.state = 2;

  process Node_0 
    guardBlock
      temp bool t_7 = Node_0.state == 1,
      temp bool t_8 = Node_0.rt == 0,
      temp bool t_9 = t_7 and t_8;

    guardCondition t_9;
    effect
      Node_0.state = 3;

  process Node_0 
    guardBlock
      temp bool t_10 = Node_0.state == 2,
      temp bool t_11 = Node_0.granted == 0,
      temp bool t_12 = t_10 and t_11;

    guardCondition t_12;
    effect
      Node_0.state = 7;

  process Node_0 
    guardBlock
      temp bool t_13 = Node_0.state == 2;

    guardCondition t_13;
    effect
      Node_0.state = 6;

  process Node_0 
    guardBlock
      temp bool t_14 = Node_0.state == 3;

    guardCondition t_14;
    effect
      Node_0.state = 6;

  process Node_0 
    guardBlock
      temp bool t_15 = Node_0.state == 5;

    guardCondition t_15;
    effect
      Node_0.state = 6,
      Node_0.granted = 1;

  process Node_1 
    guardBlock
      temp bool t_16 = Node_1.state == 1,
      temp bool t_17 = Node_1.rt == 1,
      temp bool t_18 = t_16 and t_17;

    guardCondition t_18;
    effect
      Node_1.state = 2;

  process Node_1 
    guardBlock
      temp bool t_19 = Node_1.state == 1,
      temp bool t_20 = Node_1.rt == 0,
      temp bool t_21 = t_19 and t_20;

    guardCondition t_21;
    effect
      Node_1.state = 3;

  process Node_1 
    guardBlock
      temp bool t_22 = Node_1.state == 2,
      temp bool t_23 = Node_1.granted == 0,
      temp bool t_24 = t_22 and t_23;

    guardCondition t_24;
    effect
      Node_1.state = 7;

  process Node_1 
    guardBlock
      temp bool t_25 = Node_1.state == 2;

    guardCondition t_25;
    effect
      Node_1.state = 6;

  process Node_1 
    guardBlock
      temp bool t_26 = Node_1.state == 3;

    guardCondition t_26;
    effect
      Node_1.state = 6;

  process Node_1 
    guardBlock
      temp bool t_27 = Node_1.state == 5;

    guardCondition t_27;
    effect
      Node_1.state = 6,
      Node_1.granted = 1;

  process Node_2 
    guardBlock
      temp bool t_28 = Node_2.state == 1,
      temp bool t_29 = Node_2.rt == 1,
      temp bool t_30 = t_28 and t_29;

    guardCondition t_30;
    effect
      Node_2.state = 2;

  process Node_2 
    guardBlock
      temp bool t_31 = Node_2.state == 1,
      temp bool t_32 = Node_2.rt == 0,
      temp bool t_33 = t_31 and t_32;

    guardCondition t_33;
    effect
      Node_2.state = 3;

  process Node_2 
    guardBlock
      temp bool t_34 = Node_2.state == 2,
      temp bool t_35 = Node_2.granted == 0,
      temp bool t_36 = t_34 and t_35;

    guardCondition t_36;
    effect
      Node_2.state = 7;

  process Node_2 
    guardBlock
      temp bool t_37 = Node_2.state == 2;

    guardCondition t_37;
    effect
      Node_2.state = 6;

  process Node_2 
    guardBlock
      temp bool t_38 = Node_2.state == 3;

    guardCondition t_38;
    effect
      Node_2.state = 6;

  process Node_2 
    guardBlock
      temp bool t_39 = Node_2.state == 5;

    guardCondition t_39;
    effect
      Node_2.state = 6,
      Node_2.granted = 1;

  process Token 
    guardBlock
      temp bool t_40 = Token.state == 0;

    guardCondition t_40;
    effect
      Token.state = 1,
      Token.i = 0;

  process Token 
    guardBlock
      temp bool t_41 = Token.state == 1,
      temp bool t_42 = Token.i < 3,
      temp byte t_43 = in_RT[Token.i],
      temp bool t_44 = t_43 == 0,
      temp bool t_45 = t_42 and t_44,
      temp bool t_46 = t_41 and t_45;

    guardCondition t_46;
    effect
      Token.state = 1,
      temp byte t_47 = Token.i + 1,
      Token.i = t_47;

  process Token 
    guardBlock
      temp bool t_48 = Token.state == 1,
      temp bool t_49 = Token.i == 3,
      temp bool t_50 = t_48 and t_49;

    guardCondition t_50;
    effect
      Token.state = 3;

  process Token 
    guardBlock
      temp bool t_51 = Token.state == 3,
      temp bool t_52 = Token.NRT_count == 0,
      temp bool t_53 = t_51 and t_52;

    guardCondition t_53;
    effect
      Token.state = 5;

  process Token 
    guardBlock
      temp bool t_54 = Token.state == 5;

    guardCondition t_54;
    effect
      Token.state = 0,
      temp byte t_55 = 5 - RT_count,
      Token.NRT_count = t_55;

  process LTL_property 
    guardBlock
      temp bool t_56 = LTL_property.state == 0;

    guardCondition t_56;
    effect
      LTL_property.state = 0;

  process LTL_property 
    guardBlock
      temp bool t_57 = LTL_property.state == 0,
      temp bool t_58 = Node_0.state == 2,
      temp bool t_59 = not t_58,
      temp bool t_60 = t_57 and t_59;

    guardCondition t_60;
    effect
      LTL_property.state = 1;

  process LTL_property 
    guardBlock
      temp bool t_61 = LTL_property.state == 1,
      temp bool t_62 = Node_0.state == 2,
      temp bool t_63 = not t_62,
      temp bool t_64 = t_61 and t_63;

    guardCondition t_64;
    effect
      LTL_property.state = 1;

  process Token_Node_1 
    guardBlock
      temp bool t_65 = Token.state == 1,
      temp bool t_66 = Token.i == 1,
      temp byte t_67 = in_RT[Token.i],
      temp bool t_68 = t_67 == 1,
      temp bool t_69 = t_66 and t_68,
      temp bool t_70 = t_65 and t_69,
      temp bool t_71 = Node_1.state == 0,
      temp bool t_72 = t_70 and t_71;

    guardCondition t_72;
    effect
      Token.state = 2,
      Node_1.rt = 1,
      Node_1.state = 1;

  process Token_Node_1 
    guardBlock
      temp bool t_73 = Token.state == 3,
      temp bool t_74 = Token.NRT_count > 0,
      temp bool t_75 = Token.next == 1,
      temp bool t_76 = t_74 and t_75,
      temp bool t_77 = t_73 and t_76,
      temp bool t_78 = Node_1.state == 0,
      temp bool t_79 = t_77 and t_78;

    guardCondition t_79;
    effect
      Token.state = 4,
      Node_1.rt = 0,
      Node_1.state = 1;

  process Bandwidth_Node_0 
    guardBlock
      temp bool t_80 = Bandwidth.state == 1,
      temp byte t_81 = in_RT[Bandwidth.i],
      temp bool t_82 = t_81 == 1,
      temp bool t_83 = t_80 and t_82,
      temp bool t_84 = Node_0.state == 8,
      temp bool t_85 = t_83 and t_84;

    guardCondition t_85;
    effect
      Bandwidth.state = 0,
      in_RT[Bandwidth.i] = 0,
      temp byte t_86 = RT_count - 1,
      RT_count = t_86,
      Node_0.state = 6;

  process Bandwidth_Node_1 
    guardBlock
      temp bool t_87 = Bandwidth.state == 1,
      temp byte t_88 = in_RT[Bandwidth.i],
      temp bool t_89 = t_88 == 1,
      temp bool t_90 = t_87 and t_89,
      temp bool t_91 = Node_1.state == 8,
      temp bool t_92 = t_90 and t_91;

    guardCondition t_92;
    effect
      Bandwidth.state = 0,
      in_RT[Bandwidth.i] = 0,
      temp byte t_93 = RT_count - 1,
      RT_count = t_93,
      Node_1.state = 6;

  process Bandwidth_Node_2 
    guardBlock
      temp bool t_94 = Bandwidth.state == 1,
      temp byte t_95 = in_RT[Bandwidth.i],
      temp bool t_96 = t_95 == 1,
      temp bool t_97 = t_94 and t_96,
      temp bool t_98 = Node_2.state == 8,
      temp bool t_99 = t_97 and t_98;

    guardCondition t_99;
    effect
      Bandwidth.state = 0,
      in_RT[Bandwidth.i] = 0,
      temp byte t_100 = RT_count - 1,
      RT_count = t_100,
      Node_2.state = 6;

  process Token_Node_2 
    guardBlock
      temp bool t_101 = Token.state == 1,
      temp bool t_102 = Token.i == 2,
      temp byte t_103 = in_RT[Token.i],
      temp bool t_104 = t_103 == 1,
      temp bool t_105 = t_102 and t_104,
      temp bool t_106 = t_101 and t_105,
      temp bool t_107 = Node_2.state == 0,
      temp bool t_108 = t_106 and t_107;

    guardCondition t_108;
    effect
      Token.state = 2,
      Node_2.rt = 1,
      Node_2.state = 1;

  process Token_Node_2 
    guardBlock
      temp bool t_109 = Token.state == 3,
      temp bool t_110 = Token.NRT_count > 0,
      temp bool t_111 = Token.next == 2,
      temp bool t_112 = t_110 and t_111,
      temp bool t_113 = t_109 and t_112,
      temp bool t_114 = Node_2.state == 0,
      temp bool t_115 = t_113 and t_114;

    guardCondition t_115;
    effect
      Token.state = 4,
      Node_2.rt = 0,
      Node_2.state = 1;

  process Node_0_Bandwidth 
    guardBlock
      temp bool t_116 = Node_0.state == 2,
      temp bool t_117 = Bandwidth.state == 0,
      temp bool t_118 = t_116 and t_117;

    guardCondition t_118;
    effect
      Node_0.state = 8,
      Node_0.granted = 0,
      Bandwidth.i = 0,
      Bandwidth.state = 1;

  process Node_1_Bandwidth 
    guardBlock
      temp bool t_119 = Node_1.state == 2,
      temp bool t_120 = Bandwidth.state == 0,
      temp bool t_121 = t_119 and t_120;

    guardCondition t_121;
    effect
      Node_1.state = 8,
      Node_1.granted = 0,
      Bandwidth.i = 1,
      Bandwidth.state = 1;

  process Node_2_Bandwidth 
    guardBlock
      temp bool t_122 = Node_2.state == 2,
      temp bool t_123 = Bandwidth.state == 0,
      temp bool t_124 = t_122 and t_123;

    guardCondition t_124;
    effect
      Node_2.state = 8,
      Node_2.granted = 0,
      Bandwidth.i = 2,
      Bandwidth.state = 1;

  process Node_0_Bandwidth 
    guardBlock
      temp bool t_125 = Node_0.state == 3,
      temp bool t_126 = Node_0.granted == 0,
      temp bool t_127 = t_125 and t_126,
      temp bool t_128 = Bandwidth.state == 0,
      temp bool t_129 = t_127 and t_128;

    guardCondition t_129;
    effect
      Node_0.state = 4,
      Bandwidth.i = 0,
      Bandwidth.state = 2;

  process Node_1_Bandwidth 
    guardBlock
      temp bool t_130 = Node_1.state == 3,
      temp bool t_131 = Node_1.granted == 0,
      temp bool t_132 = t_130 and t_131,
      temp bool t_133 = Bandwidth.state == 0,
      temp bool t_134 = t_132 and t_133;

    guardCondition t_134;
    effect
      Node_1.state = 4,
      Bandwidth.i = 1,
      Bandwidth.state = 2;

  process Node_2_Bandwidth 
    guardBlock
      temp bool t_135 = Node_2.state == 3,
      temp bool t_136 = Node_2.granted == 0,
      temp bool t_137 = t_135 and t_136,
      temp bool t_138 = Bandwidth.state == 0,
      temp bool t_139 = t_137 and t_138;

    guardCondition t_139;
    effect
      Node_2.state = 4,
      Bandwidth.i = 2,
      Bandwidth.state = 2;

  process Token_Node_0 
    guardBlock
      temp bool t_140 = Token.state == 1,
      temp bool t_141 = Token.i == 0,
      temp byte t_142 = in_RT[Token.i],
      temp bool t_143 = t_142 == 1,
      temp bool t_144 = t_141 and t_143,
      temp bool t_145 = t_140 and t_144,
      temp bool t_146 = Node_0.state == 0,
      temp bool t_147 = t_145 and t_146;

    guardCondition t_147;
    effect
      Token.state = 2,
      Node_0.rt = 1,
      Node_0.state = 1;

  process Token_Node_0 
    guardBlock
      temp bool t_148 = Token.state == 3,
      temp bool t_149 = Token.NRT_count > 0,
      temp bool t_150 = Token.next == 0,
      temp bool t_151 = t_149 and t_150,
      temp bool t_152 = t_148 and t_151,
      temp bool t_153 = Node_0.state == 0,
      temp bool t_154 = t_152 and t_153;

    guardCondition t_154;
    effect
      Token.state = 4,
      Node_0.rt = 0,
      Node_0.state = 1;

  process Node_0_Token 
    guardBlock
      temp bool t_155 = Node_0.state == 6,
      temp bool t_156 = Token.state == 2,
      temp bool t_157 = t_155 and t_156;

    guardCondition t_157;
    effect
      Node_0.state = 0,
      Token.state = 1,
      temp byte t_158 = Token.i + 1,
      Token.i = t_158;

  process Node_0_Token 
    guardBlock
      temp bool t_159 = Node_0.state == 6,
      temp bool t_160 = Token.state == 4,
      temp bool t_161 = t_159 and t_160;

    guardCondition t_161;
    effect
      Node_0.state = 0,
      Token.state = 3,
      temp byte t_162 = Token.next + 1,
      temp byte t_163 = t_162 % 3,
      Token.next = t_163,
      temp byte t_164 = Token.NRT_count - 1,
      Token.NRT_count = t_164;

  process Node_1_Token 
    guardBlock
      temp bool t_165 = Node_1.state == 6,
      temp bool t_166 = Token.state == 2,
      temp bool t_167 = t_165 and t_166;

    guardCondition t_167;
    effect
      Node_1.state = 0,
      Token.state = 1,
      temp byte t_168 = Token.i + 1,
      Token.i = t_168;

  process Node_1_Token 
    guardBlock
      temp bool t_169 = Node_1.state == 6,
      temp bool t_170 = Token.state == 4,
      temp bool t_171 = t_169 and t_170;

    guardCondition t_171;
    effect
      Node_1.state = 0,
      Token.state = 3,
      temp byte t_172 = Token.next + 1,
      temp byte t_173 = t_172 % 3,
      Token.next = t_173,
      temp byte t_174 = Token.NRT_count - 1,
      Token.NRT_count = t_174;

  process Node_2_Token 
    guardBlock
      temp bool t_175 = Node_2.state == 6,
      temp bool t_176 = Token.state == 2,
      temp bool t_177 = t_175 and t_176;

    guardCondition t_177;
    effect
      Node_2.state = 0,
      Token.state = 1,
      temp byte t_178 = Token.i + 1,
      Token.i = t_178;

  process Node_2_Token 
    guardBlock
      temp bool t_179 = Node_2.state == 6,
      temp bool t_180 = Token.state == 4,
      temp bool t_181 = t_179 and t_180;

    guardCondition t_181;
    effect
      Node_2.state = 0,
      Token.state = 3,
      temp byte t_182 = Token.next + 1,
      temp byte t_183 = t_182 % 3,
      Token.next = t_183,
      temp byte t_184 = Token.NRT_count - 1,
      Token.NRT_count = t_184;

  process Bandwidth_Node_0 
    guardBlock
      temp bool t_185 = Bandwidth.state == 2,
      temp bool t_186 = RT_count < 2,
      temp bool t_187 = t_185 and t_186,
      temp bool t_188 = Node_0.state == 4,
      temp bool t_189 = t_187 and t_188;

    guardCondition t_189;
    effect
      Bandwidth.state = 0,
      temp byte t_190 = RT_count + 1,
      RT_count = t_190,
      in_RT[Bandwidth.i] = 1,
      Node_0.state = 5;

  process Bandwidth_Node_1 
    guardBlock
      temp bool t_191 = Bandwidth.state == 2,
      temp bool t_192 = RT_count < 2,
      temp bool t_193 = t_191 and t_192,
      temp bool t_194 = Node_1.state == 4,
      temp bool t_195 = t_193 and t_194;

    guardCondition t_195;
    effect
      Bandwidth.state = 0,
      temp byte t_196 = RT_count + 1,
      RT_count = t_196,
      in_RT[Bandwidth.i] = 1,
      Node_1.state = 5;

  process Bandwidth_Node_2 
    guardBlock
      temp bool t_197 = Bandwidth.state == 2,
      temp bool t_198 = RT_count < 2,
      temp bool t_199 = t_197 and t_198,
      temp bool t_200 = Node_2.state == 4,
      temp bool t_201 = t_199 and t_200;

    guardCondition t_201;
    effect
      Bandwidth.state = 0,
      temp byte t_202 = RT_count + 1,
      RT_count = t_202,
      in_RT[Bandwidth.i] = 1,
      Node_2.state = 5;

  process Bandwidth_Node_0 
    guardBlock
      temp bool t_203 = Bandwidth.state == 2,
      temp bool t_204 = RT_count >= 2,
      temp bool t_205 = t_203 and t_204,
      temp bool t_206 = Node_0.state == 4,
      temp bool t_207 = t_205 and t_206;

    guardCondition t_207;
    effect
      Bandwidth.state = 0,
      Node_0.state = 6;

  process Bandwidth_Node_1 
    guardBlock
      temp bool t_208 = Bandwidth.state == 2,
      temp bool t_209 = RT_count >= 2,
      temp bool t_210 = t_208 and t_209,
      temp bool t_211 = Node_1.state == 4,
      temp bool t_212 = t_210 and t_211;

    guardCondition t_212;
    effect
      Bandwidth.state = 0,
      Node_1.state = 6;

  process Bandwidth_Node_2 
    guardBlock
      temp bool t_213 = Bandwidth.state == 2,
      temp bool t_214 = RT_count >= 2,
      temp bool t_215 = t_213 and t_214,
      temp bool t_216 = Node_2.state == 4,
      temp bool t_217 = t_215 and t_216;

    guardCondition t_217;
    effect
      Bandwidth.state = 0,
      Node_2.state = 6;

accepting conditions
  LTL_property.state == 1

