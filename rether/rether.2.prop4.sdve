byte[4] in_RT = {0, 0, 0, 0};
byte RT_count = 0;
state {idle(0), rel(1), res(2), error_st(3)} Bandwidth.state = 0;
byte Bandwidth.i = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_0.state = 0;
byte Node_0.rt = 0;
byte Node_0.granted = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_1.state = 0;
byte Node_1.rt = 0;
byte Node_1.granted = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_2.state = 0;
byte Node_2.rt = 0;
byte Node_2.granted = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_3.state = 0;
byte Node_3.rt = 0;
byte Node_3.granted = 0;
state {start(0), RT_phase(1), RT_wait(2), NRT_phase(3), NRT_wait(4), cycle_end(5)} Token.state = 0;
byte Token.i = 0;
byte Token.NRT_count = 4;
byte Token.next = 0;
state {q1(0), q2(1), q3(2)} LTL_property.state = 1;
temp bool t_0 = false;
temp byte t_1 = 0;
temp bool t_2 = false;
temp bool t_3 = false;
temp bool t_4 = false;
temp bool t_5 = false;
temp bool t_6 = false;
temp bool t_7 = false;
temp bool t_8 = false;
temp bool t_9 = false;
temp bool t_10 = false;
temp bool t_11 = false;
temp bool t_12 = false;
temp bool t_13 = false;
temp bool t_14 = false;
temp bool t_15 = false;
temp bool t_16 = false;
temp bool t_17 = false;
temp bool t_18 = false;
temp bool t_19 = false;
temp bool t_20 = false;
temp bool t_21 = false;
temp bool t_22 = false;
temp bool t_23 = false;
temp bool t_24 = false;
temp bool t_25 = false;
temp bool t_26 = false;
temp bool t_27 = false;
temp bool t_28 = false;
temp bool t_29 = false;
temp bool t_30 = false;
temp bool t_31 = false;
temp bool t_32 = false;
temp bool t_33 = false;
temp bool t_34 = false;
temp bool t_35 = false;
temp bool t_36 = false;
temp bool t_37 = false;
temp bool t_38 = false;
temp bool t_39 = false;
temp bool t_40 = false;
temp bool t_41 = false;
temp bool t_42 = false;
temp bool t_43 = false;
temp bool t_44 = false;
temp bool t_45 = false;
temp bool t_46 = false;
temp bool t_47 = false;
temp bool t_48 = false;
temp bool t_49 = false;
temp bool t_50 = false;
temp bool t_51 = false;
temp bool t_52 = false;
temp bool t_53 = false;
temp bool t_54 = false;
temp byte t_55 = 0;
temp bool t_56 = false;
temp bool t_57 = false;
temp bool t_58 = false;
temp int t_59 = 0;
temp bool t_60 = false;
temp bool t_61 = false;
temp bool t_62 = false;
temp bool t_63 = false;
temp bool t_64 = false;
temp bool t_65 = false;
temp bool t_66 = false;
temp int t_67 = 0;
temp bool t_68 = false;
temp bool t_69 = false;
temp bool t_70 = false;
temp bool t_71 = false;
temp bool t_72 = false;
temp bool t_73 = false;
temp bool t_74 = false;
temp bool t_75 = false;
temp bool t_76 = false;
temp bool t_77 = false;
temp bool t_78 = false;
temp bool t_79 = false;
temp bool t_80 = false;
temp bool t_81 = false;
temp bool t_82 = false;
temp bool t_83 = false;
temp bool t_84 = false;
temp bool t_85 = false;
temp bool t_86 = false;
temp bool t_87 = false;
temp bool t_88 = false;
temp bool t_89 = false;
temp byte t_90 = 0;
temp bool t_91 = false;
temp bool t_92 = false;
temp bool t_93 = false;
temp bool t_94 = false;
temp bool t_95 = false;
temp bool t_96 = false;
temp bool t_97 = false;
temp bool t_98 = false;
temp bool t_99 = false;
temp bool t_100 = false;
temp bool t_101 = false;
temp bool t_102 = false;
temp bool t_103 = false;
temp byte t_104 = 0;
temp bool t_105 = false;
temp bool t_106 = false;
temp bool t_107 = false;
temp bool t_108 = false;
temp int t_109 = 0;
temp bool t_110 = false;
temp byte t_111 = 0;
temp bool t_112 = false;
temp bool t_113 = false;
temp bool t_114 = false;
temp bool t_115 = false;
temp int t_116 = 0;
temp bool t_117 = false;
temp byte t_118 = 0;
temp bool t_119 = false;
temp bool t_120 = false;
temp bool t_121 = false;
temp bool t_122 = false;
temp int t_123 = 0;
temp bool t_124 = false;
temp byte t_125 = 0;
temp bool t_126 = false;
temp bool t_127 = false;
temp bool t_128 = false;
temp bool t_129 = false;
temp int t_130 = 0;
temp bool t_131 = false;
temp bool t_132 = false;
temp bool t_133 = false;
temp bool t_134 = false;
temp bool t_135 = false;
temp bool t_136 = false;
temp bool t_137 = false;
temp bool t_138 = false;
temp bool t_139 = false;
temp bool t_140 = false;
temp bool t_141 = false;
temp bool t_142 = false;
temp bool t_143 = false;
temp bool t_144 = false;
temp bool t_145 = false;
temp bool t_146 = false;
temp bool t_147 = false;
temp bool t_148 = false;
temp bool t_149 = false;
temp bool t_150 = false;
temp bool t_151 = false;
temp bool t_152 = false;
temp bool t_153 = false;
temp bool t_154 = false;
temp bool t_155 = false;
temp int t_156 = 0;
temp bool t_157 = false;
temp bool t_158 = false;
temp bool t_159 = false;
temp bool t_160 = false;
temp bool t_161 = false;
temp int t_162 = 0;
temp bool t_163 = false;
temp bool t_164 = false;
temp bool t_165 = false;
temp bool t_166 = false;
temp bool t_167 = false;
temp int t_168 = 0;
temp bool t_169 = false;
temp bool t_170 = false;
temp bool t_171 = false;
temp bool t_172 = false;
temp bool t_173 = false;
temp int t_174 = 0;
temp bool t_175 = false;
temp bool t_176 = false;
temp bool t_177 = false;
temp int t_178 = 0;
temp bool t_179 = false;
temp bool t_180 = false;
temp bool t_181 = false;
temp int t_182 = 0;
temp int t_183 = 0;
temp int t_184 = 0;
temp bool t_185 = false;
temp bool t_186 = false;
temp bool t_187 = false;
temp int t_188 = 0;
temp bool t_189 = false;
temp bool t_190 = false;
temp bool t_191 = false;
temp int t_192 = 0;
temp int t_193 = 0;
temp int t_194 = 0;
temp bool t_195 = false;
temp bool t_196 = false;
temp bool t_197 = false;
temp int t_198 = 0;
temp bool t_199 = false;
temp bool t_200 = false;
temp bool t_201 = false;
temp int t_202 = 0;
temp int t_203 = 0;
temp int t_204 = 0;
temp bool t_205 = false;
temp bool t_206 = false;
temp bool t_207 = false;
temp int t_208 = 0;
temp bool t_209 = false;
temp bool t_210 = false;
temp bool t_211 = false;
temp int t_212 = 0;
temp int t_213 = 0;
temp int t_214 = 0;
temp bool t_215 = false;
temp bool t_216 = false;
temp byte t_217 = 0;
temp bool t_218 = false;
temp bool t_219 = false;
temp bool t_220 = false;
temp bool t_221 = false;
temp bool t_222 = false;
temp bool t_223 = false;
temp bool t_224 = false;
temp bool t_225 = false;
temp bool t_226 = false;
temp bool t_227 = false;
temp bool t_228 = false;
temp bool t_229 = false;
temp bool t_230 = false;
temp bool t_231 = false;
temp byte t_232 = 0;
temp bool t_233 = false;
temp bool t_234 = false;
temp bool t_235 = false;
temp bool t_236 = false;
temp bool t_237 = false;
temp bool t_238 = false;
temp bool t_239 = false;
temp bool t_240 = false;
temp bool t_241 = false;
temp bool t_242 = false;
temp bool t_243 = false;
temp bool t_244 = false;
temp bool t_245 = false;
temp bool t_246 = false;
temp byte t_247 = 0;
temp bool t_248 = false;
temp bool t_249 = false;
temp bool t_250 = false;
temp bool t_251 = false;
temp bool t_252 = false;
temp bool t_253 = false;
temp bool t_254 = false;
temp bool t_255 = false;
temp bool t_256 = false;
temp bool t_257 = false;
temp bool t_258 = false;
temp bool t_259 = false;
temp bool t_260 = false;
temp bool t_261 = false;
temp bool t_262 = false;
temp bool t_263 = false;
temp bool t_264 = false;
temp bool t_265 = false;
temp bool t_266 = false;
temp bool t_267 = false;
temp bool t_268 = false;
temp bool t_269 = false;
temp bool t_270 = false;
temp bool t_271 = false;
temp bool t_272 = false;
temp bool t_273 = false;
temp bool t_274 = false;
temp bool t_275 = false;
temp bool t_276 = false;
temp bool t_277 = false;
temp bool t_278 = false;
temp bool t_279 = false;
temp bool t_280 = false;
temp bool t_281 = false;
temp bool t_282 = false;
temp bool t_283 = false;
temp bool t_284 = false;
temp bool t_285 = false;
temp bool t_286 = false;
temp bool t_287 = false;
temp bool t_288 = false;
temp bool t_289 = false;
temp bool t_290 = false;
temp bool t_291 = false;
	process Bandwidth 
		guardBlock
			t_0 = Bandwidth.state == 1,
			t_1 = in_RT[Bandwidth.i],
			t_2 = t_1 == 0,
			t_3 = t_0 and t_2;

		guardCondition t_3;
		effect
			Bandwidth.state = 3;

	process Node_0 
		guardBlock
			t_4 = Node_0.state == 1,
			t_5 = Node_0.rt == 1,
			t_6 = t_4 and t_5;

		guardCondition t_6;
		effect
			Node_0.state = 2;

	process Node_0 
		guardBlock
			t_7 = Node_0.state == 1,
			t_8 = Node_0.rt == 0,
			t_9 = t_7 and t_8;

		guardCondition t_9;
		effect
			Node_0.state = 3;

	process Node_0 
		guardBlock
			t_10 = Node_0.state == 2,
			t_11 = Node_0.granted == 0,
			t_12 = t_10 and t_11;

		guardCondition t_12;
		effect
			Node_0.state = 7;

	process Node_0 
		guardBlock
			t_13 = Node_0.state == 2;

		guardCondition t_13;
		effect
			Node_0.state = 6;

	process Node_0 
		guardBlock
			t_14 = Node_0.state == 3;

		guardCondition t_14;
		effect
			Node_0.state = 6;

	process Node_0 
		guardBlock
			t_15 = Node_0.state == 5;

		guardCondition t_15;
		effect
			Node_0.state = 6,
			Node_0.granted = 1;

	process Node_1 
		guardBlock
			t_16 = Node_1.state == 1,
			t_17 = Node_1.rt == 1,
			t_18 = t_16 and t_17;

		guardCondition t_18;
		effect
			Node_1.state = 2;

	process Node_1 
		guardBlock
			t_19 = Node_1.state == 1,
			t_20 = Node_1.rt == 0,
			t_21 = t_19 and t_20;

		guardCondition t_21;
		effect
			Node_1.state = 3;

	process Node_1 
		guardBlock
			t_22 = Node_1.state == 2,
			t_23 = Node_1.granted == 0,
			t_24 = t_22 and t_23;

		guardCondition t_24;
		effect
			Node_1.state = 7;

	process Node_1 
		guardBlock
			t_25 = Node_1.state == 2;

		guardCondition t_25;
		effect
			Node_1.state = 6;

	process Node_1 
		guardBlock
			t_26 = Node_1.state == 3;

		guardCondition t_26;
		effect
			Node_1.state = 6;

	process Node_1 
		guardBlock
			t_27 = Node_1.state == 5;

		guardCondition t_27;
		effect
			Node_1.state = 6,
			Node_1.granted = 1;

	process Node_2 
		guardBlock
			t_28 = Node_2.state == 1,
			t_29 = Node_2.rt == 1,
			t_30 = t_28 and t_29;

		guardCondition t_30;
		effect
			Node_2.state = 2;

	process Node_2 
		guardBlock
			t_31 = Node_2.state == 1,
			t_32 = Node_2.rt == 0,
			t_33 = t_31 and t_32;

		guardCondition t_33;
		effect
			Node_2.state = 3;

	process Node_2 
		guardBlock
			t_34 = Node_2.state == 2,
			t_35 = Node_2.granted == 0,
			t_36 = t_34 and t_35;

		guardCondition t_36;
		effect
			Node_2.state = 7;

	process Node_2 
		guardBlock
			t_37 = Node_2.state == 2;

		guardCondition t_37;
		effect
			Node_2.state = 6;

	process Node_2 
		guardBlock
			t_38 = Node_2.state == 3;

		guardCondition t_38;
		effect
			Node_2.state = 6;

	process Node_2 
		guardBlock
			t_39 = Node_2.state == 5;

		guardCondition t_39;
		effect
			Node_2.state = 6,
			Node_2.granted = 1;

	process Node_3 
		guardBlock
			t_40 = Node_3.state == 1,
			t_41 = Node_3.rt == 1,
			t_42 = t_40 and t_41;

		guardCondition t_42;
		effect
			Node_3.state = 2;

	process Node_3 
		guardBlock
			t_43 = Node_3.state == 1,
			t_44 = Node_3.rt == 0,
			t_45 = t_43 and t_44;

		guardCondition t_45;
		effect
			Node_3.state = 3;

	process Node_3 
		guardBlock
			t_46 = Node_3.state == 2,
			t_47 = Node_3.granted == 0,
			t_48 = t_46 and t_47;

		guardCondition t_48;
		effect
			Node_3.state = 7;

	process Node_3 
		guardBlock
			t_49 = Node_3.state == 2;

		guardCondition t_49;
		effect
			Node_3.state = 6;

	process Node_3 
		guardBlock
			t_50 = Node_3.state == 3;

		guardCondition t_50;
		effect
			Node_3.state = 6;

	process Node_3 
		guardBlock
			t_51 = Node_3.state == 5;

		guardCondition t_51;
		effect
			Node_3.state = 6,
			Node_3.granted = 1;

	process Token 
		guardBlock
			t_52 = Token.state == 0;

		guardCondition t_52;
		effect
			Token.state = 1,
			Token.i = 0;

	process Token 
		guardBlock
			t_53 = Token.state == 1,
			t_54 = Token.i < 4,
			t_55 = in_RT[Token.i],
			t_56 = t_55 == 0,
			t_57 = t_54 and t_56,
			t_58 = t_53 and t_57;

		guardCondition t_58;
		effect
			Token.state = 1,
			t_59 = Token.i + 1,
			Token.i = t_59;

	process Token 
		guardBlock
			t_60 = Token.state == 1,
			t_61 = Token.i == 4,
			t_62 = t_60 and t_61;

		guardCondition t_62;
		effect
			Token.state = 3;

	process Token 
		guardBlock
			t_63 = Token.state == 3,
			t_64 = Token.NRT_count == 0,
			t_65 = t_63 and t_64;

		guardCondition t_65;
		effect
			Token.state = 5;

	process Token 
		guardBlock
			t_66 = Token.state == 5;

		guardCondition t_66;
		effect
			Token.state = 0,
			t_67 = 4 - RT_count,
			Token.NRT_count = t_67;

	process LTL_property 
		guardBlock
			t_68 = LTL_property.state == 0;

		guardCondition t_68;
		effect
			LTL_property.state = 0;

	process LTL_property 
		guardBlock
			t_69 = LTL_property.state == 1;

		guardCondition t_69;
		effect
			LTL_property.state = 1;

	process LTL_property 
		guardBlock
			t_70 = LTL_property.state == 1,
			t_71 = Node_0.state == 5,
			t_72 = Node_0.state == 2,
			t_73 = not t_72,
			t_74 = t_71 and t_73,
			t_75 = t_70 and t_74;

		guardCondition t_75;
		effect
			LTL_property.state = 2;

	process LTL_property 
		guardBlock
			t_76 = LTL_property.state == 1,
			t_77 = Node_0.state == 5,
			t_78 = Token.state == 5,
			t_79 = t_77 and t_78,
			t_80 = t_76 and t_79;

		guardCondition t_80;
		effect
			LTL_property.state = 0;

	process LTL_property 
		guardBlock
			t_81 = LTL_property.state == 2,
			t_82 = Node_0.state == 2,
			t_83 = not t_82,
			t_84 = t_81 and t_83;

		guardCondition t_84;
		effect
			LTL_property.state = 2;

	process LTL_property 
		guardBlock
			t_85 = LTL_property.state == 2,
			t_86 = Token.state == 5,
			t_87 = t_85 and t_86;

		guardCondition t_87;
		effect
			LTL_property.state = 0;

	process Token_Node_1 
		guardBlock
			t_88 = Token.state == 1,
			t_89 = Token.i == 1,
			t_90 = in_RT[Token.i],
			t_91 = t_90 == 1,
			t_92 = t_89 and t_91,
			t_93 = t_88 and t_92,
			t_94 = Node_1.state == 0,
			t_95 = t_93 and t_94;

		guardCondition t_95;
		effect
			Token.state = 2,
			Node_1.rt = 1,
			Node_1.state = 1;

	process Token_Node_1 
		guardBlock
			t_96 = Token.state == 3,
			t_97 = Token.NRT_count > 0,
			t_98 = Token.next == 1,
			t_99 = t_97 and t_98,
			t_100 = t_96 and t_99,
			t_101 = Node_1.state == 0,
			t_102 = t_100 and t_101;

		guardCondition t_102;
		effect
			Token.state = 4,
			Node_1.rt = 0,
			Node_1.state = 1;

	process Bandwidth_Node_0 
		guardBlock
			t_103 = Bandwidth.state == 1,
			t_104 = in_RT[Bandwidth.i],
			t_105 = t_104 == 1,
			t_106 = t_103 and t_105,
			t_107 = Node_0.state == 8,
			t_108 = t_106 and t_107;

		guardCondition t_108;
		effect
			Bandwidth.state = 0,
			in_RT[Bandwidth.i] = 0,
			t_109 = RT_count - 1,
			RT_count = t_109,
			Node_0.state = 6;

	process Bandwidth_Node_1 
		guardBlock
			t_110 = Bandwidth.state == 1,
			t_111 = in_RT[Bandwidth.i],
			t_112 = t_111 == 1,
			t_113 = t_110 and t_112,
			t_114 = Node_1.state == 8,
			t_115 = t_113 and t_114;

		guardCondition t_115;
		effect
			Bandwidth.state = 0,
			in_RT[Bandwidth.i] = 0,
			t_116 = RT_count - 1,
			RT_count = t_116,
			Node_1.state = 6;

	process Bandwidth_Node_2 
		guardBlock
			t_117 = Bandwidth.state == 1,
			t_118 = in_RT[Bandwidth.i],
			t_119 = t_118 == 1,
			t_120 = t_117 and t_119,
			t_121 = Node_2.state == 8,
			t_122 = t_120 and t_121;

		guardCondition t_122;
		effect
			Bandwidth.state = 0,
			in_RT[Bandwidth.i] = 0,
			t_123 = RT_count - 1,
			RT_count = t_123,
			Node_2.state = 6;

	process Bandwidth_Node_3 
		guardBlock
			t_124 = Bandwidth.state == 1,
			t_125 = in_RT[Bandwidth.i],
			t_126 = t_125 == 1,
			t_127 = t_124 and t_126,
			t_128 = Node_3.state == 8,
			t_129 = t_127 and t_128;

		guardCondition t_129;
		effect
			Bandwidth.state = 0,
			in_RT[Bandwidth.i] = 0,
			t_130 = RT_count - 1,
			RT_count = t_130,
			Node_3.state = 6;

	process Bandwidth_Node_0 
		guardBlock
			t_131 = Bandwidth.state == 2,
			t_132 = RT_count >= 2,
			t_133 = t_131 and t_132,
			t_134 = Node_0.state == 4,
			t_135 = t_133 and t_134;

		guardCondition t_135;
		effect
			Bandwidth.state = 0,
			Node_0.state = 6;

	process Bandwidth_Node_1 
		guardBlock
			t_136 = Bandwidth.state == 2,
			t_137 = RT_count >= 2,
			t_138 = t_136 and t_137,
			t_139 = Node_1.state == 4,
			t_140 = t_138 and t_139;

		guardCondition t_140;
		effect
			Bandwidth.state = 0,
			Node_1.state = 6;

	process Bandwidth_Node_2 
		guardBlock
			t_141 = Bandwidth.state == 2,
			t_142 = RT_count >= 2,
			t_143 = t_141 and t_142,
			t_144 = Node_2.state == 4,
			t_145 = t_143 and t_144;

		guardCondition t_145;
		effect
			Bandwidth.state = 0,
			Node_2.state = 6;

	process Bandwidth_Node_3 
		guardBlock
			t_146 = Bandwidth.state == 2,
			t_147 = RT_count >= 2,
			t_148 = t_146 and t_147,
			t_149 = Node_3.state == 4,
			t_150 = t_148 and t_149;

		guardCondition t_150;
		effect
			Bandwidth.state = 0,
			Node_3.state = 6;

	process Bandwidth_Node_0 
		guardBlock
			t_151 = Bandwidth.state == 2,
			t_152 = RT_count < 2,
			t_153 = t_151 and t_152,
			t_154 = Node_0.state == 4,
			t_155 = t_153 and t_154;

		guardCondition t_155;
		effect
			Bandwidth.state = 0,
			t_156 = RT_count + 1,
			RT_count = t_156,
			in_RT[Bandwidth.i] = 1,
			Node_0.state = 5;

	process Bandwidth_Node_1 
		guardBlock
			t_157 = Bandwidth.state == 2,
			t_158 = RT_count < 2,
			t_159 = t_157 and t_158,
			t_160 = Node_1.state == 4,
			t_161 = t_159 and t_160;

		guardCondition t_161;
		effect
			Bandwidth.state = 0,
			t_162 = RT_count + 1,
			RT_count = t_162,
			in_RT[Bandwidth.i] = 1,
			Node_1.state = 5;

	process Bandwidth_Node_2 
		guardBlock
			t_163 = Bandwidth.state == 2,
			t_164 = RT_count < 2,
			t_165 = t_163 and t_164,
			t_166 = Node_2.state == 4,
			t_167 = t_165 and t_166;

		guardCondition t_167;
		effect
			Bandwidth.state = 0,
			t_168 = RT_count + 1,
			RT_count = t_168,
			in_RT[Bandwidth.i] = 1,
			Node_2.state = 5;

	process Bandwidth_Node_3 
		guardBlock
			t_169 = Bandwidth.state == 2,
			t_170 = RT_count < 2,
			t_171 = t_169 and t_170,
			t_172 = Node_3.state == 4,
			t_173 = t_171 and t_172;

		guardCondition t_173;
		effect
			Bandwidth.state = 0,
			t_174 = RT_count + 1,
			RT_count = t_174,
			in_RT[Bandwidth.i] = 1,
			Node_3.state = 5;

	process Node_0_Token 
		guardBlock
			t_175 = Node_0.state == 6,
			t_176 = Token.state == 2,
			t_177 = t_175 and t_176;

		guardCondition t_177;
		effect
			Node_0.state = 0,
			Token.state = 1,
			t_178 = Token.i + 1,
			Token.i = t_178;

	process Node_0_Token 
		guardBlock
			t_179 = Node_0.state == 6,
			t_180 = Token.state == 4,
			t_181 = t_179 and t_180;

		guardCondition t_181;
		effect
			Node_0.state = 0,
			Token.state = 3,
			t_182 = Token.next + 1,
			t_183 = t_182 % 4,
			Token.next = t_183,
			t_184 = Token.NRT_count - 1,
			Token.NRT_count = t_184;

	process Node_1_Token 
		guardBlock
			t_185 = Node_1.state == 6,
			t_186 = Token.state == 2,
			t_187 = t_185 and t_186;

		guardCondition t_187;
		effect
			Node_1.state = 0,
			Token.state = 1,
			t_188 = Token.i + 1,
			Token.i = t_188;

	process Node_1_Token 
		guardBlock
			t_189 = Node_1.state == 6,
			t_190 = Token.state == 4,
			t_191 = t_189 and t_190;

		guardCondition t_191;
		effect
			Node_1.state = 0,
			Token.state = 3,
			t_192 = Token.next + 1,
			t_193 = t_192 % 4,
			Token.next = t_193,
			t_194 = Token.NRT_count - 1,
			Token.NRT_count = t_194;

	process Node_2_Token 
		guardBlock
			t_195 = Node_2.state == 6,
			t_196 = Token.state == 2,
			t_197 = t_195 and t_196;

		guardCondition t_197;
		effect
			Node_2.state = 0,
			Token.state = 1,
			t_198 = Token.i + 1,
			Token.i = t_198;

	process Node_2_Token 
		guardBlock
			t_199 = Node_2.state == 6,
			t_200 = Token.state == 4,
			t_201 = t_199 and t_200;

		guardCondition t_201;
		effect
			Node_2.state = 0,
			Token.state = 3,
			t_202 = Token.next + 1,
			t_203 = t_202 % 4,
			Token.next = t_203,
			t_204 = Token.NRT_count - 1,
			Token.NRT_count = t_204;

	process Node_3_Token 
		guardBlock
			t_205 = Node_3.state == 6,
			t_206 = Token.state == 2,
			t_207 = t_205 and t_206;

		guardCondition t_207;
		effect
			Node_3.state = 0,
			Token.state = 1,
			t_208 = Token.i + 1,
			Token.i = t_208;

	process Node_3_Token 
		guardBlock
			t_209 = Node_3.state == 6,
			t_210 = Token.state == 4,
			t_211 = t_209 and t_210;

		guardCondition t_211;
		effect
			Node_3.state = 0,
			Token.state = 3,
			t_212 = Token.next + 1,
			t_213 = t_212 % 4,
			Token.next = t_213,
			t_214 = Token.NRT_count - 1,
			Token.NRT_count = t_214;

	process Token_Node_2 
		guardBlock
			t_215 = Token.state == 1,
			t_216 = Token.i == 2,
			t_217 = in_RT[Token.i],
			t_218 = t_217 == 1,
			t_219 = t_216 and t_218,
			t_220 = t_215 and t_219,
			t_221 = Node_2.state == 0,
			t_222 = t_220 and t_221;

		guardCondition t_222;
		effect
			Token.state = 2,
			Node_2.rt = 1,
			Node_2.state = 1;

	process Token_Node_2 
		guardBlock
			t_223 = Token.state == 3,
			t_224 = Token.NRT_count > 0,
			t_225 = Token.next == 2,
			t_226 = t_224 and t_225,
			t_227 = t_223 and t_226,
			t_228 = Node_2.state == 0,
			t_229 = t_227 and t_228;

		guardCondition t_229;
		effect
			Token.state = 4,
			Node_2.rt = 0,
			Node_2.state = 1;

	process Token_Node_0 
		guardBlock
			t_230 = Token.state == 1,
			t_231 = Token.i == 0,
			t_232 = in_RT[Token.i],
			t_233 = t_232 == 1,
			t_234 = t_231 and t_233,
			t_235 = t_230 and t_234,
			t_236 = Node_0.state == 0,
			t_237 = t_235 and t_236;

		guardCondition t_237;
		effect
			Token.state = 2,
			Node_0.rt = 1,
			Node_0.state = 1;

	process Token_Node_0 
		guardBlock
			t_238 = Token.state == 3,
			t_239 = Token.NRT_count > 0,
			t_240 = Token.next == 0,
			t_241 = t_239 and t_240,
			t_242 = t_238 and t_241,
			t_243 = Node_0.state == 0,
			t_244 = t_242 and t_243;

		guardCondition t_244;
		effect
			Token.state = 4,
			Node_0.rt = 0,
			Node_0.state = 1;

	process Token_Node_3 
		guardBlock
			t_245 = Token.state == 1,
			t_246 = Token.i == 3,
			t_247 = in_RT[Token.i],
			t_248 = t_247 == 1,
			t_249 = t_246 and t_248,
			t_250 = t_245 and t_249,
			t_251 = Node_3.state == 0,
			t_252 = t_250 and t_251;

		guardCondition t_252;
		effect
			Token.state = 2,
			Node_3.rt = 1,
			Node_3.state = 1;

	process Token_Node_3 
		guardBlock
			t_253 = Token.state == 3,
			t_254 = Token.NRT_count > 0,
			t_255 = Token.next == 3,
			t_256 = t_254 and t_255,
			t_257 = t_253 and t_256,
			t_258 = Node_3.state == 0,
			t_259 = t_257 and t_258;

		guardCondition t_259;
		effect
			Token.state = 4,
			Node_3.rt = 0,
			Node_3.state = 1;

	process Node_0_Bandwidth 
		guardBlock
			t_260 = Node_0.state == 2,
			t_261 = Bandwidth.state == 0,
			t_262 = t_260 and t_261;

		guardCondition t_262;
		effect
			Node_0.state = 8,
			Node_0.granted = 0,
			Bandwidth.i = 0,
			Bandwidth.state = 1;

	process Node_1_Bandwidth 
		guardBlock
			t_263 = Node_1.state == 2,
			t_264 = Bandwidth.state == 0,
			t_265 = t_263 and t_264;

		guardCondition t_265;
		effect
			Node_1.state = 8,
			Node_1.granted = 0,
			Bandwidth.i = 1,
			Bandwidth.state = 1;

	process Node_2_Bandwidth 
		guardBlock
			t_266 = Node_2.state == 2,
			t_267 = Bandwidth.state == 0,
			t_268 = t_266 and t_267;

		guardCondition t_268;
		effect
			Node_2.state = 8,
			Node_2.granted = 0,
			Bandwidth.i = 2,
			Bandwidth.state = 1;

	process Node_3_Bandwidth 
		guardBlock
			t_269 = Node_3.state == 2,
			t_270 = Bandwidth.state == 0,
			t_271 = t_269 and t_270;

		guardCondition t_271;
		effect
			Node_3.state = 8,
			Node_3.granted = 0,
			Bandwidth.i = 3,
			Bandwidth.state = 1;

	process Node_0_Bandwidth 
		guardBlock
			t_272 = Node_0.state == 3,
			t_273 = Node_0.granted == 0,
			t_274 = t_272 and t_273,
			t_275 = Bandwidth.state == 0,
			t_276 = t_274 and t_275;

		guardCondition t_276;
		effect
			Node_0.state = 4,
			Bandwidth.i = 0,
			Bandwidth.state = 2;

	process Node_1_Bandwidth 
		guardBlock
			t_277 = Node_1.state == 3,
			t_278 = Node_1.granted == 0,
			t_279 = t_277 and t_278,
			t_280 = Bandwidth.state == 0,
			t_281 = t_279 and t_280;

		guardCondition t_281;
		effect
			Node_1.state = 4,
			Bandwidth.i = 1,
			Bandwidth.state = 2;

	process Node_2_Bandwidth 
		guardBlock
			t_282 = Node_2.state == 3,
			t_283 = Node_2.granted == 0,
			t_284 = t_282 and t_283,
			t_285 = Bandwidth.state == 0,
			t_286 = t_284 and t_285;

		guardCondition t_286;
		effect
			Node_2.state = 4,
			Bandwidth.i = 2,
			Bandwidth.state = 2;

	process Node_3_Bandwidth 
		guardBlock
			t_287 = Node_3.state == 3,
			t_288 = Node_3.granted == 0,
			t_289 = t_287 and t_288,
			t_290 = Bandwidth.state == 0,
			t_291 = t_289 and t_290;

		guardCondition t_291;
		effect
			Node_3.state = 4,
			Bandwidth.i = 3,
			Bandwidth.state = 2;

accepting conditions
	LTL_property.state == 0

system async property LTL_property;
