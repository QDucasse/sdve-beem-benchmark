state {idle(0), rel(1), res(2), error_st(3)} Bandwidth.state = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_0.state = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_1.state = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_2.state = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_3.state = 0;
state {start(0), RT_phase(1), RT_wait(2), NRT_phase(3), NRT_wait(4), cycle_end(5)} Token.state = 0;
state {q1(0), q2(1), q3(2)} LTL_property.state = 1;
byte in_RT[4] = {0, 0, 0, 0};
byte RT_count = 0;
byte Bandwidth.i = 0;
byte Node_0.rt = 0;
byte Node_0.granted = 0;
byte Node_1.rt = 0;
byte Node_1.granted = 0;
byte Node_2.rt = 0;
byte Node_2.granted = 0;
byte Node_3.rt = 0;
byte Node_3.granted = 0;
byte Token.i = 0;
byte Token.NRT_count = 4;
byte Token.next = 0;

  process Bandwidth 
    guardBlock
      temp bool t_0 = Bandwidth.state == 1,
      temp byte t_1 = in_RT[Bandwidth.i],
      temp bool t_2 = t_1 == 0,
      temp bool t_3 = t_0 and t_2;

    guardCondition t_3;
    effect
      Bandwidth.state = 3;

  process Node_0 
    guardBlock
      temp bool t_4 = Node_0.state == 1,
      temp bool t_5 = Node_0.rt == 1,
      temp bool t_6 = t_4 and t_5;

    guardCondition t_6;
    effect
      Node_0.state = 2;

  process Node_0 
    guardBlock
      temp bool t_7 = Node_0.state == 1,
      temp bool t_8 = Node_0.rt == 0,
      temp bool t_9 = t_7 and t_8;

    guardCondition t_9;
    effect
      Node_0.state = 3;

  process Node_0 
    guardBlock
      temp bool t_10 = Node_0.state == 2,
      temp bool t_11 = Node_0.granted == 0,
      temp bool t_12 = t_10 and t_11;

    guardCondition t_12;
    effect
      Node_0.state = 7;

  process Node_0 
    guardBlock
      temp bool t_13 = Node_0.state == 2;

    guardCondition t_13;
    effect
      Node_0.state = 6;

  process Node_0 
    guardBlock
      temp bool t_14 = Node_0.state == 3;

    guardCondition t_14;
    effect
      Node_0.state = 6;

  process Node_0 
    guardBlock
      temp bool t_15 = Node_0.state == 5;

    guardCondition t_15;
    effect
      Node_0.state = 6,
      Node_0.granted = 1;

  process Node_1 
    guardBlock
      temp bool t_16 = Node_1.state == 1,
      temp bool t_17 = Node_1.rt == 1,
      temp bool t_18 = t_16 and t_17;

    guardCondition t_18;
    effect
      Node_1.state = 2;

  process Node_1 
    guardBlock
      temp bool t_19 = Node_1.state == 1,
      temp bool t_20 = Node_1.rt == 0,
      temp bool t_21 = t_19 and t_20;

    guardCondition t_21;
    effect
      Node_1.state = 3;

  process Node_1 
    guardBlock
      temp bool t_22 = Node_1.state == 2,
      temp bool t_23 = Node_1.granted == 0,
      temp bool t_24 = t_22 and t_23;

    guardCondition t_24;
    effect
      Node_1.state = 7;

  process Node_1 
    guardBlock
      temp bool t_25 = Node_1.state == 2;

    guardCondition t_25;
    effect
      Node_1.state = 6;

  process Node_1 
    guardBlock
      temp bool t_26 = Node_1.state == 3;

    guardCondition t_26;
    effect
      Node_1.state = 6;

  process Node_1 
    guardBlock
      temp bool t_27 = Node_1.state == 5;

    guardCondition t_27;
    effect
      Node_1.state = 6,
      Node_1.granted = 1;

  process Node_2 
    guardBlock
      temp bool t_28 = Node_2.state == 1,
      temp bool t_29 = Node_2.rt == 1,
      temp bool t_30 = t_28 and t_29;

    guardCondition t_30;
    effect
      Node_2.state = 2;

  process Node_2 
    guardBlock
      temp bool t_31 = Node_2.state == 1,
      temp bool t_32 = Node_2.rt == 0,
      temp bool t_33 = t_31 and t_32;

    guardCondition t_33;
    effect
      Node_2.state = 3;

  process Node_2 
    guardBlock
      temp bool t_34 = Node_2.state == 2,
      temp bool t_35 = Node_2.granted == 0,
      temp bool t_36 = t_34 and t_35;

    guardCondition t_36;
    effect
      Node_2.state = 7;

  process Node_2 
    guardBlock
      temp bool t_37 = Node_2.state == 2;

    guardCondition t_37;
    effect
      Node_2.state = 6;

  process Node_2 
    guardBlock
      temp bool t_38 = Node_2.state == 3;

    guardCondition t_38;
    effect
      Node_2.state = 6;

  process Node_2 
    guardBlock
      temp bool t_39 = Node_2.state == 5;

    guardCondition t_39;
    effect
      Node_2.state = 6,
      Node_2.granted = 1;

  process Node_3 
    guardBlock
      temp bool t_40 = Node_3.state == 1,
      temp bool t_41 = Node_3.rt == 1,
      temp bool t_42 = t_40 and t_41;

    guardCondition t_42;
    effect
      Node_3.state = 2;

  process Node_3 
    guardBlock
      temp bool t_43 = Node_3.state == 1,
      temp bool t_44 = Node_3.rt == 0,
      temp bool t_45 = t_43 and t_44;

    guardCondition t_45;
    effect
      Node_3.state = 3;

  process Node_3 
    guardBlock
      temp bool t_46 = Node_3.state == 2,
      temp bool t_47 = Node_3.granted == 0,
      temp bool t_48 = t_46 and t_47;

    guardCondition t_48;
    effect
      Node_3.state = 7;

  process Node_3 
    guardBlock
      temp bool t_49 = Node_3.state == 2;

    guardCondition t_49;
    effect
      Node_3.state = 6;

  process Node_3 
    guardBlock
      temp bool t_50 = Node_3.state == 3;

    guardCondition t_50;
    effect
      Node_3.state = 6;

  process Node_3 
    guardBlock
      temp bool t_51 = Node_3.state == 5;

    guardCondition t_51;
    effect
      Node_3.state = 6,
      Node_3.granted = 1;

  process Token 
    guardBlock
      temp bool t_52 = Token.state == 0;

    guardCondition t_52;
    effect
      Token.state = 1,
      Token.i = 0;

  process Token 
    guardBlock
      temp bool t_53 = Token.state == 1,
      temp bool t_54 = Token.i < 4,
      temp byte t_55 = in_RT[Token.i],
      temp bool t_56 = t_55 == 0,
      temp bool t_57 = t_54 and t_56,
      temp bool t_58 = t_53 and t_57;

    guardCondition t_58;
    effect
      Token.state = 1,
      temp byte t_59 = Token.i + 1,
      Token.i = t_59;

  process Token 
    guardBlock
      temp bool t_60 = Token.state == 1,
      temp bool t_61 = Token.i == 4,
      temp bool t_62 = t_60 and t_61;

    guardCondition t_62;
    effect
      Token.state = 3;

  process Token 
    guardBlock
      temp bool t_63 = Token.state == 3,
      temp bool t_64 = Token.NRT_count == 0,
      temp bool t_65 = t_63 and t_64;

    guardCondition t_65;
    effect
      Token.state = 5;

  process Token 
    guardBlock
      temp bool t_66 = Token.state == 5;

    guardCondition t_66;
    effect
      Token.state = 0,
      temp byte t_67 = 4 - RT_count,
      Token.NRT_count = t_67;

  process LTL_property 
    guardBlock
      temp bool t_68 = LTL_property.state == 0;

    guardCondition t_68;
    effect
      LTL_property.state = 0;

  process LTL_property 
    guardBlock
      temp bool t_69 = LTL_property.state == 1;

    guardCondition t_69;
    effect
      LTL_property.state = 1;

  process LTL_property 
    guardBlock
      temp bool t_70 = LTL_property.state == 1,
      temp bool t_71 = Node_0.state == 5,
      temp bool t_72 = Node_0.state == 2,
      temp bool t_73 = not t_72,
      temp bool t_74 = t_71 and t_73,
      temp bool t_75 = t_70 and t_74;

    guardCondition t_75;
    effect
      LTL_property.state = 2;

  process LTL_property 
    guardBlock
      temp bool t_76 = LTL_property.state == 1,
      temp bool t_77 = Node_0.state == 5,
      temp bool t_78 = Token.state == 5,
      temp bool t_79 = t_77 and t_78,
      temp bool t_80 = t_76 and t_79;

    guardCondition t_80;
    effect
      LTL_property.state = 0;

  process LTL_property 
    guardBlock
      temp bool t_81 = LTL_property.state == 2,
      temp bool t_82 = Node_0.state == 2,
      temp bool t_83 = not t_82,
      temp bool t_84 = t_81 and t_83;

    guardCondition t_84;
    effect
      LTL_property.state = 2;

  process LTL_property 
    guardBlock
      temp bool t_85 = LTL_property.state == 2,
      temp bool t_86 = Token.state == 5,
      temp bool t_87 = t_85 and t_86;

    guardCondition t_87;
    effect
      LTL_property.state = 0;

  process Bandwidth_Node_0 
    guardBlock
      temp bool t_88 = Bandwidth.state == 1,
      temp byte t_89 = in_RT[Bandwidth.i],
      temp bool t_90 = t_89 == 1,
      temp bool t_91 = t_88 and t_90,
      temp bool t_92 = Node_0.state == 8,
      temp bool t_93 = t_91 and t_92;

    guardCondition t_93;
    effect
      Bandwidth.state = 0,
      in_RT[Bandwidth.i] = 0,
      temp byte t_94 = RT_count - 1,
      RT_count = t_94,
      Node_0.state = 6;

  process Bandwidth_Node_1 
    guardBlock
      temp bool t_95 = Bandwidth.state == 1,
      temp byte t_96 = in_RT[Bandwidth.i],
      temp bool t_97 = t_96 == 1,
      temp bool t_98 = t_95 and t_97,
      temp bool t_99 = Node_1.state == 8,
      temp bool t_100 = t_98 and t_99;

    guardCondition t_100;
    effect
      Bandwidth.state = 0,
      in_RT[Bandwidth.i] = 0,
      temp byte t_101 = RT_count - 1,
      RT_count = t_101,
      Node_1.state = 6;

  process Bandwidth_Node_2 
    guardBlock
      temp bool t_102 = Bandwidth.state == 1,
      temp byte t_103 = in_RT[Bandwidth.i],
      temp bool t_104 = t_103 == 1,
      temp bool t_105 = t_102 and t_104,
      temp bool t_106 = Node_2.state == 8,
      temp bool t_107 = t_105 and t_106;

    guardCondition t_107;
    effect
      Bandwidth.state = 0,
      in_RT[Bandwidth.i] = 0,
      temp byte t_108 = RT_count - 1,
      RT_count = t_108,
      Node_2.state = 6;

  process Bandwidth_Node_3 
    guardBlock
      temp bool t_109 = Bandwidth.state == 1,
      temp byte t_110 = in_RT[Bandwidth.i],
      temp bool t_111 = t_110 == 1,
      temp bool t_112 = t_109 and t_111,
      temp bool t_113 = Node_3.state == 8,
      temp bool t_114 = t_112 and t_113;

    guardCondition t_114;
    effect
      Bandwidth.state = 0,
      in_RT[Bandwidth.i] = 0,
      temp byte t_115 = RT_count - 1,
      RT_count = t_115,
      Node_3.state = 6;

  process Token_Node_0 
    guardBlock
      temp bool t_116 = Token.state == 1,
      temp bool t_117 = Token.i == 0,
      temp byte t_118 = in_RT[Token.i],
      temp bool t_119 = t_118 == 1,
      temp bool t_120 = t_117 and t_119,
      temp bool t_121 = t_116 and t_120,
      temp bool t_122 = Node_0.state == 0,
      temp bool t_123 = t_121 and t_122;

    guardCondition t_123;
    effect
      Token.state = 2,
      Node_0.rt = 1,
      Node_0.state = 1;

  process Token_Node_0 
    guardBlock
      temp bool t_124 = Token.state == 3,
      temp bool t_125 = Token.NRT_count > 0,
      temp bool t_126 = Token.next == 0,
      temp bool t_127 = t_125 and t_126,
      temp bool t_128 = t_124 and t_127,
      temp bool t_129 = Node_0.state == 0,
      temp bool t_130 = t_128 and t_129;

    guardCondition t_130;
    effect
      Token.state = 4,
      Node_0.rt = 0,
      Node_0.state = 1;

  process Node_0_Bandwidth 
    guardBlock
      temp bool t_131 = Node_0.state == 3,
      temp bool t_132 = Node_0.granted == 0,
      temp bool t_133 = t_131 and t_132,
      temp bool t_134 = Bandwidth.state == 0,
      temp bool t_135 = t_133 and t_134;

    guardCondition t_135;
    effect
      Node_0.state = 4,
      Bandwidth.i = 0,
      Bandwidth.state = 2;

  process Node_1_Bandwidth 
    guardBlock
      temp bool t_136 = Node_1.state == 3,
      temp bool t_137 = Node_1.granted == 0,
      temp bool t_138 = t_136 and t_137,
      temp bool t_139 = Bandwidth.state == 0,
      temp bool t_140 = t_138 and t_139;

    guardCondition t_140;
    effect
      Node_1.state = 4,
      Bandwidth.i = 1,
      Bandwidth.state = 2;

  process Node_2_Bandwidth 
    guardBlock
      temp bool t_141 = Node_2.state == 3,
      temp bool t_142 = Node_2.granted == 0,
      temp bool t_143 = t_141 and t_142,
      temp bool t_144 = Bandwidth.state == 0,
      temp bool t_145 = t_143 and t_144;

    guardCondition t_145;
    effect
      Node_2.state = 4,
      Bandwidth.i = 2,
      Bandwidth.state = 2;

  process Node_3_Bandwidth 
    guardBlock
      temp bool t_146 = Node_3.state == 3,
      temp bool t_147 = Node_3.granted == 0,
      temp bool t_148 = t_146 and t_147,
      temp bool t_149 = Bandwidth.state == 0,
      temp bool t_150 = t_148 and t_149;

    guardCondition t_150;
    effect
      Node_3.state = 4,
      Bandwidth.i = 3,
      Bandwidth.state = 2;

  process Token_Node_1 
    guardBlock
      temp bool t_151 = Token.state == 1,
      temp bool t_152 = Token.i == 1,
      temp byte t_153 = in_RT[Token.i],
      temp bool t_154 = t_153 == 1,
      temp bool t_155 = t_152 and t_154,
      temp bool t_156 = t_151 and t_155,
      temp bool t_157 = Node_1.state == 0,
      temp bool t_158 = t_156 and t_157;

    guardCondition t_158;
    effect
      Token.state = 2,
      Node_1.rt = 1,
      Node_1.state = 1;

  process Token_Node_1 
    guardBlock
      temp bool t_159 = Token.state == 3,
      temp bool t_160 = Token.NRT_count > 0,
      temp bool t_161 = Token.next == 1,
      temp bool t_162 = t_160 and t_161,
      temp bool t_163 = t_159 and t_162,
      temp bool t_164 = Node_1.state == 0,
      temp bool t_165 = t_163 and t_164;

    guardCondition t_165;
    effect
      Token.state = 4,
      Node_1.rt = 0,
      Node_1.state = 1;

  process Bandwidth_Node_0 
    guardBlock
      temp bool t_166 = Bandwidth.state == 2,
      temp bool t_167 = RT_count < 2,
      temp bool t_168 = t_166 and t_167,
      temp bool t_169 = Node_0.state == 4,
      temp bool t_170 = t_168 and t_169;

    guardCondition t_170;
    effect
      Bandwidth.state = 0,
      temp byte t_171 = RT_count + 1,
      RT_count = t_171,
      in_RT[Bandwidth.i] = 1,
      Node_0.state = 5;

  process Bandwidth_Node_1 
    guardBlock
      temp bool t_172 = Bandwidth.state == 2,
      temp bool t_173 = RT_count < 2,
      temp bool t_174 = t_172 and t_173,
      temp bool t_175 = Node_1.state == 4,
      temp bool t_176 = t_174 and t_175;

    guardCondition t_176;
    effect
      Bandwidth.state = 0,
      temp byte t_177 = RT_count + 1,
      RT_count = t_177,
      in_RT[Bandwidth.i] = 1,
      Node_1.state = 5;

  process Bandwidth_Node_2 
    guardBlock
      temp bool t_178 = Bandwidth.state == 2,
      temp bool t_179 = RT_count < 2,
      temp bool t_180 = t_178 and t_179,
      temp bool t_181 = Node_2.state == 4,
      temp bool t_182 = t_180 and t_181;

    guardCondition t_182;
    effect
      Bandwidth.state = 0,
      temp byte t_183 = RT_count + 1,
      RT_count = t_183,
      in_RT[Bandwidth.i] = 1,
      Node_2.state = 5;

  process Bandwidth_Node_3 
    guardBlock
      temp bool t_184 = Bandwidth.state == 2,
      temp bool t_185 = RT_count < 2,
      temp bool t_186 = t_184 and t_185,
      temp bool t_187 = Node_3.state == 4,
      temp bool t_188 = t_186 and t_187;

    guardCondition t_188;
    effect
      Bandwidth.state = 0,
      temp byte t_189 = RT_count + 1,
      RT_count = t_189,
      in_RT[Bandwidth.i] = 1,
      Node_3.state = 5;

  process Node_0_Bandwidth 
    guardBlock
      temp bool t_190 = Node_0.state == 2,
      temp bool t_191 = Bandwidth.state == 0,
      temp bool t_192 = t_190 and t_191;

    guardCondition t_192;
    effect
      Node_0.state = 8,
      Node_0.granted = 0,
      Bandwidth.i = 0,
      Bandwidth.state = 1;

  process Node_1_Bandwidth 
    guardBlock
      temp bool t_193 = Node_1.state == 2,
      temp bool t_194 = Bandwidth.state == 0,
      temp bool t_195 = t_193 and t_194;

    guardCondition t_195;
    effect
      Node_1.state = 8,
      Node_1.granted = 0,
      Bandwidth.i = 1,
      Bandwidth.state = 1;

  process Node_2_Bandwidth 
    guardBlock
      temp bool t_196 = Node_2.state == 2,
      temp bool t_197 = Bandwidth.state == 0,
      temp bool t_198 = t_196 and t_197;

    guardCondition t_198;
    effect
      Node_2.state = 8,
      Node_2.granted = 0,
      Bandwidth.i = 2,
      Bandwidth.state = 1;

  process Node_3_Bandwidth 
    guardBlock
      temp bool t_199 = Node_3.state == 2,
      temp bool t_200 = Bandwidth.state == 0,
      temp bool t_201 = t_199 and t_200;

    guardCondition t_201;
    effect
      Node_3.state = 8,
      Node_3.granted = 0,
      Bandwidth.i = 3,
      Bandwidth.state = 1;

  process Token_Node_3 
    guardBlock
      temp bool t_202 = Token.state == 1,
      temp bool t_203 = Token.i == 3,
      temp byte t_204 = in_RT[Token.i],
      temp bool t_205 = t_204 == 1,
      temp bool t_206 = t_203 and t_205,
      temp bool t_207 = t_202 and t_206,
      temp bool t_208 = Node_3.state == 0,
      temp bool t_209 = t_207 and t_208;

    guardCondition t_209;
    effect
      Token.state = 2,
      Node_3.rt = 1,
      Node_3.state = 1;

  process Token_Node_3 
    guardBlock
      temp bool t_210 = Token.state == 3,
      temp bool t_211 = Token.NRT_count > 0,
      temp bool t_212 = Token.next == 3,
      temp bool t_213 = t_211 and t_212,
      temp bool t_214 = t_210 and t_213,
      temp bool t_215 = Node_3.state == 0,
      temp bool t_216 = t_214 and t_215;

    guardCondition t_216;
    effect
      Token.state = 4,
      Node_3.rt = 0,
      Node_3.state = 1;

  process Token_Node_2 
    guardBlock
      temp bool t_217 = Token.state == 1,
      temp bool t_218 = Token.i == 2,
      temp byte t_219 = in_RT[Token.i],
      temp bool t_220 = t_219 == 1,
      temp bool t_221 = t_218 and t_220,
      temp bool t_222 = t_217 and t_221,
      temp bool t_223 = Node_2.state == 0,
      temp bool t_224 = t_222 and t_223;

    guardCondition t_224;
    effect
      Token.state = 2,
      Node_2.rt = 1,
      Node_2.state = 1;

  process Token_Node_2 
    guardBlock
      temp bool t_225 = Token.state == 3,
      temp bool t_226 = Token.NRT_count > 0,
      temp bool t_227 = Token.next == 2,
      temp bool t_228 = t_226 and t_227,
      temp bool t_229 = t_225 and t_228,
      temp bool t_230 = Node_2.state == 0,
      temp bool t_231 = t_229 and t_230;

    guardCondition t_231;
    effect
      Token.state = 4,
      Node_2.rt = 0,
      Node_2.state = 1;

  process Bandwidth_Node_0 
    guardBlock
      temp bool t_232 = Bandwidth.state == 2,
      temp bool t_233 = RT_count >= 2,
      temp bool t_234 = t_232 and t_233,
      temp bool t_235 = Node_0.state == 4,
      temp bool t_236 = t_234 and t_235;

    guardCondition t_236;
    effect
      Bandwidth.state = 0,
      Node_0.state = 6;

  process Bandwidth_Node_1 
    guardBlock
      temp bool t_237 = Bandwidth.state == 2,
      temp bool t_238 = RT_count >= 2,
      temp bool t_239 = t_237 and t_238,
      temp bool t_240 = Node_1.state == 4,
      temp bool t_241 = t_239 and t_240;

    guardCondition t_241;
    effect
      Bandwidth.state = 0,
      Node_1.state = 6;

  process Bandwidth_Node_2 
    guardBlock
      temp bool t_242 = Bandwidth.state == 2,
      temp bool t_243 = RT_count >= 2,
      temp bool t_244 = t_242 and t_243,
      temp bool t_245 = Node_2.state == 4,
      temp bool t_246 = t_244 and t_245;

    guardCondition t_246;
    effect
      Bandwidth.state = 0,
      Node_2.state = 6;

  process Bandwidth_Node_3 
    guardBlock
      temp bool t_247 = Bandwidth.state == 2,
      temp bool t_248 = RT_count >= 2,
      temp bool t_249 = t_247 and t_248,
      temp bool t_250 = Node_3.state == 4,
      temp bool t_251 = t_249 and t_250;

    guardCondition t_251;
    effect
      Bandwidth.state = 0,
      Node_3.state = 6;

  process Node_0_Token 
    guardBlock
      temp bool t_252 = Node_0.state == 6,
      temp bool t_253 = Token.state == 2,
      temp bool t_254 = t_252 and t_253;

    guardCondition t_254;
    effect
      Node_0.state = 0,
      Token.state = 1,
      temp byte t_255 = Token.i + 1,
      Token.i = t_255;

  process Node_0_Token 
    guardBlock
      temp bool t_256 = Node_0.state == 6,
      temp bool t_257 = Token.state == 4,
      temp bool t_258 = t_256 and t_257;

    guardCondition t_258;
    effect
      Node_0.state = 0,
      Token.state = 3,
      temp byte t_259 = Token.next + 1,
      temp byte t_260 = t_259 % 4,
      Token.next = t_260,
      temp byte t_261 = Token.NRT_count - 1,
      Token.NRT_count = t_261;

  process Node_1_Token 
    guardBlock
      temp bool t_262 = Node_1.state == 6,
      temp bool t_263 = Token.state == 2,
      temp bool t_264 = t_262 and t_263;

    guardCondition t_264;
    effect
      Node_1.state = 0,
      Token.state = 1,
      temp byte t_265 = Token.i + 1,
      Token.i = t_265;

  process Node_1_Token 
    guardBlock
      temp bool t_266 = Node_1.state == 6,
      temp bool t_267 = Token.state == 4,
      temp bool t_268 = t_266 and t_267;

    guardCondition t_268;
    effect
      Node_1.state = 0,
      Token.state = 3,
      temp byte t_269 = Token.next + 1,
      temp byte t_270 = t_269 % 4,
      Token.next = t_270,
      temp byte t_271 = Token.NRT_count - 1,
      Token.NRT_count = t_271;

  process Node_2_Token 
    guardBlock
      temp bool t_272 = Node_2.state == 6,
      temp bool t_273 = Token.state == 2,
      temp bool t_274 = t_272 and t_273;

    guardCondition t_274;
    effect
      Node_2.state = 0,
      Token.state = 1,
      temp byte t_275 = Token.i + 1,
      Token.i = t_275;

  process Node_2_Token 
    guardBlock
      temp bool t_276 = Node_2.state == 6,
      temp bool t_277 = Token.state == 4,
      temp bool t_278 = t_276 and t_277;

    guardCondition t_278;
    effect
      Node_2.state = 0,
      Token.state = 3,
      temp byte t_279 = Token.next + 1,
      temp byte t_280 = t_279 % 4,
      Token.next = t_280,
      temp byte t_281 = Token.NRT_count - 1,
      Token.NRT_count = t_281;

  process Node_3_Token 
    guardBlock
      temp bool t_282 = Node_3.state == 6,
      temp bool t_283 = Token.state == 2,
      temp bool t_284 = t_282 and t_283;

    guardCondition t_284;
    effect
      Node_3.state = 0,
      Token.state = 1,
      temp byte t_285 = Token.i + 1,
      Token.i = t_285;

  process Node_3_Token 
    guardBlock
      temp bool t_286 = Node_3.state == 6,
      temp bool t_287 = Token.state == 4,
      temp bool t_288 = t_286 and t_287;

    guardCondition t_288;
    effect
      Node_3.state = 0,
      Token.state = 3,
      temp byte t_289 = Token.next + 1,
      temp byte t_290 = t_289 % 4,
      Token.next = t_290,
      temp byte t_291 = Token.NRT_count - 1,
      Token.NRT_count = t_291;

accepting conditions
  LTL_property.state == 0

