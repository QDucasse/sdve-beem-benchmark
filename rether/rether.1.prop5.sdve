byte[3] in_RT = {0, 0, 0};
byte RT_count = 0;
state {idle(0), rel(1), res(2), error_st(3)} Bandwidth.state = 0;
byte Bandwidth.i = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_0.state = 0;
byte Node_0.rt = 0;
byte Node_0.granted = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_1.state = 0;
byte Node_1.rt = 0;
byte Node_1.granted = 0;
state {idle(0), start(1), RT_action(2), NRT_action(3), want_RT(4), reserved(5), finish(6), error_st(7), wait_ok(8)} Node_2.state = 0;
byte Node_2.rt = 0;
byte Node_2.granted = 0;
state {start(0), RT_phase(1), RT_wait(2), NRT_phase(3), NRT_wait(4), cycle_end(5)} Token.state = 0;
byte Token.i = 0;
byte Token.NRT_count = 5;
byte Token.next = 0;
state {q1(0), q2(1)} LTL_property.state = 0;
temp bool t_0 = false;
temp byte t_1 = 0;
temp bool t_2 = false;
temp bool t_3 = false;
temp bool t_4 = false;
temp bool t_5 = false;
temp bool t_6 = false;
temp bool t_7 = false;
temp bool t_8 = false;
temp bool t_9 = false;
temp bool t_10 = false;
temp bool t_11 = false;
temp bool t_12 = false;
temp bool t_13 = false;
temp bool t_14 = false;
temp bool t_15 = false;
temp bool t_16 = false;
temp bool t_17 = false;
temp bool t_18 = false;
temp bool t_19 = false;
temp bool t_20 = false;
temp bool t_21 = false;
temp bool t_22 = false;
temp bool t_23 = false;
temp bool t_24 = false;
temp bool t_25 = false;
temp bool t_26 = false;
temp bool t_27 = false;
temp bool t_28 = false;
temp bool t_29 = false;
temp bool t_30 = false;
temp bool t_31 = false;
temp bool t_32 = false;
temp bool t_33 = false;
temp bool t_34 = false;
temp bool t_35 = false;
temp bool t_36 = false;
temp bool t_37 = false;
temp bool t_38 = false;
temp bool t_39 = false;
temp bool t_40 = false;
temp bool t_41 = false;
temp bool t_42 = false;
temp byte t_43 = 0;
temp bool t_44 = false;
temp bool t_45 = false;
temp bool t_46 = false;
temp int t_47 = 0;
temp bool t_48 = false;
temp bool t_49 = false;
temp bool t_50 = false;
temp bool t_51 = false;
temp bool t_52 = false;
temp bool t_53 = false;
temp bool t_54 = false;
temp int t_55 = 0;
temp bool t_56 = false;
temp bool t_57 = false;
temp bool t_58 = false;
temp bool t_59 = false;
temp bool t_60 = false;
temp bool t_61 = false;
temp bool t_62 = false;
temp bool t_63 = false;
temp bool t_64 = false;
temp bool t_65 = false;
temp bool t_66 = false;
temp bool t_67 = false;
temp bool t_68 = false;
temp bool t_69 = false;
temp int t_70 = 0;
temp bool t_71 = false;
temp bool t_72 = false;
temp bool t_73 = false;
temp bool t_74 = false;
temp bool t_75 = false;
temp int t_76 = 0;
temp bool t_77 = false;
temp bool t_78 = false;
temp bool t_79 = false;
temp bool t_80 = false;
temp bool t_81 = false;
temp int t_82 = 0;
temp bool t_83 = false;
temp byte t_84 = 0;
temp bool t_85 = false;
temp bool t_86 = false;
temp bool t_87 = false;
temp bool t_88 = false;
temp int t_89 = 0;
temp bool t_90 = false;
temp byte t_91 = 0;
temp bool t_92 = false;
temp bool t_93 = false;
temp bool t_94 = false;
temp bool t_95 = false;
temp int t_96 = 0;
temp bool t_97 = false;
temp byte t_98 = 0;
temp bool t_99 = false;
temp bool t_100 = false;
temp bool t_101 = false;
temp bool t_102 = false;
temp int t_103 = 0;
temp bool t_104 = false;
temp bool t_105 = false;
temp bool t_106 = false;
temp bool t_107 = false;
temp bool t_108 = false;
temp bool t_109 = false;
temp bool t_110 = false;
temp bool t_111 = false;
temp bool t_112 = false;
temp bool t_113 = false;
temp bool t_114 = false;
temp bool t_115 = false;
temp bool t_116 = false;
temp bool t_117 = false;
temp bool t_118 = false;
temp bool t_119 = false;
temp bool t_120 = false;
temp byte t_121 = 0;
temp bool t_122 = false;
temp bool t_123 = false;
temp bool t_124 = false;
temp bool t_125 = false;
temp bool t_126 = false;
temp bool t_127 = false;
temp bool t_128 = false;
temp bool t_129 = false;
temp bool t_130 = false;
temp bool t_131 = false;
temp bool t_132 = false;
temp bool t_133 = false;
temp bool t_134 = false;
temp bool t_135 = false;
temp bool t_136 = false;
temp bool t_137 = false;
temp bool t_138 = false;
temp bool t_139 = false;
temp bool t_140 = false;
temp bool t_141 = false;
temp bool t_142 = false;
temp bool t_143 = false;
temp bool t_144 = false;
temp byte t_145 = 0;
temp bool t_146 = false;
temp bool t_147 = false;
temp bool t_148 = false;
temp bool t_149 = false;
temp bool t_150 = false;
temp bool t_151 = false;
temp bool t_152 = false;
temp bool t_153 = false;
temp bool t_154 = false;
temp bool t_155 = false;
temp bool t_156 = false;
temp bool t_157 = false;
temp bool t_158 = false;
temp bool t_159 = false;
temp bool t_160 = false;
temp int t_161 = 0;
temp bool t_162 = false;
temp bool t_163 = false;
temp bool t_164 = false;
temp int t_165 = 0;
temp int t_166 = 0;
temp int t_167 = 0;
temp bool t_168 = false;
temp bool t_169 = false;
temp bool t_170 = false;
temp int t_171 = 0;
temp bool t_172 = false;
temp bool t_173 = false;
temp bool t_174 = false;
temp int t_175 = 0;
temp int t_176 = 0;
temp int t_177 = 0;
temp bool t_178 = false;
temp bool t_179 = false;
temp bool t_180 = false;
temp int t_181 = 0;
temp bool t_182 = false;
temp bool t_183 = false;
temp bool t_184 = false;
temp int t_185 = 0;
temp int t_186 = 0;
temp int t_187 = 0;
temp bool t_188 = false;
temp bool t_189 = false;
temp bool t_190 = false;
temp bool t_191 = false;
temp bool t_192 = false;
temp bool t_193 = false;
temp bool t_194 = false;
temp bool t_195 = false;
temp bool t_196 = false;
temp bool t_197 = false;
temp bool t_198 = false;
temp bool t_199 = false;
temp bool t_200 = false;
temp bool t_201 = false;
temp bool t_202 = false;
temp bool t_203 = false;
temp bool t_204 = false;
temp byte t_205 = 0;
temp bool t_206 = false;
temp bool t_207 = false;
temp bool t_208 = false;
temp bool t_209 = false;
temp bool t_210 = false;
temp bool t_211 = false;
temp bool t_212 = false;
temp bool t_213 = false;
temp bool t_214 = false;
temp bool t_215 = false;
temp bool t_216 = false;
temp bool t_217 = false;
	process Bandwidth 
		guardBlock
			t_0 = Bandwidth.state == 1,
			t_1 = in_RT[Bandwidth.i],
			t_2 = t_1 == 0,
			t_3 = t_0 and t_2;

		guardCondition t_3;
		effect
			Bandwidth.state = 3;

	process Node_0 
		guardBlock
			t_4 = Node_0.state == 1,
			t_5 = Node_0.rt == 1,
			t_6 = t_4 and t_5;

		guardCondition t_6;
		effect
			Node_0.state = 2;

	process Node_0 
		guardBlock
			t_7 = Node_0.state == 1,
			t_8 = Node_0.rt == 0,
			t_9 = t_7 and t_8;

		guardCondition t_9;
		effect
			Node_0.state = 3;

	process Node_0 
		guardBlock
			t_10 = Node_0.state == 2,
			t_11 = Node_0.granted == 0,
			t_12 = t_10 and t_11;

		guardCondition t_12;
		effect
			Node_0.state = 7;

	process Node_0 
		guardBlock
			t_13 = Node_0.state == 2;

		guardCondition t_13;
		effect
			Node_0.state = 6;

	process Node_0 
		guardBlock
			t_14 = Node_0.state == 3;

		guardCondition t_14;
		effect
			Node_0.state = 6;

	process Node_0 
		guardBlock
			t_15 = Node_0.state == 5;

		guardCondition t_15;
		effect
			Node_0.state = 6,
			Node_0.granted = 1;

	process Node_1 
		guardBlock
			t_16 = Node_1.state == 1,
			t_17 = Node_1.rt == 1,
			t_18 = t_16 and t_17;

		guardCondition t_18;
		effect
			Node_1.state = 2;

	process Node_1 
		guardBlock
			t_19 = Node_1.state == 1,
			t_20 = Node_1.rt == 0,
			t_21 = t_19 and t_20;

		guardCondition t_21;
		effect
			Node_1.state = 3;

	process Node_1 
		guardBlock
			t_22 = Node_1.state == 2,
			t_23 = Node_1.granted == 0,
			t_24 = t_22 and t_23;

		guardCondition t_24;
		effect
			Node_1.state = 7;

	process Node_1 
		guardBlock
			t_25 = Node_1.state == 2;

		guardCondition t_25;
		effect
			Node_1.state = 6;

	process Node_1 
		guardBlock
			t_26 = Node_1.state == 3;

		guardCondition t_26;
		effect
			Node_1.state = 6;

	process Node_1 
		guardBlock
			t_27 = Node_1.state == 5;

		guardCondition t_27;
		effect
			Node_1.state = 6,
			Node_1.granted = 1;

	process Node_2 
		guardBlock
			t_28 = Node_2.state == 1,
			t_29 = Node_2.rt == 1,
			t_30 = t_28 and t_29;

		guardCondition t_30;
		effect
			Node_2.state = 2;

	process Node_2 
		guardBlock
			t_31 = Node_2.state == 1,
			t_32 = Node_2.rt == 0,
			t_33 = t_31 and t_32;

		guardCondition t_33;
		effect
			Node_2.state = 3;

	process Node_2 
		guardBlock
			t_34 = Node_2.state == 2,
			t_35 = Node_2.granted == 0,
			t_36 = t_34 and t_35;

		guardCondition t_36;
		effect
			Node_2.state = 7;

	process Node_2 
		guardBlock
			t_37 = Node_2.state == 2;

		guardCondition t_37;
		effect
			Node_2.state = 6;

	process Node_2 
		guardBlock
			t_38 = Node_2.state == 3;

		guardCondition t_38;
		effect
			Node_2.state = 6;

	process Node_2 
		guardBlock
			t_39 = Node_2.state == 5;

		guardCondition t_39;
		effect
			Node_2.state = 6,
			Node_2.granted = 1;

	process Token 
		guardBlock
			t_40 = Token.state == 0;

		guardCondition t_40;
		effect
			Token.state = 1,
			Token.i = 0;

	process Token 
		guardBlock
			t_41 = Token.state == 1,
			t_42 = Token.i < 3,
			t_43 = in_RT[Token.i],
			t_44 = t_43 == 0,
			t_45 = t_42 and t_44,
			t_46 = t_41 and t_45;

		guardCondition t_46;
		effect
			Token.state = 1,
			t_47 = Token.i + 1,
			Token.i = t_47;

	process Token 
		guardBlock
			t_48 = Token.state == 1,
			t_49 = Token.i == 3,
			t_50 = t_48 and t_49;

		guardCondition t_50;
		effect
			Token.state = 3;

	process Token 
		guardBlock
			t_51 = Token.state == 3,
			t_52 = Token.NRT_count == 0,
			t_53 = t_51 and t_52;

		guardCondition t_53;
		effect
			Token.state = 5;

	process Token 
		guardBlock
			t_54 = Token.state == 5;

		guardCondition t_54;
		effect
			Token.state = 0,
			t_55 = 5 - RT_count,
			Token.NRT_count = t_55;

	process LTL_property 
		guardBlock
			t_56 = LTL_property.state == 0;

		guardCondition t_56;
		effect
			LTL_property.state = 0;

	process LTL_property 
		guardBlock
			t_57 = LTL_property.state == 0,
			t_58 = Node_0.state == 3,
			t_59 = not t_58,
			t_60 = t_57 and t_59;

		guardCondition t_60;
		effect
			LTL_property.state = 1;

	process LTL_property 
		guardBlock
			t_61 = LTL_property.state == 1,
			t_62 = Node_0.state == 3,
			t_63 = not t_62,
			t_64 = t_61 and t_63;

		guardCondition t_64;
		effect
			LTL_property.state = 1;

	process Bandwidth_Node_0 
		guardBlock
			t_65 = Bandwidth.state == 2,
			t_66 = RT_count < 2,
			t_67 = t_65 and t_66,
			t_68 = Node_0.state == 4,
			t_69 = t_67 and t_68;

		guardCondition t_69;
		effect
			Bandwidth.state = 0,
			t_70 = RT_count + 1,
			RT_count = t_70,
			in_RT[Bandwidth.i] = 1,
			Node_0.state = 5;

	process Bandwidth_Node_1 
		guardBlock
			t_71 = Bandwidth.state == 2,
			t_72 = RT_count < 2,
			t_73 = t_71 and t_72,
			t_74 = Node_1.state == 4,
			t_75 = t_73 and t_74;

		guardCondition t_75;
		effect
			Bandwidth.state = 0,
			t_76 = RT_count + 1,
			RT_count = t_76,
			in_RT[Bandwidth.i] = 1,
			Node_1.state = 5;

	process Bandwidth_Node_2 
		guardBlock
			t_77 = Bandwidth.state == 2,
			t_78 = RT_count < 2,
			t_79 = t_77 and t_78,
			t_80 = Node_2.state == 4,
			t_81 = t_79 and t_80;

		guardCondition t_81;
		effect
			Bandwidth.state = 0,
			t_82 = RT_count + 1,
			RT_count = t_82,
			in_RT[Bandwidth.i] = 1,
			Node_2.state = 5;

	process Bandwidth_Node_0 
		guardBlock
			t_83 = Bandwidth.state == 1,
			t_84 = in_RT[Bandwidth.i],
			t_85 = t_84 == 1,
			t_86 = t_83 and t_85,
			t_87 = Node_0.state == 8,
			t_88 = t_86 and t_87;

		guardCondition t_88;
		effect
			Bandwidth.state = 0,
			in_RT[Bandwidth.i] = 0,
			t_89 = RT_count - 1,
			RT_count = t_89,
			Node_0.state = 6;

	process Bandwidth_Node_1 
		guardBlock
			t_90 = Bandwidth.state == 1,
			t_91 = in_RT[Bandwidth.i],
			t_92 = t_91 == 1,
			t_93 = t_90 and t_92,
			t_94 = Node_1.state == 8,
			t_95 = t_93 and t_94;

		guardCondition t_95;
		effect
			Bandwidth.state = 0,
			in_RT[Bandwidth.i] = 0,
			t_96 = RT_count - 1,
			RT_count = t_96,
			Node_1.state = 6;

	process Bandwidth_Node_2 
		guardBlock
			t_97 = Bandwidth.state == 1,
			t_98 = in_RT[Bandwidth.i],
			t_99 = t_98 == 1,
			t_100 = t_97 and t_99,
			t_101 = Node_2.state == 8,
			t_102 = t_100 and t_101;

		guardCondition t_102;
		effect
			Bandwidth.state = 0,
			in_RT[Bandwidth.i] = 0,
			t_103 = RT_count - 1,
			RT_count = t_103,
			Node_2.state = 6;

	process Bandwidth_Node_0 
		guardBlock
			t_104 = Bandwidth.state == 2,
			t_105 = RT_count >= 2,
			t_106 = t_104 and t_105,
			t_107 = Node_0.state == 4,
			t_108 = t_106 and t_107;

		guardCondition t_108;
		effect
			Bandwidth.state = 0,
			Node_0.state = 6;

	process Bandwidth_Node_1 
		guardBlock
			t_109 = Bandwidth.state == 2,
			t_110 = RT_count >= 2,
			t_111 = t_109 and t_110,
			t_112 = Node_1.state == 4,
			t_113 = t_111 and t_112;

		guardCondition t_113;
		effect
			Bandwidth.state = 0,
			Node_1.state = 6;

	process Bandwidth_Node_2 
		guardBlock
			t_114 = Bandwidth.state == 2,
			t_115 = RT_count >= 2,
			t_116 = t_114 and t_115,
			t_117 = Node_2.state == 4,
			t_118 = t_116 and t_117;

		guardCondition t_118;
		effect
			Bandwidth.state = 0,
			Node_2.state = 6;

	process Token_Node_0 
		guardBlock
			t_119 = Token.state == 1,
			t_120 = Token.i == 0,
			t_121 = in_RT[Token.i],
			t_122 = t_121 == 1,
			t_123 = t_120 and t_122,
			t_124 = t_119 and t_123,
			t_125 = Node_0.state == 0,
			t_126 = t_124 and t_125;

		guardCondition t_126;
		effect
			Token.state = 2,
			Node_0.rt = 1,
			Node_0.state = 1;

	process Token_Node_0 
		guardBlock
			t_127 = Token.state == 3,
			t_128 = Token.NRT_count > 0,
			t_129 = Token.next == 0,
			t_130 = t_128 and t_129,
			t_131 = t_127 and t_130,
			t_132 = Node_0.state == 0,
			t_133 = t_131 and t_132;

		guardCondition t_133;
		effect
			Token.state = 4,
			Node_0.rt = 0,
			Node_0.state = 1;

	process Node_0_Bandwidth 
		guardBlock
			t_134 = Node_0.state == 2,
			t_135 = Bandwidth.state == 0,
			t_136 = t_134 and t_135;

		guardCondition t_136;
		effect
			Node_0.state = 8,
			Node_0.granted = 0,
			Bandwidth.i = 0,
			Bandwidth.state = 1;

	process Node_1_Bandwidth 
		guardBlock
			t_137 = Node_1.state == 2,
			t_138 = Bandwidth.state == 0,
			t_139 = t_137 and t_138;

		guardCondition t_139;
		effect
			Node_1.state = 8,
			Node_1.granted = 0,
			Bandwidth.i = 1,
			Bandwidth.state = 1;

	process Node_2_Bandwidth 
		guardBlock
			t_140 = Node_2.state == 2,
			t_141 = Bandwidth.state == 0,
			t_142 = t_140 and t_141;

		guardCondition t_142;
		effect
			Node_2.state = 8,
			Node_2.granted = 0,
			Bandwidth.i = 2,
			Bandwidth.state = 1;

	process Token_Node_2 
		guardBlock
			t_143 = Token.state == 1,
			t_144 = Token.i == 2,
			t_145 = in_RT[Token.i],
			t_146 = t_145 == 1,
			t_147 = t_144 and t_146,
			t_148 = t_143 and t_147,
			t_149 = Node_2.state == 0,
			t_150 = t_148 and t_149;

		guardCondition t_150;
		effect
			Token.state = 2,
			Node_2.rt = 1,
			Node_2.state = 1;

	process Token_Node_2 
		guardBlock
			t_151 = Token.state == 3,
			t_152 = Token.NRT_count > 0,
			t_153 = Token.next == 2,
			t_154 = t_152 and t_153,
			t_155 = t_151 and t_154,
			t_156 = Node_2.state == 0,
			t_157 = t_155 and t_156;

		guardCondition t_157;
		effect
			Token.state = 4,
			Node_2.rt = 0,
			Node_2.state = 1;

	process Node_0_Token 
		guardBlock
			t_158 = Node_0.state == 6,
			t_159 = Token.state == 2,
			t_160 = t_158 and t_159;

		guardCondition t_160;
		effect
			Node_0.state = 0,
			Token.state = 1,
			t_161 = Token.i + 1,
			Token.i = t_161;

	process Node_0_Token 
		guardBlock
			t_162 = Node_0.state == 6,
			t_163 = Token.state == 4,
			t_164 = t_162 and t_163;

		guardCondition t_164;
		effect
			Node_0.state = 0,
			Token.state = 3,
			t_165 = Token.next + 1,
			t_166 = t_165 % 3,
			Token.next = t_166,
			t_167 = Token.NRT_count - 1,
			Token.NRT_count = t_167;

	process Node_1_Token 
		guardBlock
			t_168 = Node_1.state == 6,
			t_169 = Token.state == 2,
			t_170 = t_168 and t_169;

		guardCondition t_170;
		effect
			Node_1.state = 0,
			Token.state = 1,
			t_171 = Token.i + 1,
			Token.i = t_171;

	process Node_1_Token 
		guardBlock
			t_172 = Node_1.state == 6,
			t_173 = Token.state == 4,
			t_174 = t_172 and t_173;

		guardCondition t_174;
		effect
			Node_1.state = 0,
			Token.state = 3,
			t_175 = Token.next + 1,
			t_176 = t_175 % 3,
			Token.next = t_176,
			t_177 = Token.NRT_count - 1,
			Token.NRT_count = t_177;

	process Node_2_Token 
		guardBlock
			t_178 = Node_2.state == 6,
			t_179 = Token.state == 2,
			t_180 = t_178 and t_179;

		guardCondition t_180;
		effect
			Node_2.state = 0,
			Token.state = 1,
			t_181 = Token.i + 1,
			Token.i = t_181;

	process Node_2_Token 
		guardBlock
			t_182 = Node_2.state == 6,
			t_183 = Token.state == 4,
			t_184 = t_182 and t_183;

		guardCondition t_184;
		effect
			Node_2.state = 0,
			Token.state = 3,
			t_185 = Token.next + 1,
			t_186 = t_185 % 3,
			Token.next = t_186,
			t_187 = Token.NRT_count - 1,
			Token.NRT_count = t_187;

	process Node_0_Bandwidth 
		guardBlock
			t_188 = Node_0.state == 3,
			t_189 = Node_0.granted == 0,
			t_190 = t_188 and t_189,
			t_191 = Bandwidth.state == 0,
			t_192 = t_190 and t_191;

		guardCondition t_192;
		effect
			Node_0.state = 4,
			Bandwidth.i = 0,
			Bandwidth.state = 2;

	process Node_1_Bandwidth 
		guardBlock
			t_193 = Node_1.state == 3,
			t_194 = Node_1.granted == 0,
			t_195 = t_193 and t_194,
			t_196 = Bandwidth.state == 0,
			t_197 = t_195 and t_196;

		guardCondition t_197;
		effect
			Node_1.state = 4,
			Bandwidth.i = 1,
			Bandwidth.state = 2;

	process Node_2_Bandwidth 
		guardBlock
			t_198 = Node_2.state == 3,
			t_199 = Node_2.granted == 0,
			t_200 = t_198 and t_199,
			t_201 = Bandwidth.state == 0,
			t_202 = t_200 and t_201;

		guardCondition t_202;
		effect
			Node_2.state = 4,
			Bandwidth.i = 2,
			Bandwidth.state = 2;

	process Token_Node_1 
		guardBlock
			t_203 = Token.state == 1,
			t_204 = Token.i == 1,
			t_205 = in_RT[Token.i],
			t_206 = t_205 == 1,
			t_207 = t_204 and t_206,
			t_208 = t_203 and t_207,
			t_209 = Node_1.state == 0,
			t_210 = t_208 and t_209;

		guardCondition t_210;
		effect
			Token.state = 2,
			Node_1.rt = 1,
			Node_1.state = 1;

	process Token_Node_1 
		guardBlock
			t_211 = Token.state == 3,
			t_212 = Token.NRT_count > 0,
			t_213 = Token.next == 1,
			t_214 = t_212 and t_213,
			t_215 = t_211 and t_214,
			t_216 = Node_1.state == 0,
			t_217 = t_215 and t_216;

		guardCondition t_217;
		effect
			Token.state = 4,
			Node_1.rt = 0,
			Node_1.state = 1;

accepting conditions
	LTL_property.state == 1

system async property LTL_property;
