state {q(0)} AtoB.state = 0;
state {q(0)} AtoC.state = 0;
state {q(0)} BtoA.state = 0;
state {q(0)} BtoC.state = 0;
state {q(0)} CtoA.state = 0;
state {q(0)} CtoB.state = 0;
byte a[16] = {100, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1};
byte a_act = 16;
byte b[16] = {100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
byte b_act = 1;
byte c[16] = {100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
byte c_act = 1;

  process AtoB 
    guardBlock
      temp bool t_0 = AtoB.state == 0,
      temp byte t_1 = a_act - 1,
      temp byte t_2 = a[t_1],
      temp byte t_3 = b_act - 1,
      temp byte t_4 = b[t_3],
      temp bool t_5 = t_2 < t_4,
      temp bool t_6 = t_0 and t_5;

    guardCondition t_6;
    effect
      AtoB.state = 0,
      temp byte t_7 = a_act - 1,
      temp byte t_8 = a[t_7],
      b[b_act] = t_8,
      temp byte t_9 = b_act + 1,
      b_act = t_9,
      temp byte t_10 = a_act - 1,
      a[t_10] = 0,
      temp byte t_11 = a_act - 1,
      a_act = t_11;

  process AtoC 
    guardBlock
      temp bool t_12 = AtoC.state == 0,
      temp byte t_13 = a_act - 1,
      temp byte t_14 = a[t_13],
      temp byte t_15 = c_act - 1,
      temp byte t_16 = c[t_15],
      temp bool t_17 = t_14 < t_16,
      temp bool t_18 = t_12 and t_17;

    guardCondition t_18;
    effect
      AtoC.state = 0,
      temp byte t_19 = a_act - 1,
      temp byte t_20 = a[t_19],
      c[c_act] = t_20,
      temp byte t_21 = c_act + 1,
      c_act = t_21,
      temp byte t_22 = a_act - 1,
      a[t_22] = 0,
      temp byte t_23 = a_act - 1,
      a_act = t_23;

  process BtoA 
    guardBlock
      temp bool t_24 = BtoA.state == 0,
      temp byte t_25 = b_act - 1,
      temp byte t_26 = b[t_25],
      temp byte t_27 = a_act - 1,
      temp byte t_28 = a[t_27],
      temp bool t_29 = t_26 < t_28,
      temp bool t_30 = t_24 and t_29;

    guardCondition t_30;
    effect
      BtoA.state = 0,
      temp byte t_31 = b_act - 1,
      temp byte t_32 = b[t_31],
      a[a_act] = t_32,
      temp byte t_33 = a_act + 1,
      a_act = t_33,
      temp byte t_34 = b_act - 1,
      b[t_34] = 0,
      temp byte t_35 = b_act - 1,
      b_act = t_35;

  process BtoC 
    guardBlock
      temp bool t_36 = BtoC.state == 0,
      temp byte t_37 = b_act - 1,
      temp byte t_38 = b[t_37],
      temp byte t_39 = c_act - 1,
      temp byte t_40 = c[t_39],
      temp bool t_41 = t_38 < t_40,
      temp bool t_42 = t_36 and t_41;

    guardCondition t_42;
    effect
      BtoC.state = 0,
      temp byte t_43 = b_act - 1,
      temp byte t_44 = b[t_43],
      c[c_act] = t_44,
      temp byte t_45 = c_act + 1,
      c_act = t_45,
      temp byte t_46 = b_act - 1,
      b[t_46] = 0,
      temp byte t_47 = b_act - 1,
      b_act = t_47;

  process CtoA 
    guardBlock
      temp bool t_48 = CtoA.state == 0,
      temp byte t_49 = c_act - 1,
      temp byte t_50 = c[t_49],
      temp byte t_51 = a_act - 1,
      temp byte t_52 = a[t_51],
      temp bool t_53 = t_50 < t_52,
      temp bool t_54 = t_48 and t_53;

    guardCondition t_54;
    effect
      CtoA.state = 0,
      temp byte t_55 = c_act - 1,
      temp byte t_56 = c[t_55],
      a[a_act] = t_56,
      temp byte t_57 = a_act + 1,
      a_act = t_57,
      temp byte t_58 = c_act - 1,
      c[t_58] = 0,
      temp byte t_59 = c_act - 1,
      c_act = t_59;

  process CtoB 
    guardBlock
      temp bool t_60 = CtoB.state == 0,
      temp byte t_61 = c_act - 1,
      temp byte t_62 = c[t_61],
      temp byte t_63 = b_act - 1,
      temp byte t_64 = b[t_63],
      temp bool t_65 = t_62 < t_64,
      temp bool t_66 = t_60 and t_65;

    guardCondition t_66;
    effect
      CtoB.state = 0,
      temp byte t_67 = c_act - 1,
      temp byte t_68 = c[t_67],
      b[b_act] = t_68,
      temp byte t_69 = b_act + 1,
      b_act = t_69,
      temp byte t_70 = c_act - 1,
      c[t_70] = 0,
      temp byte t_71 = c_act - 1,
      c_act = t_71;


